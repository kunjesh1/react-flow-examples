{"ast":null,"code":"var _jsxFileName = \"/Users/kunjeshkumar/Downloads/workflow-builder-example/src/NodeTypes/WorkflowNode.tsx\",\n  _s = $RefreshSig$();\nimport React, { memo } from 'react';\nimport { Handle, Position } from 'reactflow';\nimport cx from 'classnames';\nimport styles from './NodeTypes.module.css';\nimport useNodeClickHandler from '../hooks/useNodeClick';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkflowNode = _ref => {\n  _s();\n  let {\n    id,\n    data\n  } = _ref;\n  // see the hook implementation for details of the click handler\n  // calling onClick adds a child node to this node\n  const onClick = useNodeClickHandler(id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    className: cx(styles.node),\n    title: \"click to add a child node\",\n    children: [data.label, /*#__PURE__*/_jsxDEV(Handle, {\n      className: styles.handle,\n      type: \"target\",\n      position: Position.Top,\n      isConnectable: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      className: styles.handle,\n      type: \"source\",\n      position: Position.Bottom,\n      isConnectable: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(WorkflowNode, \"wPNxdgsmG/TJIGdW+gdCFi5tFYg=\", false, function () {\n  return [useNodeClickHandler];\n});\n_c = WorkflowNode;\nexport default _c2 = /*#__PURE__*/memo(WorkflowNode);\nvar _c, _c2;\n$RefreshReg$(_c, \"WorkflowNode\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","Handle","Position","cx","styles","useNodeClickHandler","WorkflowNode","id","data","onClick","node","label","handle","Top","Bottom"],"sources":["/Users/kunjeshkumar/Downloads/workflow-builder-example/src/NodeTypes/WorkflowNode.tsx"],"sourcesContent":["import React, { memo } from 'react';\nimport { Handle, Position, NodeProps } from 'reactflow';\nimport cx from 'classnames';\n\nimport styles from './NodeTypes.module.css';\nimport useNodeClickHandler from '../hooks/useNodeClick';\n\nconst WorkflowNode = ({ id, data }: NodeProps) => {\n  // see the hook implementation for details of the click handler\n  // calling onClick adds a child node to this node\n  const onClick = useNodeClickHandler(id);\n\n  return (\n    <div onClick={onClick} className={cx(styles.node)} title=\"click to add a child node\">\n      {data.label}\n      <Handle className={styles.handle} type=\"target\" position={Position.Top} isConnectable={false} />\n      <Handle className={styles.handle} type=\"source\" position={Position.Bottom} isConnectable={false} />\n    </div>\n  );\n};\n\nexport default memo(WorkflowNode);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,IAAI,QAAQ,OAAO;AACnC,SAASC,MAAM,EAAEC,QAAQ,QAAmB,WAAW;AACvD,OAAOC,EAAE,MAAM,YAAY;AAE3B,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,mBAAmB,MAAM,uBAAuB;AAAC;AAExD,MAAMC,YAAY,GAAG,QAA6B;EAAA;EAAA,IAA5B;IAAEC,EAAE;IAAEC;EAAgB,CAAC;EAC3C;EACA;EACA,MAAMC,OAAO,GAAGJ,mBAAmB,CAACE,EAAE,CAAC;EAEvC,oBACE;IAAK,OAAO,EAAEE,OAAQ;IAAC,SAAS,EAAEN,EAAE,CAACC,MAAM,CAACM,IAAI,CAAE;IAAC,KAAK,EAAC,2BAA2B;IAAA,WACjFF,IAAI,CAACG,KAAK,eACX,QAAC,MAAM;MAAC,SAAS,EAAEP,MAAM,CAACQ,MAAO;MAAC,IAAI,EAAC,QAAQ;MAAC,QAAQ,EAAEV,QAAQ,CAACW,GAAI;MAAC,aAAa,EAAE;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eAChG,QAAC,MAAM;MAAC,SAAS,EAAET,MAAM,CAACQ,MAAO;MAAC,IAAI,EAAC,QAAQ;MAAC,QAAQ,EAAEV,QAAQ,CAACY,MAAO;MAAC,aAAa,EAAE;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/F;AAEV,CAAC;AAAC,GAZIR,YAAY;EAAA,QAGAD,mBAAmB;AAAA;AAAA,KAH/BC,YAAY;AAclB,kCAAeN,IAAI,CAACM,YAAY,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}