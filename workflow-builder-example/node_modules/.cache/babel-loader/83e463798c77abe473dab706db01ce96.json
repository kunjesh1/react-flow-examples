{"ast":null,"code":"import { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { memo, useRef, useState, useEffect, useMemo, createContext, useContext, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport shallow from 'zustand/shallow';\nimport { useStore as useStore$1, createStore } from 'zustand';\nimport { zoom, zoomIdentity } from 'd3-zoom';\nimport { select, pointer } from 'd3-selection';\nimport { drag } from 'd3-drag';\nfunction Panel(_ref) {\n  let {\n    position,\n    children,\n    className,\n    ...rest\n  } = _ref;\n  const positionClasses = `${position}`.split('-');\n  return jsx(\"div\", {\n    className: cc(['react-flow__panel', className, ...positionClasses]),\n    ...rest,\n    children: children\n  });\n}\nfunction Attribution(_ref2) {\n  let {\n    proOptions,\n    position = 'bottom-right'\n  } = _ref2;\n  if (proOptions?.hideAttribution) {\n    return null;\n  }\n  return jsx(Panel, {\n    position: position,\n    className: \"react-flow__attribution\",\n    \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev\",\n    children: jsx(\"a\", {\n      href: \"https://reactflow.dev\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      \"aria-label\": \"React Flow attribution\",\n      children: \"React Flow\"\n    })\n  });\n}\nvar ConnectionMode;\n(function (ConnectionMode) {\n  ConnectionMode[\"Strict\"] = \"strict\";\n  ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n  PanOnScrollMode[\"Free\"] = \"free\";\n  PanOnScrollMode[\"Vertical\"] = \"vertical\";\n  PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nconst getDimensions = node => ({\n  width: node.offsetWidth,\n  height: node.offsetHeight\n});\nconst clamp = function (val) {\n  let min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  return Math.min(Math.max(val, min), max);\n};\nconst clampPosition = function () {\n  let position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    x: 0,\n    y: 0\n  };\n  let extent = arguments.length > 1 ? arguments[1] : undefined;\n  return {\n    x: clamp(position.x, extent[0][0], extent[1][0]),\n    y: clamp(position.y, extent[0][1], extent[1][1])\n  };\n};\nconst getHostForElement = element => element.getRootNode?.() || window?.document;\nconst getBoundsOfBoxes = (box1, box2) => ({\n  x: Math.min(box1.x, box2.x),\n  y: Math.min(box1.y, box2.y),\n  x2: Math.max(box1.x2, box2.x2),\n  y2: Math.max(box1.y2, box2.y2)\n});\nconst rectToBox = _ref3 => {\n  let {\n    x,\n    y,\n    width,\n    height\n  } = _ref3;\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height\n  };\n};\nconst boxToRect = _ref4 => {\n  let {\n    x,\n    y,\n    x2,\n    y2\n  } = _ref4;\n  return {\n    x,\n    y,\n    width: x2 - x,\n    height: y2 - y\n  };\n};\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nconst isNumeric = n => !isNaN(n) && isFinite(n);\nconst internalsSymbol = Symbol.for('internals');\n// used for a11y key board controls for nodes and edges\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\nconst devWarn = message => {\n  if (process.env.NODE_ENV === 'development') {\n    console.warn(`[React Flow]: ${message}`);\n  }\n};\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n  ConnectionLineType[\"Bezier\"] = \"default\";\n  ConnectionLineType[\"Straight\"] = \"straight\";\n  ConnectionLineType[\"Step\"] = \"step\";\n  ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n  ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n  MarkerType[\"Arrow\"] = \"arrow\";\n  MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\nvar Position;\n(function (Position) {\n  Position[\"Left\"] = \"left\";\n  Position[\"Top\"] = \"top\";\n  Position[\"Right\"] = \"right\";\n  Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\nconst EdgeText = _ref5 => {\n  let {\n    x,\n    y,\n    label,\n    labelStyle = {},\n    labelShowBg = true,\n    labelBgStyle = {},\n    labelBgPadding = [2, 4],\n    labelBgBorderRadius = 2,\n    children,\n    className,\n    ...rest\n  } = _ref5;\n  const edgeRef = useRef(null);\n  const [edgeTextBbox, setEdgeTextBbox] = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  });\n  const edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n  useEffect(() => {\n    if (edgeRef.current) {\n      const textBbox = edgeRef.current.getBBox();\n      setEdgeTextBbox({\n        x: textBbox.x,\n        y: textBbox.y,\n        width: textBbox.width,\n        height: textBbox.height\n      });\n    }\n  }, [label]);\n  if (typeof label === 'undefined' || !label) {\n    return null;\n  }\n  return jsxs(\"g\", {\n    transform: `translate(${x - edgeTextBbox.width / 2} ${y - edgeTextBbox.height / 2})`,\n    className: edgeTextClasses,\n    visibility: edgeTextBbox.width ? 'visible' : 'hidden',\n    ...rest,\n    children: [labelShowBg && jsx(\"rect\", {\n      width: edgeTextBbox.width + 2 * labelBgPadding[0],\n      x: -labelBgPadding[0],\n      y: -labelBgPadding[1],\n      height: edgeTextBbox.height + 2 * labelBgPadding[1],\n      className: \"react-flow__edge-textbg\",\n      style: labelBgStyle,\n      rx: labelBgBorderRadius,\n      ry: labelBgBorderRadius\n    }), jsx(\"text\", {\n      className: \"react-flow__edge-text\",\n      y: edgeTextBbox.height / 2,\n      dy: \"0.3em\",\n      ref: edgeRef,\n      style: labelStyle,\n      children: label\n    }), children]\n  });\n};\nvar EdgeText$1 = memo(EdgeText);\nconst BaseEdge = _ref6 => {\n  let {\n    path,\n    labelX,\n    labelY,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    markerEnd,\n    markerStart,\n    interactionWidth = 20\n  } = _ref6;\n  return jsxs(Fragment, {\n    children: [jsx(\"path\", {\n      style: style,\n      d: path,\n      fill: \"none\",\n      className: \"react-flow__edge-path\",\n      markerEnd: markerEnd,\n      markerStart: markerStart\n    }), interactionWidth && jsx(\"path\", {\n      d: path,\n      fill: \"none\",\n      strokeOpacity: 0,\n      strokeWidth: interactionWidth\n    }), label ? jsx(EdgeText$1, {\n      x: labelX,\n      y: labelY,\n      label: label,\n      labelStyle: labelStyle,\n      labelShowBg: labelShowBg,\n      labelBgStyle: labelBgStyle,\n      labelBgPadding: labelBgPadding,\n      labelBgBorderRadius: labelBgBorderRadius\n    }) : null]\n  });\n};\nBaseEdge.displayName = 'BaseEdge';\nconst getMarkerEnd = (markerType, markerEndId) => {\n  if (typeof markerEndId !== 'undefined' && markerEndId) {\n    return `url(#${markerEndId})`;\n  }\n  return typeof markerType !== 'undefined' ? `url(#react-flow__${markerType})` : 'none';\n};\nfunction getMouseHandler$1(id, getState, handler) {\n  return handler === undefined ? handler : event => {\n    const edge = getState().edges.find(e => e.id === id);\n    if (edge) {\n      handler(event, {\n        ...edge\n      });\n    }\n  };\n}\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter(_ref7) {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  } = _ref7;\n  const xOffset = Math.abs(targetX - sourceX) / 2;\n  const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n  const yOffset = Math.abs(targetY - sourceY) / 2;\n  const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n  return [centerX, centerY, xOffset, yOffset];\n}\nfunction getBezierEdgeCenter(_ref8) {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourceControlX,\n    sourceControlY,\n    targetControlX,\n    targetControlY\n  } = _ref8;\n  // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n  // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n  const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n  const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n  const offsetX = Math.abs(centerX - sourceX);\n  const offsetY = Math.abs(centerY - sourceY);\n  return [centerX, centerY, offsetX, offsetY];\n}\nfunction getControl(_ref9) {\n  let {\n    pos,\n    x1,\n    y1,\n    x2,\n    y2\n  } = _ref9;\n  if (pos === Position.Left || pos === Position.Right) {\n    return [0.5 * (x1 + x2), y1];\n  }\n  return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath(_ref10) {\n  let {\n    sourceX,\n    sourceY,\n    sourcePosition = Position.Bottom,\n    targetX,\n    targetY,\n    targetPosition = Position.Top\n  } = _ref10;\n  const [sourceControlX, sourceControlY] = getControl({\n    pos: sourcePosition,\n    x1: sourceX,\n    y1: sourceY,\n    x2: targetX,\n    y2: targetY\n  });\n  const [targetControlX, targetControlY] = getControl({\n    pos: targetPosition,\n    x1: targetX,\n    y1: targetY,\n    x2: sourceX,\n    y2: sourceY\n  });\n  const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourceControlX,\n    sourceControlY,\n    targetControlX,\n    targetControlY\n  });\n  return [`M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst SimpleBezierEdge = memo(_ref11 => {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourcePosition = Position.Bottom,\n    targetPosition = Position.Top,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    markerEnd,\n    markerStart,\n    interactionWidth\n  } = _ref11;\n  const [path, labelX, labelY] = getSimpleBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition\n  });\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\nconst handleDirections = {\n  [Position.Left]: {\n    x: -1,\n    y: 0\n  },\n  [Position.Right]: {\n    x: 1,\n    y: 0\n  },\n  [Position.Top]: {\n    x: 0,\n    y: -1\n  },\n  [Position.Bottom]: {\n    x: 0,\n    y: 1\n  }\n};\nconst getDirection = _ref12 => {\n  let {\n    source,\n    sourcePosition = Position.Bottom,\n    target\n  } = _ref12;\n  if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n    return source.x < target.x ? {\n      x: 1,\n      y: 0\n    } : {\n      x: -1,\n      y: 0\n    };\n  }\n  return source.y < target.y ? {\n    x: 0,\n    y: 1\n  } : {\n    x: 0,\n    y: -1\n  };\n};\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints(_ref13) {\n  let {\n    source,\n    sourcePosition = Position.Bottom,\n    target,\n    targetPosition = Position.Top,\n    center,\n    offset\n  } = _ref13;\n  const sourceDir = handleDirections[sourcePosition];\n  const targetDir = handleDirections[targetPosition];\n  const sourceGapped = {\n    x: source.x + sourceDir.x * offset,\n    y: source.y + sourceDir.y * offset\n  };\n  const targetGapped = {\n    x: target.x + targetDir.x * offset,\n    y: target.y + targetDir.y * offset\n  };\n  const dir = getDirection({\n    source: sourceGapped,\n    sourcePosition,\n    target: targetGapped\n  });\n  const dirAccessor = dir.x !== 0 ? 'x' : 'y';\n  const currDir = dir[dirAccessor];\n  let points = [];\n  let centerX, centerY;\n  const [defaultCenterX, defaultCenterY, defaultOffsetX, defaultOffsetY] = getEdgeCenter({\n    sourceX: source.x,\n    sourceY: source.y,\n    targetX: target.x,\n    targetY: target.y\n  });\n  // opposite handle positions, default case\n  if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n    centerX = center.x || defaultCenterX;\n    centerY = center.y || defaultCenterY;\n    //    --->\n    //    |\n    // >---\n    const verticalSplit = [{\n      x: centerX,\n      y: sourceGapped.y\n    }, {\n      x: centerX,\n      y: targetGapped.y\n    }];\n    //    |\n    //  ---\n    //  |\n    const horizontalSplit = [{\n      x: sourceGapped.x,\n      y: centerY\n    }, {\n      x: targetGapped.x,\n      y: centerY\n    }];\n    if (sourceDir[dirAccessor] === currDir) {\n      points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n    } else {\n      points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n    }\n  } else {\n    // sourceTarget means we take x from source and y from target, targetSource is the opposite\n    const sourceTarget = [{\n      x: sourceGapped.x,\n      y: targetGapped.y\n    }];\n    const targetSource = [{\n      x: targetGapped.x,\n      y: sourceGapped.y\n    }];\n    // this handles edges with same handle positions\n    if (dirAccessor === 'x') {\n      points = sourceDir.x === currDir ? targetSource : sourceTarget;\n    } else {\n      points = sourceDir.y === currDir ? sourceTarget : targetSource;\n    }\n    // these are conditions for handling mixed handle positions like Right -> Bottom for example\n    if (sourcePosition !== targetPosition) {\n      const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n      const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n      const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n      const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n      const flipSourceTarget = sourceDir[dirAccessor] === 1 && (!isSameDir && sourceGtTargetOppo || isSameDir && sourceLtTargetOppo) || sourceDir[dirAccessor] !== 1 && (!isSameDir && sourceLtTargetOppo || isSameDir && sourceGtTargetOppo);\n      if (flipSourceTarget) {\n        points = dirAccessor === 'x' ? sourceTarget : targetSource;\n      }\n    }\n    centerX = points[0].x;\n    centerY = points[0].y;\n  }\n  const pathPoints = [source, sourceGapped, ...points, targetGapped, target];\n  return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n  const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n  const {\n    x,\n    y\n  } = b;\n  // no bend\n  if (a.x === x && x === c.x || a.y === y && y === c.y) {\n    return `L${x} ${y}`;\n  }\n  // first segment is horizontal\n  if (a.y === y) {\n    const xDir = a.x < c.x ? -1 : 1;\n    const yDir = a.y < c.y ? 1 : -1;\n    return `L ${x + bendSize * xDir},${y}Q ${x},${y} ${x},${y + bendSize * yDir}`;\n  }\n  const xDir = a.x < c.x ? 1 : -1;\n  const yDir = a.y < c.y ? -1 : 1;\n  return `L ${x},${y + bendSize * yDir}Q ${x},${y} ${x + bendSize * xDir},${y}`;\n}\nfunction getSmoothStepPath(_ref14) {\n  let {\n    sourceX,\n    sourceY,\n    sourcePosition = Position.Bottom,\n    targetX,\n    targetY,\n    targetPosition = Position.Top,\n    borderRadius = 5,\n    centerX,\n    centerY,\n    offset = 20\n  } = _ref14;\n  const [points, labelX, labelY, offsetX, offsetY] = getPoints({\n    source: {\n      x: sourceX,\n      y: sourceY\n    },\n    sourcePosition,\n    target: {\n      x: targetX,\n      y: targetY\n    },\n    targetPosition,\n    center: {\n      x: centerX,\n      y: centerY\n    },\n    offset\n  });\n  const path = points.reduce((res, p, i) => {\n    let segment = '';\n    if (i > 0 && i < points.length - 1) {\n      segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n    } else {\n      segment = `${i === 0 ? 'M' : 'L'}${p.x} ${p.y}`;\n    }\n    res += segment;\n    return res;\n  }, '');\n  return [path, labelX, labelY, offsetX, offsetY];\n}\nconst SmoothStepEdge = memo(_ref15 => {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    sourcePosition = Position.Bottom,\n    targetPosition = Position.Top,\n    markerEnd,\n    markerStart,\n    pathOptions,\n    interactionWidth\n  } = _ref15;\n  const [path, labelX, labelY] = getSmoothStepPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n    borderRadius: pathOptions?.borderRadius,\n    offset: pathOptions?.offset\n  });\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nSmoothStepEdge.displayName = 'SmoothStepEdge';\nconst StepEdge = memo(props => jsx(SmoothStepEdge, {\n  ...props,\n  pathOptions: useMemo(() => ({\n    borderRadius: 0,\n    offset: props.pathOptions?.offset\n  }), [props.pathOptions?.offset])\n}));\nStepEdge.displayName = 'StepEdge';\nfunction getStraightPath(_ref16) {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  } = _ref16;\n  const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  });\n  return [`M ${sourceX},${sourceY}L ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst StraightEdge = memo(_ref17 => {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    markerEnd,\n    markerStart,\n    interactionWidth\n  } = _ref17;\n  const [path, labelX, labelY] = getStraightPath({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  });\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nStraightEdge.displayName = 'StraightEdge';\nfunction calculateControlOffset(distance, curvature) {\n  if (distance >= 0) {\n    return 0.5 * distance;\n  }\n  return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature(_ref18) {\n  let {\n    pos,\n    x1,\n    y1,\n    x2,\n    y2,\n    c\n  } = _ref18;\n  switch (pos) {\n    case Position.Left:\n      return [x1 - calculateControlOffset(x1 - x2, c), y1];\n    case Position.Right:\n      return [x1 + calculateControlOffset(x2 - x1, c), y1];\n    case Position.Top:\n      return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n    case Position.Bottom:\n      return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n  }\n}\nfunction getBezierPath(_ref19) {\n  let {\n    sourceX,\n    sourceY,\n    sourcePosition = Position.Bottom,\n    targetX,\n    targetY,\n    targetPosition = Position.Top,\n    curvature = 0.25\n  } = _ref19;\n  const [sourceControlX, sourceControlY] = getControlWithCurvature({\n    pos: sourcePosition,\n    x1: sourceX,\n    y1: sourceY,\n    x2: targetX,\n    y2: targetY,\n    c: curvature\n  });\n  const [targetControlX, targetControlY] = getControlWithCurvature({\n    pos: targetPosition,\n    x1: targetX,\n    y1: targetY,\n    x2: sourceX,\n    y2: sourceY,\n    c: curvature\n  });\n  const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourceControlX,\n    sourceControlY,\n    targetControlX,\n    targetControlY\n  });\n  return [`M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst BezierEdge = memo(_ref20 => {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourcePosition = Position.Bottom,\n    targetPosition = Position.Top,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    markerEnd,\n    markerStart,\n    pathOptions,\n    interactionWidth\n  } = _ref20;\n  const [path, labelX, labelY] = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n    curvature: pathOptions?.curvature\n  });\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nBezierEdge.displayName = 'BezierEdge';\nconst StoreContext = createContext(null);\nconst Provider$1 = StoreContext.Provider;\nconst errorMessage = '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#100';\nfunction useStore(selector, equalityFn) {\n  const store = useContext(StoreContext);\n  if (store === null) {\n    throw new Error(errorMessage);\n  }\n  return useStore$1(store, selector, equalityFn);\n}\nconst useStoreApi = () => {\n  const store = useContext(StoreContext);\n  if (store === null) {\n    throw new Error(errorMessage);\n  }\n  return useMemo(() => ({\n    getState: store.getState,\n    setState: store.setState,\n    subscribe: store.subscribe,\n    destroy: store.destroy\n  }), [store]);\n};\nconst NodeIdContext = createContext(null);\nconst Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\n\n// checks if element below mouse is a handle and returns connection in form of an object { source: 123, target: 312 }\nfunction checkElementBelowIsValid(event, connectionMode, isTarget, nodeId, handleId, isValidConnection, doc) {\n  const elementBelow = doc.elementFromPoint(event.clientX, event.clientY);\n  const elementBelowIsTarget = elementBelow?.classList.contains('target') || false;\n  const elementBelowIsSource = elementBelow?.classList.contains('source') || false;\n  const result = {\n    elementBelow,\n    isValid: false,\n    connection: {\n      source: null,\n      target: null,\n      sourceHandle: null,\n      targetHandle: null\n    },\n    isHoveringHandle: false\n  };\n  if (elementBelow && (elementBelowIsTarget || elementBelowIsSource)) {\n    result.isHoveringHandle = true;\n    const elementBelowNodeId = elementBelow.getAttribute('data-nodeid');\n    const elementBelowHandleId = elementBelow.getAttribute('data-handleid');\n    const connection = isTarget ? {\n      source: elementBelowNodeId,\n      sourceHandle: elementBelowHandleId,\n      target: nodeId,\n      targetHandle: handleId\n    } : {\n      source: nodeId,\n      sourceHandle: handleId,\n      target: elementBelowNodeId,\n      targetHandle: elementBelowHandleId\n    };\n    result.connection = connection;\n    // in strict mode we don't allow target to target or source to source connections\n    const isValid = connectionMode === ConnectionMode.Strict ? isTarget && elementBelowIsSource || !isTarget && elementBelowIsTarget : true;\n    if (isValid) {\n      result.isValid = isValidConnection(connection);\n    }\n  }\n  return result;\n}\nfunction resetRecentHandle(hoveredHandle) {\n  hoveredHandle?.classList.remove('react-flow__handle-valid');\n  hoveredHandle?.classList.remove('react-flow__handle-connecting');\n}\nfunction handleMouseDown(_ref21) {\n  let {\n    event,\n    handleId,\n    nodeId,\n    onConnect,\n    isTarget,\n    getState,\n    setState,\n    isValidConnection,\n    elementEdgeUpdaterType,\n    onEdgeUpdateEnd\n  } = _ref21;\n  const reactFlowNode = event.target.closest('.react-flow');\n  // when react-flow is used inside a shadow root we can't use document\n  const doc = getHostForElement(event.target);\n  if (!doc) {\n    return;\n  }\n  const elementBelow = doc.elementFromPoint(event.clientX, event.clientY);\n  const elementBelowIsTarget = elementBelow?.classList.contains('target');\n  const elementBelowIsSource = elementBelow?.classList.contains('source');\n  if (!reactFlowNode || !elementBelowIsTarget && !elementBelowIsSource && !elementEdgeUpdaterType) {\n    return;\n  }\n  const {\n    onConnectStart,\n    connectionMode\n  } = getState();\n  const handleType = elementEdgeUpdaterType ? elementEdgeUpdaterType : elementBelowIsTarget ? 'target' : 'source';\n  const containerBounds = reactFlowNode.getBoundingClientRect();\n  let recentHoveredHandle;\n  setState({\n    connectionPosition: {\n      x: event.clientX - containerBounds.left,\n      y: event.clientY - containerBounds.top\n    },\n    connectionNodeId: nodeId,\n    connectionHandleId: handleId,\n    connectionHandleType: handleType\n  });\n  onConnectStart?.(event, {\n    nodeId,\n    handleId,\n    handleType\n  });\n  function onMouseMove(event) {\n    setState({\n      connectionPosition: {\n        x: event.clientX - containerBounds.left,\n        y: event.clientY - containerBounds.top\n      }\n    });\n    const {\n      connection,\n      elementBelow,\n      isValid,\n      isHoveringHandle\n    } = checkElementBelowIsValid(event, connectionMode, isTarget, nodeId, handleId, isValidConnection, doc);\n    if (!isHoveringHandle) {\n      return resetRecentHandle(recentHoveredHandle);\n    }\n    if (connection.source !== connection.target && elementBelow) {\n      resetRecentHandle(recentHoveredHandle);\n      recentHoveredHandle = elementBelow;\n      elementBelow.classList.add('react-flow__handle-connecting');\n      elementBelow.classList.toggle('react-flow__handle-valid', isValid);\n    }\n  }\n  function onMouseUp(event) {\n    const {\n      connection,\n      isValid\n    } = checkElementBelowIsValid(event, connectionMode, isTarget, nodeId, handleId, isValidConnection, doc);\n    if (isValid) {\n      onConnect?.(connection);\n    }\n    getState().onConnectEnd?.(event);\n    if (elementEdgeUpdaterType && onEdgeUpdateEnd) {\n      onEdgeUpdateEnd(event);\n    }\n    resetRecentHandle(recentHoveredHandle);\n    setState({\n      connectionNodeId: null,\n      connectionHandleId: null,\n      connectionHandleType: null\n    });\n    doc.removeEventListener('mousemove', onMouseMove);\n    doc.removeEventListener('mouseup', onMouseUp);\n  }\n  doc.addEventListener('mousemove', onMouseMove);\n  doc.addEventListener('mouseup', onMouseUp);\n}\nconst isEdge = element => 'id' in element && 'source' in element && 'target' in element;\nconst isNode = element => 'id' in element && !('source' in element) && !('target' in element);\nconst getOutgoers = (node, nodes, edges) => {\n  if (!isNode(node)) {\n    return [];\n  }\n  const outgoerIds = edges.filter(e => e.source === node.id).map(e => e.target);\n  return nodes.filter(n => outgoerIds.includes(n.id));\n};\nconst getIncomers = (node, nodes, edges) => {\n  if (!isNode(node)) {\n    return [];\n  }\n  const incomersIds = edges.filter(e => e.target === node.id).map(e => e.source);\n  return nodes.filter(n => incomersIds.includes(n.id));\n};\nconst getEdgeId = _ref22 => {\n  let {\n    source,\n    sourceHandle,\n    target,\n    targetHandle\n  } = _ref22;\n  return `reactflow__edge-${source}${sourceHandle || ''}-${target}${targetHandle || ''}`;\n};\nconst getMarkerId = (marker, rfId) => {\n  if (typeof marker === 'undefined') {\n    return '';\n  }\n  if (typeof marker === 'string') {\n    return marker;\n  }\n  const idPrefix = rfId ? `${rfId}__` : '';\n  return `${idPrefix}${Object.keys(marker).sort().map(key => `${key}=${marker[key]}`).join('&')}`;\n};\nconst connectionExists = (edge, edges) => {\n  return edges.some(el => el.source === edge.source && el.target === edge.target && (el.sourceHandle === edge.sourceHandle || !el.sourceHandle && !edge.sourceHandle) && (el.targetHandle === edge.targetHandle || !el.targetHandle && !edge.targetHandle));\n};\nconst addEdge = (edgeParams, edges) => {\n  if (!edgeParams.source || !edgeParams.target) {\n    devWarn(\"Can't create edge. An edge needs a source and a target. Help: https://reactflow.dev/error#600\");\n    return edges;\n  }\n  let edge;\n  if (isEdge(edgeParams)) {\n    edge = {\n      ...edgeParams\n    };\n  } else {\n    edge = {\n      ...edgeParams,\n      id: getEdgeId(edgeParams)\n    };\n  }\n  if (connectionExists(edge, edges)) {\n    return edges;\n  }\n  return edges.concat(edge);\n};\nconst updateEdge = (oldEdge, newConnection, edges) => {\n  if (!newConnection.source || !newConnection.target) {\n    devWarn(\"Can't create a new edge. An edge needs a source and a target. Help: https://reactflow.dev/error#600\");\n    return edges;\n  }\n  const foundEdge = edges.find(e => e.id === oldEdge.id);\n  if (!foundEdge) {\n    devWarn(`The old edge with id=${oldEdge.id} does not exist. Help: https://reactflow.dev/error#700`);\n    return edges;\n  }\n  // Remove old edge and create the new edge with parameters of old edge.\n  const edge = {\n    ...oldEdge,\n    id: getEdgeId(newConnection),\n    source: newConnection.source,\n    target: newConnection.target,\n    sourceHandle: newConnection.sourceHandle,\n    targetHandle: newConnection.targetHandle\n  };\n  return edges.filter(e => e.id !== oldEdge.id).concat(edge);\n};\nconst pointToRendererPoint = (_ref23, _ref24, snapToGrid, _ref25) => {\n  let {\n    x,\n    y\n  } = _ref23;\n  let [tx, ty, tScale] = _ref24;\n  let [snapX, snapY] = _ref25;\n  const position = {\n    x: (x - tx) / tScale,\n    y: (y - ty) / tScale\n  };\n  if (snapToGrid) {\n    return {\n      x: snapX * Math.round(position.x / snapX),\n      y: snapY * Math.round(position.y / snapY)\n    };\n  }\n  return position;\n};\nconst getRectOfNodes = nodes => {\n  if (nodes.length === 0) {\n    return {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  const box = nodes.reduce((currBox, _ref26) => {\n    let {\n      positionAbsolute,\n      position,\n      width,\n      height\n    } = _ref26;\n    return getBoundsOfBoxes(currBox, rectToBox({\n      x: positionAbsolute ? positionAbsolute.x : position.x,\n      y: positionAbsolute ? positionAbsolute.y : position.y,\n      width: width || 0,\n      height: height || 0\n    }));\n  }, {\n    x: Infinity,\n    y: Infinity,\n    x2: -Infinity,\n    y2: -Infinity\n  });\n  return boxToRect(box);\n};\nconst getNodesInside = function (nodeInternals, rect) {\n  let [tx, ty, tScale] = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0, 1];\n  let partially = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  let excludeNonSelectableNodes = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  const rBox = rectToBox({\n    x: (rect.x - tx) / tScale,\n    y: (rect.y - ty) / tScale,\n    width: rect.width / tScale,\n    height: rect.height / tScale\n  });\n  const visibleNodes = [];\n  nodeInternals.forEach(node => {\n    const {\n      positionAbsolute = {\n        x: 0,\n        y: 0\n      },\n      width,\n      height,\n      selectable = true\n    } = node;\n    if (excludeNonSelectableNodes && !selectable) {\n      return false;\n    }\n    const nBox = rectToBox({\n      ...positionAbsolute,\n      width: width || 0,\n      height: height || 0\n    });\n    const xOverlap = Math.max(0, Math.min(rBox.x2, nBox.x2) - Math.max(rBox.x, nBox.x));\n    const yOverlap = Math.max(0, Math.min(rBox.y2, nBox.y2) - Math.max(rBox.y, nBox.y));\n    const overlappingArea = Math.ceil(xOverlap * yOverlap);\n    const notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\n    const partiallyVisible = partially && overlappingArea > 0;\n    const area = (width || 0) * (height || 0);\n    const isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\n    if (isVisible) {\n      visibleNodes.push(node);\n    }\n  });\n  return visibleNodes;\n};\nconst getConnectedEdges = (nodes, edges) => {\n  const nodeIds = nodes.map(node => node.id);\n  return edges.filter(edge => nodeIds.includes(edge.source) || nodeIds.includes(edge.target));\n};\nconst getTransformForBounds = function (bounds, width, height, minZoom, maxZoom) {\n  let padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.1;\n  const xZoom = width / (bounds.width * (1 + padding));\n  const yZoom = height / (bounds.height * (1 + padding));\n  const zoom = Math.min(xZoom, yZoom);\n  const clampedZoom = clamp(zoom, minZoom, maxZoom);\n  const boundsCenterX = bounds.x + bounds.width / 2;\n  const boundsCenterY = bounds.y + bounds.height / 2;\n  const x = width / 2 - boundsCenterX * clampedZoom;\n  const y = height / 2 - boundsCenterY * clampedZoom;\n  return [x, y, clampedZoom];\n};\nconst getD3Transition = function (selection) {\n  let duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return selection.transition().duration(duration);\n};\nconst alwaysValid = () => true;\nconst selector$d = s => ({\n  connectionStartHandle: s.connectionStartHandle,\n  connectOnClick: s.connectOnClick,\n  noPanClassName: s.noPanClassName\n});\nconst Handle = forwardRef((_ref27, ref) => {\n  let {\n    type = 'source',\n    position = Position.Top,\n    isValidConnection = alwaysValid,\n    isConnectable = true,\n    id,\n    onConnect,\n    children,\n    className,\n    onMouseDown,\n    ...rest\n  } = _ref27;\n  const store = useStoreApi();\n  const nodeId = useContext(NodeIdContext);\n  const {\n    connectionStartHandle,\n    connectOnClick,\n    noPanClassName\n  } = useStore(selector$d, shallow);\n  const handleId = id || null;\n  const isTarget = type === 'target';\n  const onConnectExtended = params => {\n    const {\n      defaultEdgeOptions,\n      onConnect: onConnectAction,\n      hasDefaultEdges\n    } = store.getState();\n    const edgeParams = {\n      ...defaultEdgeOptions,\n      ...params\n    };\n    if (hasDefaultEdges) {\n      const {\n        edges\n      } = store.getState();\n      store.setState({\n        edges: addEdge(edgeParams, edges)\n      });\n    }\n    onConnectAction?.(edgeParams);\n    onConnect?.(edgeParams);\n  };\n  const onMouseDownHandler = event => {\n    if (event.button === 0) {\n      handleMouseDown({\n        event,\n        handleId,\n        nodeId,\n        onConnect: onConnectExtended,\n        isTarget,\n        getState: store.getState,\n        setState: store.setState,\n        isValidConnection\n      });\n    }\n    onMouseDown?.(event);\n  };\n  const onClick = event => {\n    const {\n      onClickConnectStart,\n      onClickConnectEnd,\n      connectionMode\n    } = store.getState();\n    if (!connectionStartHandle) {\n      onClickConnectStart?.(event, {\n        nodeId,\n        handleId,\n        handleType: type\n      });\n      store.setState({\n        connectionStartHandle: {\n          nodeId,\n          type,\n          handleId\n        }\n      });\n      return;\n    }\n    const doc = getHostForElement(event.target);\n    const {\n      connection,\n      isValid\n    } = checkElementBelowIsValid(event, connectionMode, connectionStartHandle.type === 'target', connectionStartHandle.nodeId, connectionStartHandle.handleId || null, isValidConnection, doc);\n    if (isValid) {\n      onConnectExtended(connection);\n    }\n    onClickConnectEnd?.(event);\n    store.setState({\n      connectionStartHandle: null\n    });\n  };\n  return jsx(\"div\", {\n    \"data-handleid\": handleId,\n    \"data-nodeid\": nodeId,\n    \"data-handlepos\": position,\n    className: cc(['react-flow__handle', `react-flow__handle-${position}`, 'nodrag', noPanClassName, className, {\n      source: !isTarget,\n      target: isTarget,\n      connectable: isConnectable,\n      connecting: connectionStartHandle?.nodeId === nodeId && connectionStartHandle?.handleId === handleId && connectionStartHandle?.type === type\n    }]),\n    onMouseDown: onMouseDownHandler,\n    onClick: connectOnClick ? onClick : undefined,\n    ref: ref,\n    ...rest,\n    children: children\n  });\n});\nHandle.displayName = 'Handle';\nvar Handle$1 = memo(Handle);\nconst DefaultNode = _ref28 => {\n  let {\n    data,\n    isConnectable,\n    targetPosition = Position.Top,\n    sourcePosition = Position.Bottom\n  } = _ref28;\n  return jsxs(Fragment, {\n    children: [jsx(Handle$1, {\n      type: \"target\",\n      position: targetPosition,\n      isConnectable: isConnectable\n    }), data?.label, jsx(Handle$1, {\n      type: \"source\",\n      position: sourcePosition,\n      isConnectable: isConnectable\n    })]\n  });\n};\nDefaultNode.displayName = 'DefaultNode';\nvar DefaultNode$1 = memo(DefaultNode);\nconst InputNode = _ref29 => {\n  let {\n    data,\n    isConnectable,\n    sourcePosition = Position.Bottom\n  } = _ref29;\n  return jsxs(Fragment, {\n    children: [data?.label, jsx(Handle$1, {\n      type: \"source\",\n      position: sourcePosition,\n      isConnectable: isConnectable\n    })]\n  });\n};\nInputNode.displayName = 'InputNode';\nvar InputNode$1 = memo(InputNode);\nconst OutputNode = _ref30 => {\n  let {\n    data,\n    isConnectable,\n    targetPosition = Position.Top\n  } = _ref30;\n  return jsxs(Fragment, {\n    children: [jsx(Handle$1, {\n      type: \"target\",\n      position: targetPosition,\n      isConnectable: isConnectable\n    }), data?.label]\n  });\n};\nOutputNode.displayName = 'OutputNode';\nvar OutputNode$1 = memo(OutputNode);\nconst GroupNode = () => null;\nGroupNode.displayName = 'GroupNode';\nconst selector$c = s => ({\n  selectedNodes: Array.from(s.nodeInternals.values()).filter(n => n.selected),\n  selectedEdges: s.edges.filter(e => e.selected)\n});\nfunction areEqual(objA, objB) {\n  const selectedNodeIdsA = objA.selectedNodes.map(n => n.id);\n  const selectedNodeIdsB = objB.selectedNodes.map(n => n.id);\n  const selectedEdgeIdsA = objA.selectedEdges.map(e => e.id);\n  const selectedEdgeIdsB = objB.selectedEdges.map(e => e.id);\n  return shallow(selectedNodeIdsA, selectedNodeIdsB) && shallow(selectedEdgeIdsA, selectedEdgeIdsB);\n}\n// This is just a helper component for calling the onSelectionChange listener.\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\nfunction SelectionListener(_ref31) {\n  let {\n    onSelectionChange\n  } = _ref31;\n  const store = useStoreApi();\n  const {\n    selectedNodes,\n    selectedEdges\n  } = useStore(selector$c, areEqual);\n  useEffect(() => {\n    const params = {\n      nodes: selectedNodes,\n      edges: selectedEdges\n    };\n    onSelectionChange(params);\n    store.getState().onSelectionChange?.(params);\n  }, [selectedNodes, selectedEdges]);\n  return null;\n}\nvar SelectionListener$1 = memo(SelectionListener);\nconst selector$b = s => ({\n  setNodes: s.setNodes,\n  setEdges: s.setEdges,\n  setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n  setMinZoom: s.setMinZoom,\n  setMaxZoom: s.setMaxZoom,\n  setTranslateExtent: s.setTranslateExtent,\n  setNodeExtent: s.setNodeExtent,\n  reset: s.reset\n});\nfunction useStoreUpdater(value, setStoreState) {\n  useEffect(() => {\n    if (typeof value !== 'undefined') {\n      setStoreState(value);\n    }\n  }, [value]);\n}\n// updates with values in store that don't have a dedicated setter function\nfunction useDirectStoreUpdater(key, value, setState) {\n  useEffect(() => {\n    if (typeof value !== 'undefined') {\n      setState({\n        [key]: value\n      });\n    }\n  }, [value]);\n}\nconst StoreUpdater = _ref32 => {\n  let {\n    nodes,\n    edges,\n    defaultNodes,\n    defaultEdges,\n    onConnect,\n    onConnectStart,\n    onConnectEnd,\n    onClickConnectStart,\n    onClickConnectEnd,\n    nodesDraggable,\n    nodesConnectable,\n    minZoom,\n    maxZoom,\n    nodeExtent,\n    onNodesChange,\n    onEdgesChange,\n    elementsSelectable,\n    connectionMode,\n    snapGrid,\n    snapToGrid,\n    translateExtent,\n    connectOnClick,\n    defaultEdgeOptions,\n    fitView,\n    fitViewOptions,\n    onNodesDelete,\n    onEdgesDelete,\n    onNodeDrag,\n    onNodeDragStart,\n    onNodeDragStop,\n    onSelectionDrag,\n    onSelectionDragStart,\n    onSelectionDragStop,\n    noPanClassName,\n    nodeOrigin,\n    id\n  } = _ref32;\n  const {\n    setNodes,\n    setEdges,\n    setDefaultNodesAndEdges,\n    setMinZoom,\n    setMaxZoom,\n    setTranslateExtent,\n    setNodeExtent,\n    reset\n  } = useStore(selector$b, shallow);\n  const store = useStoreApi();\n  useEffect(() => {\n    const edgesWithDefaults = defaultEdges?.map(e => ({\n      ...e,\n      ...defaultEdgeOptions\n    }));\n    setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\n    return () => {\n      reset();\n    };\n  }, []);\n  useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\n  useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\n  useDirectStoreUpdater('onConnect', onConnect, store.setState);\n  useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\n  useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\n  useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\n  useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\n  useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\n  useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\n  useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\n  useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\n  useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\n  useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\n  useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\n  useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\n  useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\n  useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\n  useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\n  useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\n  useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\n  useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\n  useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\n  useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\n  useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\n  useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\n  useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\n  useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\n  useDirectStoreUpdater('rfId', id, store.setState);\n  useStoreUpdater(nodes, setNodes);\n  useStoreUpdater(edges, setEdges);\n  useStoreUpdater(minZoom, setMinZoom);\n  useStoreUpdater(maxZoom, setMaxZoom);\n  useStoreUpdater(translateExtent, setTranslateExtent);\n  useStoreUpdater(nodeExtent, setNodeExtent);\n  return null;\n};\nconst style = {\n  display: 'none'\n};\nconst ariaLiveStyle = {\n  position: 'absolute',\n  width: 1,\n  height: 1,\n  margin: -1,\n  border: 0,\n  padding: 0,\n  overflow: 'hidden',\n  clip: 'rect(0px, 0px, 0px, 0px)',\n  clipPath: 'inset(100%)'\n};\nconst ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nconst ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nconst ARIA_LIVE_MESSAGE = 'react-flow__arai-live';\nconst selector$a = s => s.ariaLiveMessage;\nfunction A11yDescriptions(_ref33) {\n  let {\n    rfId\n  } = _ref33;\n  const ariaLiveMessage = useStore(selector$a);\n  return jsxs(Fragment, {\n    children: [jsx(\"div\", {\n      id: `${ARIA_NODE_DESC_KEY}-${rfId}`,\n      style: style,\n      children: \"Press enter or space to select a node. You can then use the arrow keys to move the node around, press delete to remove it and press escape to cancel.\"\n    }), jsx(\"div\", {\n      id: `${ARIA_EDGE_DESC_KEY}-${rfId}`,\n      style: style,\n      children: \"Press enter or space to select an edge. You can then press delete to remove it or press escape to cancel.\"\n    }), jsx(\"div\", {\n      id: `${ARIA_LIVE_MESSAGE}-${rfId}`,\n      \"aria-live\": \"assertive\",\n      \"aria-atomic\": \"true\",\n      style: ariaLiveStyle,\n      children: ariaLiveMessage\n    })]\n  });\n}\nconst shiftX = (x, shift, position) => {\n  if (position === Position.Left) return x - shift;\n  if (position === Position.Right) return x + shift;\n  return x;\n};\nconst shiftY = (y, shift, position) => {\n  if (position === Position.Top) return y - shift;\n  if (position === Position.Bottom) return y + shift;\n  return y;\n};\nconst EdgeUpdaterClassName = 'react-flow__edgeupdater';\nconst EdgeAnchor = _ref34 => {\n  let {\n    position,\n    centerX,\n    centerY,\n    radius = 10,\n    onMouseDown,\n    onMouseEnter,\n    onMouseOut,\n    type\n  } = _ref34;\n  return jsx(\"circle\", {\n    onMouseDown: onMouseDown,\n    onMouseEnter: onMouseEnter,\n    onMouseOut: onMouseOut,\n    className: cc([EdgeUpdaterClassName, `${EdgeUpdaterClassName}-${type}`]),\n    cx: shiftX(centerX, radius, position),\n    cy: shiftY(centerY, radius, position),\n    r: radius,\n    stroke: \"transparent\",\n    fill: \"transparent\"\n  });\n};\nvar wrapEdge = EdgeComponent => {\n  const EdgeWrapper = _ref35 => {\n    let {\n      id,\n      className,\n      type,\n      data,\n      onClick,\n      onEdgeDoubleClick,\n      selected,\n      animated,\n      label,\n      labelStyle,\n      labelShowBg,\n      labelBgStyle,\n      labelBgPadding,\n      labelBgBorderRadius,\n      style,\n      source,\n      target,\n      sourceX,\n      sourceY,\n      targetX,\n      targetY,\n      sourcePosition,\n      targetPosition,\n      elementsSelectable,\n      hidden,\n      sourceHandleId,\n      targetHandleId,\n      onContextMenu,\n      onMouseEnter,\n      onMouseMove,\n      onMouseLeave,\n      edgeUpdaterRadius,\n      onEdgeUpdate,\n      onEdgeUpdateStart,\n      onEdgeUpdateEnd,\n      markerEnd,\n      markerStart,\n      rfId,\n      ariaLabel,\n      disableKeyboardA11y,\n      pathOptions,\n      interactionWidth\n    } = _ref35;\n    const edgeRef = useRef(null);\n    const [updateHover, setUpdateHover] = useState(false);\n    const [updating, setUpdating] = useState(false);\n    const store = useStoreApi();\n    const markerStartUrl = useMemo(() => `url(#${getMarkerId(markerStart, rfId)})`, [markerStart, rfId]);\n    const markerEndUrl = useMemo(() => `url(#${getMarkerId(markerEnd, rfId)})`, [markerEnd, rfId]);\n    if (hidden) {\n      return null;\n    }\n    const onEdgeClick = event => {\n      const {\n        edges,\n        addSelectedEdges\n      } = store.getState();\n      if (elementsSelectable) {\n        store.setState({\n          nodesSelectionActive: false\n        });\n        addSelectedEdges([id]);\n      }\n      if (onClick) {\n        const edge = edges.find(e => e.id === id);\n        onClick(event, edge);\n      }\n    };\n    const onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\n    const onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\n    const onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\n    const onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\n    const onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\n    const handleEdgeUpdater = (event, isSourceHandle) => {\n      const nodeId = isSourceHandle ? target : source;\n      const handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\n      const handleType = isSourceHandle ? 'target' : 'source';\n      const isValidConnection = () => true;\n      const isTarget = isSourceHandle;\n      const edge = store.getState().edges.find(e => e.id === id);\n      setUpdating(true);\n      onEdgeUpdateStart?.(event, edge, handleType);\n      const _onEdgeUpdateEnd = evt => {\n        setUpdating(false);\n        onEdgeUpdateEnd?.(evt, edge, handleType);\n      };\n      const onConnectEdge = connection => onEdgeUpdate?.(edge, connection);\n      handleMouseDown({\n        event,\n        handleId,\n        nodeId,\n        onConnect: onConnectEdge,\n        isTarget,\n        getState: store.getState,\n        setState: store.setState,\n        isValidConnection,\n        elementEdgeUpdaterType: handleType,\n        onEdgeUpdateEnd: _onEdgeUpdateEnd\n      });\n    };\n    const onEdgeUpdaterSourceMouseDown = event => handleEdgeUpdater(event, true);\n    const onEdgeUpdaterTargetMouseDown = event => handleEdgeUpdater(event, false);\n    const onEdgeUpdaterMouseEnter = () => setUpdateHover(true);\n    const onEdgeUpdaterMouseOut = () => setUpdateHover(false);\n    const inactive = !elementsSelectable && !onClick;\n    const handleEdgeUpdate = typeof onEdgeUpdate !== 'undefined';\n    const onKeyDown = event => {\n      if (elementSelectionKeys.includes(event.key) && elementsSelectable) {\n        const {\n          unselectNodesAndEdges,\n          addSelectedEdges,\n          edges\n        } = store.getState();\n        const unselect = event.key === 'Escape';\n        if (unselect) {\n          edgeRef.current?.blur();\n          unselectNodesAndEdges({\n            edges: [edges.find(e => e.id === id)]\n          });\n        } else {\n          addSelectedEdges([id]);\n        }\n      }\n    };\n    return jsxs(\"g\", {\n      className: cc(['react-flow__edge', `react-flow__edge-${type}`, className, {\n        selected,\n        animated,\n        inactive,\n        updating: updateHover\n      }]),\n      onClick: onEdgeClick,\n      onDoubleClick: onEdgeDoubleClickHandler,\n      onContextMenu: onEdgeContextMenu,\n      onMouseEnter: onEdgeMouseEnter,\n      onMouseMove: onEdgeMouseMove,\n      onMouseLeave: onEdgeMouseLeave,\n      onKeyDown: disableKeyboardA11y ? undefined : onKeyDown,\n      tabIndex: disableKeyboardA11y ? undefined : 0,\n      role: disableKeyboardA11y ? undefined : 'button',\n      \"data-testid\": `rf__edge-${id}`,\n      \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : `Edge from ${source} to ${target}`,\n      \"aria-describedby\": disableKeyboardA11y ? undefined : `${ARIA_EDGE_DESC_KEY}-${rfId}`,\n      ref: edgeRef,\n      children: [!updating && jsx(EdgeComponent, {\n        id: id,\n        source: source,\n        target: target,\n        selected: selected,\n        animated: animated,\n        label: label,\n        labelStyle: labelStyle,\n        labelShowBg: labelShowBg,\n        labelBgStyle: labelBgStyle,\n        labelBgPadding: labelBgPadding,\n        labelBgBorderRadius: labelBgBorderRadius,\n        data: data,\n        style: style,\n        sourceX: sourceX,\n        sourceY: sourceY,\n        targetX: targetX,\n        targetY: targetY,\n        sourcePosition: sourcePosition,\n        targetPosition: targetPosition,\n        sourceHandleId: sourceHandleId,\n        targetHandleId: targetHandleId,\n        markerStart: markerStartUrl,\n        markerEnd: markerEndUrl,\n        pathOptions: pathOptions,\n        interactionWidth: interactionWidth\n      }), handleEdgeUpdate && jsxs(Fragment, {\n        children: [jsx(EdgeAnchor, {\n          position: sourcePosition,\n          centerX: sourceX,\n          centerY: sourceY,\n          radius: edgeUpdaterRadius,\n          onMouseDown: onEdgeUpdaterSourceMouseDown,\n          onMouseEnter: onEdgeUpdaterMouseEnter,\n          onMouseOut: onEdgeUpdaterMouseOut,\n          type: \"source\"\n        }), jsx(EdgeAnchor, {\n          position: targetPosition,\n          centerX: targetX,\n          centerY: targetY,\n          radius: edgeUpdaterRadius,\n          onMouseDown: onEdgeUpdaterTargetMouseDown,\n          onMouseEnter: onEdgeUpdaterMouseEnter,\n          onMouseOut: onEdgeUpdaterMouseOut,\n          type: \"target\"\n        })]\n      })]\n    });\n  };\n  EdgeWrapper.displayName = 'EdgeWrapper';\n  return memo(EdgeWrapper);\n};\nfunction createEdgeTypes(edgeTypes) {\n  const standardTypes = {\n    default: wrapEdge(edgeTypes.default || BezierEdge),\n    straight: wrapEdge(edgeTypes.bezier || StraightEdge),\n    step: wrapEdge(edgeTypes.step || StepEdge),\n    smoothstep: wrapEdge(edgeTypes.step || SmoothStepEdge),\n    simplebezier: wrapEdge(edgeTypes.simplebezier || SimpleBezierEdge)\n  };\n  const wrappedTypes = {};\n  const specialTypes = Object.keys(edgeTypes).filter(k => !['default', 'bezier'].includes(k)).reduce((res, key) => {\n    res[key] = wrapEdge(edgeTypes[key] || BezierEdge);\n    return res;\n  }, wrappedTypes);\n  return {\n    ...standardTypes,\n    ...specialTypes\n  };\n}\nfunction getHandlePosition(position, nodeRect) {\n  let handle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  const x = (handle?.x || 0) + nodeRect.x;\n  const y = (handle?.y || 0) + nodeRect.y;\n  const width = handle?.width || nodeRect.width;\n  const height = handle?.height || nodeRect.height;\n  switch (position) {\n    case Position.Top:\n      return {\n        x: x + width / 2,\n        y\n      };\n    case Position.Right:\n      return {\n        x: x + width,\n        y: y + height / 2\n      };\n    case Position.Bottom:\n      return {\n        x: x + width / 2,\n        y: y + height\n      };\n    case Position.Left:\n      return {\n        x,\n        y: y + height / 2\n      };\n  }\n}\nfunction getHandle(bounds, handleId) {\n  if (!bounds) {\n    return null;\n  }\n  // there is no handleId when there are no multiple handles/ handles with ids\n  // so we just pick the first one\n  let handle = null;\n  if (bounds.length === 1 || !handleId) {\n    handle = bounds[0];\n  } else if (handleId) {\n    handle = bounds.find(d => d.id === handleId);\n  }\n  return typeof handle === 'undefined' ? null : handle;\n}\nconst getEdgePositions = (sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) => {\n  const sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\n  const targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\n  return {\n    sourceX: sourceHandlePos.x,\n    sourceY: sourceHandlePos.y,\n    targetX: targetHandlePos.x,\n    targetY: targetHandlePos.y\n  };\n};\nfunction isEdgeVisible(_ref36) {\n  let {\n    sourcePos,\n    targetPos,\n    sourceWidth,\n    sourceHeight,\n    targetWidth,\n    targetHeight,\n    width,\n    height,\n    transform\n  } = _ref36;\n  const edgeBox = {\n    x: Math.min(sourcePos.x, targetPos.x),\n    y: Math.min(sourcePos.y, targetPos.y),\n    x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\n    y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight)\n  };\n  if (edgeBox.x === edgeBox.x2) {\n    edgeBox.x2 += 1;\n  }\n  if (edgeBox.y === edgeBox.y2) {\n    edgeBox.y2 += 1;\n  }\n  const viewBox = rectToBox({\n    x: (0 - transform[0]) / transform[2],\n    y: (0 - transform[1]) / transform[2],\n    width: width / transform[2],\n    height: height / transform[2]\n  });\n  const xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\n  const yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\n  const overlappingArea = Math.ceil(xOverlap * yOverlap);\n  return overlappingArea > 0;\n}\nfunction getNodeData(node) {\n  const handleBounds = node?.[internalsSymbol]?.handleBounds || null;\n  const isInvalid = !node || !handleBounds || !node.width || !node.height || typeof node.positionAbsolute?.x === 'undefined' || typeof node.positionAbsolute?.y === 'undefined';\n  return [{\n    x: node?.positionAbsolute?.x || 0,\n    y: node?.positionAbsolute?.y || 0,\n    width: node?.width || 0,\n    height: node?.height || 0\n  }, handleBounds, !isInvalid];\n}\nconst doc = typeof document !== 'undefined' ? document : null;\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilites. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nvar useKeyPress = function () {\n  let keyCode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    target: doc\n  };\n  const [keyPressed, setKeyPressed] = useState(false);\n  // we need to remember the pressed keys in order to support combinations\n  const pressedKeys = useRef(new Set([]));\n  // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n  // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n  // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n  // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n  // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n  // we can't find it in the list of keysToWatch.\n  const [keyCodes, keysToWatch] = useMemo(() => {\n    if (keyCode !== null) {\n      const keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n      const keys = keyCodeArr.filter(kc => typeof kc === 'string').map(kc => kc.split('+'));\n      const keysFlat = keys.reduce((res, item) => res.concat(...item), []);\n      return [keys, keysFlat];\n    }\n    return [[], []];\n  }, [keyCode]);\n  useEffect(() => {\n    if (keyCode !== null) {\n      const downHandler = event => {\n        if (isInputDOMNode(event)) {\n          return false;\n        }\n        const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n        pressedKeys.current.add(event[keyOrCode]);\n        if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n          event.preventDefault();\n          setKeyPressed(true);\n        }\n      };\n      const upHandler = event => {\n        if (isInputDOMNode(event)) {\n          return false;\n        }\n        const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n        if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n          setKeyPressed(false);\n          pressedKeys.current.clear();\n        } else {\n          pressedKeys.current.delete(event[keyOrCode]);\n        }\n      };\n      const resetHandler = () => {\n        pressedKeys.current.clear();\n        setKeyPressed(false);\n      };\n      options?.target?.addEventListener('keydown', downHandler);\n      options?.target?.addEventListener('keyup', upHandler);\n      window.addEventListener('blur', resetHandler);\n      return () => {\n        options?.target?.removeEventListener('keydown', downHandler);\n        options?.target?.removeEventListener('keyup', upHandler);\n        window.removeEventListener('blur', resetHandler);\n      };\n    }\n  }, [keyCode, setKeyPressed]);\n  return keyPressed;\n};\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n  return keyCodes\n  // we only want to compare same sizes of keyCode definitions\n  // and pressed keys. When the user specified 'Meta' as a key somewhere\n  // this would also be truthy without this filter when user presses 'Meta' + 'r'\n  .filter(keys => isUp || keys.length === pressedKeys.size)\n  // since we want to support multiple possibilities only one of the\n  // combinations need to be part of the pressed keys\n  .some(keys => keys.every(k => pressedKeys.has(k)));\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n  return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\nfunction isInputDOMNode(event) {\n  // using composed path for handling shadow dom\n  const target = event.composedPath?.()[0] || event.target;\n  return ['INPUT', 'SELECT', 'TEXTAREA'].includes(target?.nodeName) || target?.hasAttribute('contenteditable') || !!target?.closest('.nokey');\n}\nvar useGlobalKeyHandler = _ref37 => {\n  let {\n    deleteKeyCode,\n    multiSelectionKeyCode\n  } = _ref37;\n  const store = useStoreApi();\n  const deleteKeyPressed = useKeyPress(deleteKeyCode);\n  const multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\n  useEffect(() => {\n    if (!deleteKeyPressed) {\n      return;\n    }\n    const {\n      nodeInternals,\n      edges,\n      hasDefaultNodes,\n      hasDefaultEdges,\n      onNodesDelete,\n      onEdgesDelete,\n      onNodesChange,\n      onEdgesChange\n    } = store.getState();\n    const nodes = Array.from(nodeInternals.values());\n    const nodesToRemove = nodes.reduce((res, node) => {\n      const parentSelected = !node.selected && node.parentNode && res.find(n => n.id === node.parentNode);\n      const deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\n      if (deletable && (node.selected || parentSelected)) {\n        res.push(node);\n      }\n      return res;\n    }, []);\n    const deletableEdges = edges.filter(e => typeof e.deletable === 'boolean' ? e.deletable : true);\n    const selectedEdges = deletableEdges.filter(e => e.selected);\n    if (nodesToRemove || selectedEdges) {\n      const connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\n      const edgesToRemove = [...selectedEdges, ...connectedEdges];\n      const edgeIdsToRemove = edgesToRemove.reduce((res, edge) => {\n        if (!res.includes(edge.id)) {\n          res.push(edge.id);\n        }\n        return res;\n      }, []);\n      if (hasDefaultEdges || hasDefaultNodes) {\n        if (hasDefaultEdges) {\n          store.setState({\n            edges: edges.filter(e => !edgeIdsToRemove.includes(e.id))\n          });\n        }\n        if (hasDefaultNodes) {\n          nodesToRemove.forEach(node => {\n            nodeInternals.delete(node.id);\n          });\n          store.setState({\n            nodeInternals: new Map(nodeInternals)\n          });\n        }\n      }\n      if (edgeIdsToRemove.length > 0) {\n        onEdgesDelete?.(edgesToRemove);\n        if (onEdgesChange) {\n          onEdgesChange(edgeIdsToRemove.map(id => ({\n            id,\n            type: 'remove'\n          })));\n        }\n      }\n      if (nodesToRemove.length > 0) {\n        onNodesDelete?.(nodesToRemove);\n        if (onNodesChange) {\n          const nodeChanges = nodesToRemove.map(n => ({\n            id: n.id,\n            type: 'remove'\n          }));\n          onNodesChange(nodeChanges);\n        }\n      }\n      store.setState({\n        nodesSelectionActive: false\n      });\n    }\n  }, [deleteKeyPressed]);\n  useEffect(() => {\n    store.setState({\n      multiSelectionActive: multiSelectionKeyPressed\n    });\n  }, [multiSelectionKeyPressed]);\n};\nfunction useResizeHandler(rendererNode) {\n  const store = useStoreApi();\n  useEffect(() => {\n    let resizeObserver;\n    const updateDimensions = () => {\n      if (!rendererNode.current) {\n        return;\n      }\n      const size = getDimensions(rendererNode.current);\n      if (size.height === 0 || size.width === 0) {\n        devWarn('The React Flow parent container needs a width and a height to render the graph. Help: https://reactflow.dev/error#400');\n      }\n      store.setState({\n        width: size.width || 500,\n        height: size.height || 500\n      });\n    };\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    if (rendererNode.current) {\n      resizeObserver = new ResizeObserver(() => updateDimensions());\n      resizeObserver.observe(rendererNode.current);\n    }\n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n      if (resizeObserver && rendererNode.current) {\n        resizeObserver.unobserve(rendererNode.current);\n      }\n    };\n  }, []);\n}\nconst containerStyle = {\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0\n};\nconst viewChanged = (prevViewport, eventViewport) => prevViewport.x !== eventViewport.x || prevViewport.y !== eventViewport.y || prevViewport.zoom !== eventViewport.k;\nconst eventToFlowTransform = eventViewport => ({\n  x: eventViewport.x,\n  y: eventViewport.y,\n  zoom: eventViewport.k\n});\nconst isWrappedWithClass = (event, className) => event.target.closest(`.${className}`);\nconst selector$9 = s => ({\n  d3Zoom: s.d3Zoom,\n  d3Selection: s.d3Selection,\n  d3ZoomHandler: s.d3ZoomHandler\n});\nconst ZoomPane = _ref38 => {\n  let {\n    onMove,\n    onMoveStart,\n    onMoveEnd,\n    zoomOnScroll = true,\n    zoomOnPinch = true,\n    panOnScroll = false,\n    panOnScrollSpeed = 0.5,\n    panOnScrollMode = PanOnScrollMode.Free,\n    zoomOnDoubleClick = true,\n    selectionKeyPressed,\n    elementsSelectable,\n    panOnDrag = true,\n    defaultViewport,\n    translateExtent,\n    minZoom,\n    maxZoom,\n    zoomActivationKeyCode,\n    preventScrolling = true,\n    children,\n    noWheelClassName,\n    noPanClassName\n  } = _ref38;\n  const timerId = useRef();\n  const store = useStoreApi();\n  const isZoomingOrPanning = useRef(false);\n  const zoomPane = useRef(null);\n  const prevTransform = useRef({\n    x: 0,\n    y: 0,\n    zoom: 0\n  });\n  const {\n    d3Zoom,\n    d3Selection,\n    d3ZoomHandler\n  } = useStore(selector$9, shallow);\n  const zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n  useResizeHandler(zoomPane);\n  useEffect(() => {\n    if (zoomPane.current) {\n      const d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\n      const selection = select(zoomPane.current).call(d3ZoomInstance);\n      const clampedX = clamp(defaultViewport.x, translateExtent[0][0], translateExtent[1][0]);\n      const clampedY = clamp(defaultViewport.y, translateExtent[0][1], translateExtent[1][1]);\n      const clampedZoom = clamp(defaultViewport.zoom, minZoom, maxZoom);\n      const updatedTransform = zoomIdentity.translate(clampedX, clampedY).scale(clampedZoom);\n      d3ZoomInstance.transform(selection, updatedTransform);\n      store.setState({\n        d3Zoom: d3ZoomInstance,\n        d3Selection: selection,\n        d3ZoomHandler: selection.on('wheel.zoom'),\n        // we need to pass transform because zoom handler is not registered when we set the initial transform\n        transform: [clampedX, clampedY, clampedZoom],\n        domNode: zoomPane.current.closest('.react-flow')\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (d3Selection && d3Zoom) {\n      if (panOnScroll && !zoomActivationKeyPressed) {\n        d3Selection.on('wheel.zoom', event => {\n          if (isWrappedWithClass(event, noWheelClassName)) {\n            return false;\n          }\n          event.preventDefault();\n          event.stopImmediatePropagation();\n          const currentZoom = d3Selection.property('__zoom').k || 1;\n          if (event.ctrlKey && zoomOnPinch) {\n            const point = pointer(event);\n            // taken from https://github.com/d3/d3-zoom/blob/master/src/zoom.js\n            const pinchDelta = -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * 10;\n            const zoom = currentZoom * Math.pow(2, pinchDelta);\n            d3Zoom.scaleTo(d3Selection, zoom, point);\n            return;\n          }\n          // increase scroll speed in firefox\n          // firefox: deltaMode === 1; chrome: deltaMode === 0\n          const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n          const deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n          const deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n          d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed);\n        });\n      } else if (typeof d3ZoomHandler !== 'undefined') {\n        d3Selection.on('wheel.zoom', function (event, d) {\n          if (!preventScrolling || isWrappedWithClass(event, noWheelClassName)) {\n            return null;\n          }\n          event.preventDefault();\n          d3ZoomHandler.call(this, event, d);\n        });\n      }\n    }\n  }, [panOnScroll, panOnScrollMode, d3Selection, d3Zoom, d3ZoomHandler, zoomActivationKeyPressed, zoomOnPinch, preventScrolling, noWheelClassName]);\n  useEffect(() => {\n    if (d3Zoom) {\n      if (selectionKeyPressed && !isZoomingOrPanning.current) {\n        d3Zoom.on('zoom', null);\n      } else if (!selectionKeyPressed) {\n        d3Zoom.on('zoom', event => {\n          const {\n            onViewportChange\n          } = store.getState();\n          store.setState({\n            transform: [event.transform.x, event.transform.y, event.transform.k]\n          });\n          if (onMove || onViewportChange) {\n            const flowTransform = eventToFlowTransform(event.transform);\n            onViewportChange?.(flowTransform);\n            onMove?.(event.sourceEvent, flowTransform);\n          }\n        });\n      }\n    }\n  }, [selectionKeyPressed, d3Zoom, onMove]);\n  useEffect(() => {\n    if (d3Zoom) {\n      d3Zoom.on('start', event => {\n        const {\n          onViewportChangeStart\n        } = store.getState();\n        isZoomingOrPanning.current = true;\n        if (event.sourceEvent?.type === 'mousedown') {\n          store.setState({\n            paneDragging: true\n          });\n        }\n        if (onMoveStart || onViewportChangeStart) {\n          const flowTransform = eventToFlowTransform(event.transform);\n          prevTransform.current = flowTransform;\n          onViewportChangeStart?.(flowTransform);\n          onMoveStart?.(event.sourceEvent, flowTransform);\n        }\n      });\n    }\n  }, [d3Zoom, onMoveStart]);\n  useEffect(() => {\n    if (d3Zoom) {\n      d3Zoom.on('end', event => {\n        const {\n          onViewportChangeEnd\n        } = store.getState();\n        isZoomingOrPanning.current = false;\n        store.setState({\n          paneDragging: false\n        });\n        if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\n          const flowTransform = eventToFlowTransform(event.transform);\n          prevTransform.current = flowTransform;\n          clearTimeout(timerId.current);\n          timerId.current = setTimeout(() => {\n            onViewportChangeEnd?.(flowTransform);\n            onMoveEnd?.(event.sourceEvent, flowTransform);\n          }, panOnScroll ? 150 : 0);\n        }\n      });\n    }\n  }, [d3Zoom, onMoveEnd, panOnScroll]);\n  useEffect(() => {\n    if (d3Zoom) {\n      d3Zoom.filter(event => {\n        const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n        const pinchZoom = zoomOnPinch && event.ctrlKey;\n        if (event.button === 1 && event.type === 'mousedown' && event.target.closest(`.react-flow__node`)) {\n          return true;\n        }\n        // if all interactions are disabled, we prevent all zoom events\n        if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n          return false;\n        }\n        // during a selection we prevent all other interactions\n        if (selectionKeyPressed) {\n          return false;\n        }\n        // if zoom on double click is disabled, we prevent the double click event\n        if (!zoomOnDoubleClick && event.type === 'dblclick') {\n          return false;\n        }\n        // if the target element is inside an element with the nowheel class, we prevent zooming\n        if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n          return false;\n        }\n        // if the target element is inside an element with the nopan class, we prevent panning\n        if (isWrappedWithClass(event, noPanClassName) && event.type !== 'wheel') {\n          return false;\n        }\n        if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n          return false;\n        }\n        // when there is no scroll handling enabled, we prevent all wheel events\n        if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n          return false;\n        }\n        // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n        if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n          return false;\n        }\n        // default filter for d3-zoom\n        return (!event.ctrlKey || event.type === 'wheel') && (!event.button || event.button <= 1);\n      });\n    }\n  }, [d3Zoom, zoomOnScroll, zoomOnPinch, panOnScroll, zoomOnDoubleClick, panOnDrag, selectionKeyPressed, elementsSelectable, zoomActivationKeyPressed]);\n  return jsx(\"div\", {\n    className: \"react-flow__renderer\",\n    ref: zoomPane,\n    style: containerStyle,\n    children: children\n  });\n};\nfunction handleParentExpand(res, updateItem) {\n  const parent = res.find(e => e.id === updateItem.parentNode);\n  if (parent) {\n    const extendWidth = updateItem.position.x + updateItem.width - parent.width;\n    const extendHeight = updateItem.position.y + updateItem.height - parent.height;\n    if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\n      parent.style = {\n        ...parent.style\n      } || {};\n      parent.style.width = parent.style.width ?? parent.width;\n      parent.style.height = parent.style.height ?? parent.height;\n      if (extendWidth > 0) {\n        parent.style.width += extendWidth;\n      }\n      if (extendHeight > 0) {\n        parent.style.height += extendHeight;\n      }\n      if (updateItem.position.x < 0) {\n        const xDiff = Math.abs(updateItem.position.x);\n        parent.position.x = parent.position.x - xDiff;\n        parent.style.width += xDiff;\n        updateItem.position.x = 0;\n      }\n      if (updateItem.position.y < 0) {\n        const yDiff = Math.abs(updateItem.position.y);\n        parent.position.y = parent.position.y - yDiff;\n        parent.style.height += yDiff;\n        updateItem.position.y = 0;\n      }\n      parent.width = parent.style.width;\n      parent.height = parent.style.height;\n    }\n  }\n}\nfunction applyChanges(changes, elements) {\n  // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\n  if (changes.some(c => c.type === 'reset')) {\n    return changes.filter(c => c.type === 'reset').map(c => c.item);\n  }\n  const initElements = changes.filter(c => c.type === 'add').map(c => c.item);\n  return elements.reduce((res, item) => {\n    const currentChange = changes.find(c => c.id === item.id);\n    if (currentChange) {\n      switch (currentChange.type) {\n        case 'select':\n          {\n            res.push({\n              ...item,\n              selected: currentChange.selected\n            });\n            return res;\n          }\n        case 'position':\n          {\n            const updateItem = {\n              ...item\n            };\n            if (typeof currentChange.position !== 'undefined') {\n              updateItem.position = currentChange.position;\n            }\n            if (typeof currentChange.positionAbsolute !== 'undefined') {\n              updateItem.positionAbsolute = currentChange.positionAbsolute;\n            }\n            if (typeof currentChange.dragging !== 'undefined') {\n              updateItem.dragging = currentChange.dragging;\n            }\n            if (updateItem.expandParent) {\n              handleParentExpand(res, updateItem);\n            }\n            res.push(updateItem);\n            return res;\n          }\n        case 'dimensions':\n          {\n            const updateItem = {\n              ...item\n            };\n            if (typeof currentChange.dimensions !== 'undefined') {\n              updateItem.width = currentChange.dimensions.width;\n              updateItem.height = currentChange.dimensions.height;\n            }\n            if (updateItem.expandParent) {\n              handleParentExpand(res, updateItem);\n            }\n            res.push(updateItem);\n            return res;\n          }\n        case 'remove':\n          {\n            return res;\n          }\n      }\n    }\n    res.push(item);\n    return res;\n  }, initElements);\n}\nfunction applyNodeChanges(changes, nodes) {\n  return applyChanges(changes, nodes);\n}\nfunction applyEdgeChanges(changes, edges) {\n  return applyChanges(changes, edges);\n}\nconst createSelectionChange = (id, selected) => ({\n  id,\n  type: 'select',\n  selected\n});\nfunction getSelectionChanges(items, selectedIds) {\n  return items.reduce((res, item) => {\n    const willBeSelected = selectedIds.includes(item.id);\n    if (!item.selected && willBeSelected) {\n      item.selected = true;\n      res.push(createSelectionChange(item.id, true));\n    } else if (item.selected && !willBeSelected) {\n      item.selected = false;\n      res.push(createSelectionChange(item.id, false));\n    }\n    return res;\n  }, []);\n}\nfunction getMousePosition(event, containerBounds) {\n  return {\n    x: event.clientX - containerBounds.left,\n    y: event.clientY - containerBounds.top\n  };\n}\nconst selector$8 = s => ({\n  userSelectionActive: s.userSelectionActive,\n  elementsSelectable: s.elementsSelectable\n});\nconst initialRect = {\n  startX: 0,\n  startY: 0,\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  draw: false\n};\nconst UserSelection = memo(_ref39 => {\n  let {\n    selectionKeyPressed\n  } = _ref39;\n  const store = useStoreApi();\n  const prevSelectedNodesCount = useRef(0);\n  const prevSelectedEdgesCount = useRef(0);\n  const containerBounds = useRef();\n  const [userSelectionRect, setUserSelectionRect] = useState(initialRect);\n  const {\n    userSelectionActive,\n    elementsSelectable\n  } = useStore(selector$8, shallow);\n  const renderUserSelectionPane = userSelectionActive || selectionKeyPressed;\n  if (!elementsSelectable || !renderUserSelectionPane) {\n    return null;\n  }\n  const resetUserSelection = () => {\n    setUserSelectionRect(initialRect);\n    store.setState({\n      userSelectionActive: false\n    });\n    prevSelectedNodesCount.current = 0;\n    prevSelectedEdgesCount.current = 0;\n  };\n  const onMouseDown = event => {\n    const reactFlowNode = event.target.closest('.react-flow');\n    containerBounds.current = reactFlowNode.getBoundingClientRect();\n    const mousePos = getMousePosition(event, containerBounds.current);\n    setUserSelectionRect({\n      width: 0,\n      height: 0,\n      startX: mousePos.x,\n      startY: mousePos.y,\n      x: mousePos.x,\n      y: mousePos.y,\n      draw: true\n    });\n    store.setState({\n      userSelectionActive: true,\n      nodesSelectionActive: false\n    });\n  };\n  const onMouseMove = event => {\n    if (!selectionKeyPressed || !userSelectionRect.draw || !containerBounds.current) {\n      return;\n    }\n    const mousePos = getMousePosition(event, containerBounds.current);\n    const startX = userSelectionRect.startX ?? 0;\n    const startY = userSelectionRect.startY ?? 0;\n    const nextUserSelectRect = {\n      ...userSelectionRect,\n      x: mousePos.x < startX ? mousePos.x : startX,\n      y: mousePos.y < startY ? mousePos.y : startY,\n      width: Math.abs(mousePos.x - startX),\n      height: Math.abs(mousePos.y - startY)\n    };\n    const {\n      nodeInternals,\n      edges,\n      transform,\n      onNodesChange,\n      onEdgesChange\n    } = store.getState();\n    const nodes = Array.from(nodeInternals.values());\n    const selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, false, true);\n    const selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map(e => e.id);\n    const selectedNodeIds = selectedNodes.map(n => n.id);\n    if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\n      prevSelectedNodesCount.current = selectedNodeIds.length;\n      const changes = getSelectionChanges(nodes, selectedNodeIds);\n      if (changes.length) {\n        onNodesChange?.(changes);\n      }\n    }\n    if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\n      prevSelectedEdgesCount.current = selectedEdgeIds.length;\n      const changes = getSelectionChanges(edges, selectedEdgeIds);\n      if (changes.length) {\n        onEdgesChange?.(changes);\n      }\n    }\n    setUserSelectionRect(nextUserSelectRect);\n  };\n  const onMouseUp = () => {\n    store.setState({\n      nodesSelectionActive: prevSelectedNodesCount.current > 0\n    });\n    resetUserSelection();\n  };\n  const onMouseLeave = () => {\n    store.setState({\n      nodesSelectionActive: false\n    });\n    resetUserSelection();\n  };\n  return jsx(\"div\", {\n    className: \"react-flow__selectionpane react-flow__container\",\n    onMouseDown: onMouseDown,\n    onMouseMove: onMouseMove,\n    onMouseUp: onMouseUp,\n    onMouseLeave: onMouseLeave,\n    children: userSelectionRect.draw && jsx(\"div\", {\n      className: \"react-flow__selection react-flow__container\",\n      style: {\n        width: userSelectionRect.width,\n        height: userSelectionRect.height,\n        transform: `translate(${userSelectionRect.x}px, ${userSelectionRect.y}px)`\n      }\n    })\n  });\n});\nUserSelection.displayName = 'UserSelection';\nfunction isParentSelected(node, nodeInternals) {\n  if (!node.parentNode) {\n    return false;\n  }\n  const parentNode = nodeInternals.get(node.parentNode);\n  if (!parentNode) {\n    return false;\n  }\n  if (parentNode.selected) {\n    return true;\n  }\n  return isParentSelected(parentNode, nodeInternals);\n}\nfunction hasSelector(target, selector, nodeRef) {\n  let current = target;\n  do {\n    if (current?.matches(selector)) return true;\n    if (current === nodeRef.current) return false;\n    current = current.parentElement;\n  } while (current);\n  return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeInternals, mousePos, nodeId) {\n  return Array.from(nodeInternals.values()).filter(n => (n.selected || n.id === nodeId) && (!n.parentNode || !isParentSelected(n, nodeInternals))).map(n => ({\n    id: n.id,\n    position: n.position || {\n      x: 0,\n      y: 0\n    },\n    positionAbsolute: n.positionAbsolute || {\n      x: 0,\n      y: 0\n    },\n    distance: {\n      x: mousePos.x - (n.positionAbsolute?.x ?? 0),\n      y: mousePos.y - (n.positionAbsolute?.y ?? 0)\n    },\n    delta: {\n      x: 0,\n      y: 0\n    },\n    extent: n.extent,\n    parentNode: n.parentNode,\n    width: n.width,\n    height: n.height\n  }));\n}\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent) {\n  let currentExtent = node.extent || nodeExtent;\n  if (node.extent === 'parent') {\n    if (node.parentNode && node.width && node.height) {\n      const parent = nodeInternals.get(node.parentNode);\n      currentExtent = parent?.positionAbsolute && parent?.width && parent?.height ? [[parent.positionAbsolute.x, parent.positionAbsolute.y], [parent.positionAbsolute.x + parent.width - node.width, parent.positionAbsolute.y + parent.height - node.height]] : currentExtent;\n    } else {\n      devWarn('Only child nodes can use a parent extent. Help: https://reactflow.dev/error#500');\n      currentExtent = nodeExtent;\n    }\n  } else if (node.extent && node.parentNode) {\n    const parent = nodeInternals.get(node.parentNode);\n    const parentX = parent?.positionAbsolute?.x ?? 0;\n    const parentY = parent?.positionAbsolute?.y ?? 0;\n    currentExtent = [[node.extent[0][0] + parentX, node.extent[0][1] + parentY], [node.extent[1][0] + parentX, node.extent[1][1] + parentY]];\n  }\n  let parentPosition = {\n    x: 0,\n    y: 0\n  };\n  if (node.parentNode) {\n    const parentNode = nodeInternals.get(node.parentNode);\n    parentPosition = {\n      x: parentNode?.positionAbsolute?.x ?? 0,\n      y: parentNode?.positionAbsolute?.y ?? 0\n    };\n  }\n  const positionAbsolute = currentExtent ? clampPosition(nextPosition, currentExtent) : nextPosition;\n  return {\n    position: {\n      x: positionAbsolute.x - parentPosition.x,\n      y: positionAbsolute.y - parentPosition.y\n    },\n    positionAbsolute\n  };\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams(_ref40) {\n  let {\n    nodeId,\n    dragItems,\n    nodeInternals\n  } = _ref40;\n  const extentedDragItems = dragItems.map(n => {\n    const node = nodeInternals.get(n.id);\n    return {\n      ...node,\n      position: n.position,\n      positionAbsolute: n.positionAbsolute\n    };\n  });\n  return [nodeId ? extentedDragItems.find(n => n.id === nodeId) : extentedDragItems[0], extentedDragItems];\n}\nconst getHandleBounds = (selector, nodeElement, zoom, nodeOrigin) => {\n  const handles = nodeElement.querySelectorAll(selector);\n  if (!handles || !handles.length) {\n    return null;\n  }\n  const handlesArray = Array.from(handles);\n  const nodeBounds = nodeElement.getBoundingClientRect();\n  const nodeOffset = {\n    x: nodeBounds.width * nodeOrigin[0],\n    y: nodeBounds.height * nodeOrigin[1]\n  };\n  return handlesArray.map(handle => {\n    const handleBounds = handle.getBoundingClientRect();\n    return {\n      id: handle.getAttribute('data-handleid'),\n      position: handle.getAttribute('data-handlepos'),\n      x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\n      y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom,\n      ...getDimensions(handle)\n    };\n  });\n};\nfunction getMouseHandler(id, getState, handler) {\n  return handler === undefined ? handler : event => {\n    const node = getState().nodeInternals.get(id);\n    handler(event, {\n      ...node\n    });\n  };\n}\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick(_ref41) {\n  let {\n    id,\n    store,\n    unselect = false\n  } = _ref41;\n  const {\n    addSelectedNodes,\n    unselectNodesAndEdges,\n    multiSelectionActive,\n    nodeInternals\n  } = store.getState();\n  const node = nodeInternals.get(id);\n  store.setState({\n    nodesSelectionActive: false\n  });\n  if (!node.selected) {\n    addSelectedNodes([id]);\n  } else if (unselect || node.selected && multiSelectionActive) {\n    unselectNodesAndEdges({\n      nodes: [node]\n    });\n  }\n}\nfunction wrapSelectionDragFunc(selectionFunc) {\n  return (event, _, nodes) => selectionFunc?.(event, nodes);\n}\nfunction useDrag(_ref42) {\n  let {\n    nodeRef,\n    disabled = false,\n    noDragClassName,\n    handleSelector,\n    nodeId,\n    isSelectable,\n    selectNodesOnDrag\n  } = _ref42;\n  const [dragging, setDragging] = useState(false);\n  const store = useStoreApi();\n  const dragItems = useRef();\n  const lastPos = useRef({\n    x: null,\n    y: null\n  });\n  // returns the pointer position projected to the RF coordinate system\n  const getPointerPosition = useCallback(_ref43 => {\n    let {\n      sourceEvent\n    } = _ref43;\n    const {\n      transform,\n      snapGrid,\n      snapToGrid\n    } = store.getState();\n    const x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\n    const y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\n    const pointerPos = {\n      x: (x - transform[0]) / transform[2],\n      y: (y - transform[1]) / transform[2]\n    };\n    // we need the snapped position in order to be able to skip unnecessary drag events\n    return {\n      xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\n      ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y,\n      ...pointerPos\n    };\n  }, []);\n  useEffect(() => {\n    if (nodeRef?.current) {\n      const selection = select(nodeRef.current);\n      if (disabled) {\n        selection.on('.drag', null);\n      } else {\n        const dragHandler = drag().on('start', event => {\n          const {\n            nodeInternals,\n            multiSelectionActive,\n            unselectNodesAndEdges,\n            onNodeDragStart,\n            onSelectionDragStart\n          } = store.getState();\n          const onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\n          if (!selectNodesOnDrag && !multiSelectionActive && nodeId) {\n            if (!nodeInternals.get(nodeId)?.selected) {\n              // we need to reset selected nodes when selectNodesOnDrag=false\n              unselectNodesAndEdges();\n            }\n          }\n          if (nodeId && isSelectable && selectNodesOnDrag) {\n            handleNodeClick({\n              id: nodeId,\n              store\n            });\n          }\n          const pointerPos = getPointerPosition(event);\n          lastPos.current = pointerPos;\n          dragItems.current = getDragItems(nodeInternals, pointerPos, nodeId);\n          if (onStart && dragItems.current) {\n            const [currentNode, nodes] = getEventHandlerParams({\n              nodeId,\n              dragItems: dragItems.current,\n              nodeInternals\n            });\n            onStart(event.sourceEvent, currentNode, nodes);\n          }\n        }).on('drag', event => {\n          const {\n            updateNodePositions,\n            nodeInternals,\n            nodeExtent,\n            onNodeDrag,\n            onSelectionDrag,\n            snapGrid,\n            snapToGrid\n          } = store.getState();\n          const pointerPos = getPointerPosition(event);\n          // skip events without movement\n          if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) && dragItems.current) {\n            lastPos.current = {\n              x: pointerPos.xSnapped,\n              y: pointerPos.ySnapped\n            };\n            dragItems.current = dragItems.current.map(n => {\n              const nextPosition = {\n                x: pointerPos.x - n.distance.x,\n                y: pointerPos.y - n.distance.y\n              };\n              if (snapToGrid) {\n                nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n              }\n              const updatedPos = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent);\n              n.position = updatedPos.position;\n              n.positionAbsolute = updatedPos.positionAbsolute;\n              return n;\n            });\n            const onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\n            updateNodePositions(dragItems.current, true, true);\n            setDragging(true);\n            if (onDrag) {\n              const [currentNode, nodes] = getEventHandlerParams({\n                nodeId,\n                dragItems: dragItems.current,\n                nodeInternals\n              });\n              onDrag(event.sourceEvent, currentNode, nodes);\n            }\n          }\n        }).on('end', event => {\n          setDragging(false);\n          if (dragItems.current) {\n            const {\n              updateNodePositions,\n              nodeInternals,\n              onNodeDragStop,\n              onSelectionDragStop\n            } = store.getState();\n            const onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\n            updateNodePositions(dragItems.current, false, false);\n            if (onStop) {\n              const [currentNode, nodes] = getEventHandlerParams({\n                nodeId,\n                dragItems: dragItems.current,\n                nodeInternals\n              });\n              onStop(event.sourceEvent, currentNode, nodes);\n            }\n          }\n        }).filter(event => {\n          const target = event.target;\n          const isDraggable = !event.button && (!noDragClassName || !hasSelector(target, `.${noDragClassName}`, nodeRef)) && (!handleSelector || hasSelector(target, handleSelector, nodeRef));\n          return isDraggable;\n        });\n        selection.call(dragHandler);\n        return () => {\n          selection.on('.drag', null);\n        };\n      }\n    }\n  }, [nodeRef, disabled, noDragClassName, handleSelector, isSelectable, store, nodeId, selectNodesOnDrag, getPointerPosition]);\n  return dragging;\n}\nfunction useUpdateNodePositions() {\n  const store = useStoreApi();\n  const updatePositions = useCallback(positionDiff => {\n    const {\n      nodeInternals,\n      nodeExtent,\n      updateNodePositions\n    } = store.getState();\n    const selectedNodes = Array.from(nodeInternals.values()).filter(n => n.selected);\n    const nodeUpdates = selectedNodes.map(n => {\n      if (n.positionAbsolute) {\n        const updatedPos = calcNextPosition(n, {\n          x: n.positionAbsolute.x + positionDiff.x,\n          y: n.positionAbsolute.y + positionDiff.y\n        }, nodeInternals, nodeExtent);\n        n.position = updatedPos.position;\n        n.positionAbsolute = updatedPos.positionAbsolute;\n      }\n      return n;\n    });\n    updateNodePositions(nodeUpdates, true, true);\n  }, []);\n  return updatePositions;\n}\nconst arrowKeyDiffs = {\n  ArrowUp: {\n    x: 0,\n    y: -10\n  },\n  ArrowDown: {\n    x: 0,\n    y: 10\n  },\n  ArrowLeft: {\n    x: -10,\n    y: 0\n  },\n  ArrowRight: {\n    x: 10,\n    y: 0\n  }\n};\nvar wrapNode = NodeComponent => {\n  const NodeWrapper = _ref44 => {\n    let {\n      id,\n      type,\n      data,\n      xPos,\n      yPos,\n      xPosOrigin,\n      yPosOrigin,\n      selected,\n      onClick,\n      onMouseEnter,\n      onMouseMove,\n      onMouseLeave,\n      onContextMenu,\n      onDoubleClick,\n      style,\n      className,\n      isDraggable,\n      isSelectable,\n      isConnectable,\n      selectNodesOnDrag,\n      sourcePosition,\n      targetPosition,\n      hidden,\n      resizeObserver,\n      dragHandle,\n      zIndex,\n      isParent,\n      noDragClassName,\n      noPanClassName,\n      initialized,\n      disableKeyboardA11y,\n      ariaLabel,\n      rfId\n    } = _ref44;\n    const store = useStoreApi();\n    const nodeRef = useRef(null);\n    const prevSourcePosition = useRef(sourcePosition);\n    const prevTargetPosition = useRef(targetPosition);\n    const prevType = useRef(type);\n    const hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n    const updatePositions = useUpdateNodePositions();\n    const onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\n    const onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\n    const onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\n    const onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\n    const onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\n    const onSelectNodeHandler = event => {\n      if (isSelectable && (!selectNodesOnDrag || !isDraggable)) {\n        // this handler gets called within the drag start event when selectNodesOnDrag=true\n        handleNodeClick({\n          id,\n          store\n        });\n      }\n      if (onClick) {\n        const node = store.getState().nodeInternals.get(id);\n        onClick(event, {\n          ...node\n        });\n      }\n    };\n    const onKeyDown = event => {\n      if (elementSelectionKeys.includes(event.key) && isSelectable) {\n        const unselect = event.key === 'Escape';\n        if (unselect) {\n          nodeRef.current?.blur();\n        }\n        handleNodeClick({\n          id,\n          store,\n          unselect\n        });\n      } else if (selected && Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n        store.setState({\n          ariaLiveMessage: `Moved selected node ten pixels ${event.key.replace('Arrow', '').toLowerCase()}. New position, x: ${~~xPos}, y: ${~~yPos}`\n        });\n        updatePositions(arrowKeyDiffs[event.key]);\n      }\n    };\n    useEffect(() => {\n      if (nodeRef.current && !hidden) {\n        const currNode = nodeRef.current;\n        resizeObserver?.observe(currNode);\n        return () => resizeObserver?.unobserve(currNode);\n      }\n    }, [hidden]);\n    useEffect(() => {\n      // when the user programmatically changes the source or handle position, we re-initialize the node\n      const typeChanged = prevType.current !== type;\n      const sourcePosChanged = prevSourcePosition.current !== sourcePosition;\n      const targetPosChanged = prevTargetPosition.current !== targetPosition;\n      if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\n        if (typeChanged) {\n          prevType.current = type;\n        }\n        if (sourcePosChanged) {\n          prevSourcePosition.current = sourcePosition;\n        }\n        if (targetPosChanged) {\n          prevTargetPosition.current = targetPosition;\n        }\n        store.getState().updateNodeDimensions([{\n          id,\n          nodeElement: nodeRef.current,\n          forceUpdate: true\n        }]);\n      }\n    }, [id, type, sourcePosition, targetPosition]);\n    const dragging = useDrag({\n      nodeRef,\n      disabled: hidden || !isDraggable,\n      noDragClassName,\n      handleSelector: dragHandle,\n      nodeId: id,\n      isSelectable,\n      selectNodesOnDrag\n    });\n    if (hidden) {\n      return null;\n    }\n    return jsx(\"div\", {\n      className: cc(['react-flow__node', `react-flow__node-${type}`, className, {\n        selected,\n        selectable: isSelectable,\n        parent: isParent,\n        dragging,\n        [noPanClassName]: isDraggable\n      }]),\n      ref: nodeRef,\n      style: {\n        zIndex,\n        transform: `translate(${xPosOrigin}px,${yPosOrigin}px)`,\n        pointerEvents: hasPointerEvents ? 'all' : 'none',\n        visibility: initialized ? 'visible' : 'hidden',\n        ...style\n      },\n      \"data-id\": id,\n      \"data-testid\": `rf__node-${id}`,\n      onMouseEnter: onMouseEnterHandler,\n      onMouseMove: onMouseMoveHandler,\n      onMouseLeave: onMouseLeaveHandler,\n      onContextMenu: onContextMenuHandler,\n      onClick: onSelectNodeHandler,\n      onDoubleClick: onDoubleClickHandler,\n      onKeyDown: disableKeyboardA11y ? undefined : onKeyDown,\n      tabIndex: disableKeyboardA11y ? undefined : 0,\n      role: disableKeyboardA11y ? undefined : 'button',\n      \"aria-describedby\": disableKeyboardA11y ? undefined : `${ARIA_NODE_DESC_KEY}-${rfId}`,\n      \"aria-label\": ariaLabel,\n      children: jsx(Provider, {\n        value: id,\n        children: jsx(NodeComponent, {\n          id: id,\n          data: data,\n          type: type,\n          xPos: xPos,\n          yPos: yPos,\n          selected: selected,\n          isConnectable: isConnectable,\n          sourcePosition: sourcePosition,\n          targetPosition: targetPosition,\n          dragging: dragging,\n          dragHandle: dragHandle,\n          zIndex: zIndex\n        })\n      })\n    });\n  };\n  NodeWrapper.displayName = 'NodeWrapper';\n  return memo(NodeWrapper);\n};\nconst selector$7 = s => ({\n  transformString: `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`,\n  userSelectionActive: s.userSelectionActive,\n  ...getRectOfNodes(Array.from(s.nodeInternals.values()).filter(n => n.selected))\n});\nconst bboxSelector = s => {\n  const selectedNodes = Array.from(s.nodeInternals.values()).filter(n => n.selected);\n  return getRectOfNodes(selectedNodes);\n};\nfunction NodesSelection(_ref45) {\n  let {\n    onSelectionContextMenu,\n    noPanClassName,\n    disableKeyboardA11y\n  } = _ref45;\n  const store = useStoreApi();\n  const {\n    transformString,\n    userSelectionActive\n  } = useStore(selector$7, shallow);\n  const {\n    width,\n    height,\n    x: left,\n    y: top\n  } = useStore(bboxSelector, shallow);\n  const updatePositions = useUpdateNodePositions();\n  const nodeRef = useRef(null);\n  useEffect(() => {\n    if (!disableKeyboardA11y) {\n      nodeRef.current?.focus();\n    }\n  }, [disableKeyboardA11y]);\n  useDrag({\n    nodeRef\n  });\n  if (userSelectionActive || !width || !height) {\n    return null;\n  }\n  const onContextMenu = onSelectionContextMenu ? event => {\n    const selectedNodes = Array.from(store.getState().nodeInternals.values()).filter(n => n.selected);\n    onSelectionContextMenu(event, selectedNodes);\n  } : undefined;\n  const onKeyDown = event => {\n    if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n      updatePositions(arrowKeyDiffs[event.key]);\n    }\n  };\n  return jsx(\"div\", {\n    className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]),\n    style: {\n      transform: transformString\n    },\n    children: jsx(\"div\", {\n      ref: nodeRef,\n      className: \"react-flow__nodesselection-rect\",\n      onContextMenu: onContextMenu,\n      tabIndex: disableKeyboardA11y ? undefined : -1,\n      onKeyDown: disableKeyboardA11y ? undefined : onKeyDown,\n      style: {\n        width,\n        height,\n        top,\n        left\n      }\n    })\n  });\n}\nvar NodesSelection$1 = memo(NodesSelection);\nconst selector$6 = s => s.paneDragging;\nfunction Pane(_ref46) {\n  let {\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onContextMenu,\n    onWheel\n  } = _ref46;\n  const dragging = useStore(selector$6);\n  return jsx(\"div\", {\n    className: cc(['react-flow__pane', {\n      dragging\n    }]),\n    onClick: onClick,\n    onMouseEnter: onMouseEnter,\n    onMouseMove: onMouseMove,\n    onMouseLeave: onMouseLeave,\n    onContextMenu: onContextMenu,\n    onWheel: onWheel,\n    style: containerStyle\n  });\n}\nconst selector$5 = s => s.nodesSelectionActive;\nconst FlowRenderer = _ref47 => {\n  let {\n    children,\n    onPaneClick,\n    onPaneMouseEnter,\n    onPaneMouseMove,\n    onPaneMouseLeave,\n    onPaneContextMenu,\n    onPaneScroll,\n    deleteKeyCode,\n    onMove,\n    onMoveStart,\n    onMoveEnd,\n    selectionKeyCode,\n    multiSelectionKeyCode,\n    zoomActivationKeyCode,\n    elementsSelectable,\n    zoomOnScroll,\n    zoomOnPinch,\n    panOnScroll,\n    panOnScrollSpeed,\n    panOnScrollMode,\n    zoomOnDoubleClick,\n    panOnDrag,\n    defaultViewport,\n    translateExtent,\n    minZoom,\n    maxZoom,\n    preventScrolling,\n    onSelectionContextMenu,\n    noWheelClassName,\n    noPanClassName,\n    disableKeyboardA11y\n  } = _ref47;\n  const store = useStoreApi();\n  const nodesSelectionActive = useStore(selector$5);\n  const selectionKeyPressed = useKeyPress(selectionKeyCode);\n  useGlobalKeyHandler({\n    deleteKeyCode,\n    multiSelectionKeyCode\n  });\n  const onClick = event => {\n    onPaneClick?.(event);\n    store.getState().resetSelectedElements();\n    store.setState({\n      nodesSelectionActive: false\n    });\n  };\n  const onContextMenu = onPaneContextMenu ? event => onPaneContextMenu(event) : undefined;\n  const onWheel = onPaneScroll ? event => onPaneScroll(event) : undefined;\n  return jsxs(ZoomPane, {\n    onMove: onMove,\n    onMoveStart: onMoveStart,\n    onMoveEnd: onMoveEnd,\n    selectionKeyPressed: selectionKeyPressed,\n    elementsSelectable: elementsSelectable,\n    zoomOnScroll: zoomOnScroll,\n    zoomOnPinch: zoomOnPinch,\n    panOnScroll: panOnScroll,\n    panOnScrollSpeed: panOnScrollSpeed,\n    panOnScrollMode: panOnScrollMode,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    panOnDrag: panOnDrag,\n    defaultViewport: defaultViewport,\n    translateExtent: translateExtent,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    zoomActivationKeyCode: zoomActivationKeyCode,\n    preventScrolling: preventScrolling,\n    noWheelClassName: noWheelClassName,\n    noPanClassName: noPanClassName,\n    children: [children, jsx(UserSelection, {\n      selectionKeyPressed: selectionKeyPressed\n    }), nodesSelectionActive && jsx(NodesSelection$1, {\n      onSelectionContextMenu: onSelectionContextMenu,\n      noPanClassName: noPanClassName,\n      disableKeyboardA11y: disableKeyboardA11y\n    }), jsx(Pane, {\n      onClick: onClick,\n      onMouseEnter: onPaneMouseEnter,\n      onMouseMove: onPaneMouseMove,\n      onMouseLeave: onPaneMouseLeave,\n      onContextMenu: onContextMenu,\n      onWheel: onWheel\n    })]\n  });\n};\nFlowRenderer.displayName = 'FlowRenderer';\nvar FlowRenderer$1 = memo(FlowRenderer);\nfunction useVisibleNodes(onlyRenderVisible) {\n  const nodes = useStore(useCallback(s => onlyRenderVisible ? getNodesInside(s.nodeInternals, {\n    x: 0,\n    y: 0,\n    width: s.width,\n    height: s.height\n  }, s.transform, true) : Array.from(s.nodeInternals.values()), [onlyRenderVisible]));\n  return nodes;\n}\nfunction createNodeTypes(nodeTypes) {\n  const standardTypes = {\n    input: wrapNode(nodeTypes.input || InputNode$1),\n    default: wrapNode(nodeTypes.default || DefaultNode$1),\n    output: wrapNode(nodeTypes.output || OutputNode$1),\n    group: wrapNode(nodeTypes.group || GroupNode)\n  };\n  const wrappedTypes = {};\n  const specialTypes = Object.keys(nodeTypes).filter(k => !['input', 'default', 'output', 'group'].includes(k)).reduce((res, key) => {\n    res[key] = wrapNode(nodeTypes[key] || DefaultNode$1);\n    return res;\n  }, wrappedTypes);\n  return {\n    ...standardTypes,\n    ...specialTypes\n  };\n}\nconst getPositionWithOrigin = _ref48 => {\n  let {\n    x,\n    y,\n    width,\n    height,\n    origin\n  } = _ref48;\n  if (!width || !height) {\n    return {\n      x,\n      y\n    };\n  }\n  if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\n    devWarn('nodeOrigin must be between 0 and 1');\n    return {\n      x,\n      y\n    };\n  }\n  return {\n    x: x - width * origin[0],\n    y: y - height * origin[1]\n  };\n};\nconst selector$4 = s => ({\n  nodesDraggable: s.nodesDraggable,\n  nodesConnectable: s.nodesConnectable,\n  elementsSelectable: s.elementsSelectable,\n  updateNodeDimensions: s.updateNodeDimensions\n});\nconst NodeRenderer = props => {\n  const {\n    nodesDraggable,\n    nodesConnectable,\n    elementsSelectable,\n    updateNodeDimensions\n  } = useStore(selector$4, shallow);\n  const nodes = useVisibleNodes(props.onlyRenderVisibleElements);\n  const resizeObserverRef = useRef();\n  const resizeObserver = useMemo(() => {\n    if (typeof ResizeObserver === 'undefined') {\n      return null;\n    }\n    const observer = new ResizeObserver(entries => {\n      const updates = entries.map(entry => ({\n        id: entry.target.getAttribute('data-id'),\n        nodeElement: entry.target,\n        forceUpdate: true\n      }));\n      updateNodeDimensions(updates);\n    });\n    resizeObserverRef.current = observer;\n    return observer;\n  }, []);\n  useEffect(() => {\n    return () => {\n      resizeObserverRef?.current?.disconnect();\n    };\n  }, []);\n  return jsx(\"div\", {\n    className: \"react-flow__nodes\",\n    style: containerStyle,\n    children: nodes.map(node => {\n      let nodeType = node.type || 'default';\n      if (!props.nodeTypes[nodeType]) {\n        devWarn(`Node type \"${nodeType}\" not found. Using fallback type \"default\". Help: https://reactflow.dev/error#300`);\n        nodeType = 'default';\n      }\n      const NodeComponent = props.nodeTypes[nodeType] || props.nodeTypes.default;\n      const isDraggable = !!(node.draggable || nodesDraggable && typeof node.draggable === 'undefined');\n      const isSelectable = !!(node.selectable || elementsSelectable && typeof node.selectable === 'undefined');\n      const isConnectable = !!(node.connectable || nodesConnectable && typeof node.connectable === 'undefined');\n      const clampedPosition = props.nodeExtent ? clampPosition(node.positionAbsolute, props.nodeExtent) : node.positionAbsolute;\n      const posX = clampedPosition?.x ?? 0;\n      const posY = clampedPosition?.y ?? 0;\n      const posOrigin = getPositionWithOrigin({\n        x: posX,\n        y: posY,\n        width: node.width ?? 0,\n        height: node.height ?? 0,\n        origin: props.nodeOrigin\n      });\n      return jsx(NodeComponent, {\n        id: node.id,\n        className: node.className,\n        style: node.style,\n        type: nodeType,\n        data: node.data,\n        sourcePosition: node.sourcePosition || Position.Bottom,\n        targetPosition: node.targetPosition || Position.Top,\n        hidden: node.hidden,\n        xPos: posX,\n        yPos: posY,\n        xPosOrigin: posOrigin.x,\n        yPosOrigin: posOrigin.y,\n        selectNodesOnDrag: props.selectNodesOnDrag,\n        onClick: props.onNodeClick,\n        onMouseEnter: props.onNodeMouseEnter,\n        onMouseMove: props.onNodeMouseMove,\n        onMouseLeave: props.onNodeMouseLeave,\n        onContextMenu: props.onNodeContextMenu,\n        onDoubleClick: props.onNodeDoubleClick,\n        selected: !!node.selected,\n        isDraggable: isDraggable,\n        isSelectable: isSelectable,\n        isConnectable: isConnectable,\n        resizeObserver: resizeObserver,\n        dragHandle: node.dragHandle,\n        zIndex: node[internalsSymbol]?.z ?? 0,\n        isParent: !!node[internalsSymbol]?.isParent,\n        noDragClassName: props.noDragClassName,\n        noPanClassName: props.noPanClassName,\n        initialized: !!node.width && !!node.height,\n        rfId: props.rfId,\n        disableKeyboardA11y: props.disableKeyboardA11y,\n        ariaLabel: node.ariaLabel\n      }, node.id);\n    })\n  });\n};\nNodeRenderer.displayName = 'NodeRenderer';\nvar NodeRenderer$1 = memo(NodeRenderer);\nconst defaultEdgeTree = [{\n  level: 0,\n  isMaxLevel: true,\n  edges: []\n}];\nfunction groupEdgesByZLevel(edges, nodeInternals) {\n  let elevateEdgesOnSelect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let maxLevel = -1;\n  const levelLookup = edges.reduce((tree, edge) => {\n    const hasZIndex = isNumeric(edge.zIndex);\n    let z = hasZIndex ? edge.zIndex : 0;\n    if (elevateEdgesOnSelect) {\n      z = hasZIndex ? edge.zIndex : Math.max(nodeInternals.get(edge.source)?.[internalsSymbol]?.z || 0, nodeInternals.get(edge.target)?.[internalsSymbol]?.z || 0);\n    }\n    if (tree[z]) {\n      tree[z].push(edge);\n    } else {\n      tree[z] = [edge];\n    }\n    maxLevel = z > maxLevel ? z : maxLevel;\n    return tree;\n  }, {});\n  const edgeTree = Object.entries(levelLookup).map(_ref49 => {\n    let [key, edges] = _ref49;\n    const level = +key;\n    return {\n      edges,\n      level,\n      isMaxLevel: level === maxLevel\n    };\n  });\n  if (edgeTree.length === 0) {\n    return defaultEdgeTree;\n  }\n  return edgeTree;\n}\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\n  const edges = useStore(useCallback(s => {\n    if (!onlyRenderVisible) {\n      return s.edges;\n    }\n    return s.edges.filter(e => {\n      const sourceNode = nodeInternals.get(e.source);\n      const targetNode = nodeInternals.get(e.target);\n      return sourceNode?.width && sourceNode?.height && targetNode?.width && targetNode?.height && isEdgeVisible({\n        sourcePos: sourceNode.positionAbsolute || {\n          x: 0,\n          y: 0\n        },\n        targetPos: targetNode.positionAbsolute || {\n          x: 0,\n          y: 0\n        },\n        sourceWidth: sourceNode.width,\n        sourceHeight: sourceNode.height,\n        targetWidth: targetNode.width,\n        targetHeight: targetNode.height,\n        width: s.width,\n        height: s.height,\n        transform: s.transform\n      });\n    });\n  }, [onlyRenderVisible, nodeInternals]));\n  return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\n}\nconst oppositePosition = {\n  [Position.Left]: Position.Right,\n  [Position.Right]: Position.Left,\n  [Position.Top]: Position.Bottom,\n  [Position.Bottom]: Position.Top\n};\nconst ConnectionLine = _ref50 => {\n  let {\n    connectionNodeId,\n    connectionHandleType,\n    connectionLineStyle,\n    connectionLineType = ConnectionLineType.Bezier,\n    isConnectable,\n    CustomConnectionLineComponent\n  } = _ref50;\n  const {\n    fromNode,\n    handleId,\n    toX,\n    toY\n  } = useStore(useCallback(s => ({\n    fromNode: s.nodeInternals.get(connectionNodeId),\n    handleId: s.connectionHandleId,\n    toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\n    toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2]\n  }), [connectionNodeId]), shallow);\n  const fromHandleBounds = fromNode?.[internalsSymbol]?.handleBounds;\n  if (!fromNode || !isConnectable || !fromHandleBounds?.[connectionHandleType]) {\n    return null;\n  }\n  const handleBound = fromHandleBounds[connectionHandleType];\n  const fromHandle = handleId ? handleBound.find(d => d.id === handleId) : handleBound[0];\n  const fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : (fromNode?.width ?? 0) / 2;\n  const fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : fromNode?.height ?? 0;\n  const fromX = (fromNode?.positionAbsolute?.x || 0) + fromHandleX;\n  const fromY = (fromNode?.positionAbsolute?.y || 0) + fromHandleY;\n  const fromPosition = fromHandle?.position;\n  if (!fromPosition) {\n    return null;\n  }\n  const toPosition = oppositePosition[fromPosition];\n  if (CustomConnectionLineComponent) {\n    return jsx(\"g\", {\n      className: \"react-flow__connection\",\n      children: jsx(CustomConnectionLineComponent, {\n        connectionLineType: connectionLineType,\n        connectionLineStyle: connectionLineStyle,\n        fromNode: fromNode,\n        fromHandle: fromHandle,\n        fromX: fromX,\n        fromY: fromY,\n        toX: toX,\n        toY: toY,\n        fromPosition: fromPosition,\n        toPosition: toPosition\n      })\n    });\n  }\n  let dAttr = '';\n  const pathParams = {\n    sourceX: fromX,\n    sourceY: fromY,\n    sourcePosition: fromPosition,\n    targetX: toX,\n    targetY: toY,\n    targetPosition: toPosition\n  };\n  if (connectionLineType === ConnectionLineType.Bezier) {\n    // we assume the destination position is opposite to the source position\n    [dAttr] = getBezierPath(pathParams);\n  } else if (connectionLineType === ConnectionLineType.Step) {\n    [dAttr] = getSmoothStepPath({\n      ...pathParams,\n      borderRadius: 0\n    });\n  } else if (connectionLineType === ConnectionLineType.SmoothStep) {\n    [dAttr] = getSmoothStepPath(pathParams);\n  } else if (connectionLineType === ConnectionLineType.SimpleBezier) {\n    [dAttr] = getSimpleBezierPath(pathParams);\n  } else {\n    dAttr = `M${fromX},${fromY} ${toX},${toY}`;\n  }\n  return jsx(\"g\", {\n    className: \"react-flow__connection\",\n    children: jsx(\"path\", {\n      d: dAttr,\n      fill: \"none\",\n      className: \"react-flow__connection-path\",\n      style: connectionLineStyle\n    })\n  });\n};\nConnectionLine.displayName = 'ConnectionLine';\nconst ArrowSymbol = _ref51 => {\n  let {\n    color = 'none',\n    strokeWidth = 1\n  } = _ref51;\n  return jsx(\"polyline\", {\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: strokeWidth,\n    fill: \"none\",\n    points: \"-5,-4 0,0 -5,4\"\n  });\n};\nconst ArrowClosedSymbol = _ref52 => {\n  let {\n    color = 'none',\n    strokeWidth = 1\n  } = _ref52;\n  return jsx(\"polyline\", {\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: strokeWidth,\n    fill: color,\n    points: \"-5,-4 0,0 -5,4 -5,-4\"\n  });\n};\nconst MarkerSymbols = {\n  [MarkerType.Arrow]: ArrowSymbol,\n  [MarkerType.ArrowClosed]: ArrowClosedSymbol\n};\nfunction useMarkerSymbol(type) {\n  const symbol = useMemo(() => {\n    const symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n    if (!symbolExists) {\n      devWarn(`Marker type \"${type}\" doesn't exist. Help: https://reactflow.dev/error#900`);\n      return null;\n    }\n    return MarkerSymbols[type];\n  }, [type]);\n  return symbol;\n}\nconst Marker = _ref53 => {\n  let {\n    id,\n    type,\n    color,\n    width = 12.5,\n    height = 12.5,\n    markerUnits = 'strokeWidth',\n    strokeWidth,\n    orient = 'auto-start-reverse'\n  } = _ref53;\n  const Symbol = useMarkerSymbol(type);\n  if (!Symbol) {\n    return null;\n  }\n  return jsx(\"marker\", {\n    className: \"react-flow__arrowhead\",\n    id: id,\n    markerWidth: `${width}`,\n    markerHeight: `${height}`,\n    viewBox: \"-10 -10 20 20\",\n    markerUnits: markerUnits,\n    orient: orient,\n    refX: \"0\",\n    refY: \"0\",\n    children: jsx(Symbol, {\n      color: color,\n      strokeWidth: strokeWidth\n    })\n  });\n};\nconst markerSelector = _ref54 => {\n  let {\n    defaultColor,\n    rfId\n  } = _ref54;\n  return s => {\n    const ids = [];\n    return s.edges.reduce((markers, edge) => {\n      [edge.markerStart, edge.markerEnd].forEach(marker => {\n        if (marker && typeof marker === 'object') {\n          const markerId = getMarkerId(marker, rfId);\n          if (!ids.includes(markerId)) {\n            markers.push({\n              id: markerId,\n              color: marker.color || defaultColor,\n              ...marker\n            });\n            ids.push(markerId);\n          }\n        }\n      });\n      return markers;\n    }, []).sort((a, b) => a.id.localeCompare(b.id));\n  };\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nconst MarkerDefinitions = _ref55 => {\n  let {\n    defaultColor,\n    rfId\n  } = _ref55;\n  const markers = useStore(useCallback(markerSelector({\n    defaultColor,\n    rfId\n  }), [defaultColor, rfId]),\n  // the id includes all marker options, so we just need to look at that part of the marker\n  (a, b) => !(a.length !== b.length || a.some((m, i) => m.id !== b[i].id)));\n  return jsx(\"defs\", {\n    children: markers.map(marker => jsx(Marker, {\n      id: marker.id,\n      type: marker.type,\n      color: marker.color,\n      width: marker.width,\n      height: marker.height,\n      markerUnits: marker.markerUnits,\n      strokeWidth: marker.strokeWidth,\n      orient: marker.orient\n    }, marker.id))\n  });\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\nconst selector$3 = s => ({\n  connectionNodeId: s.connectionNodeId,\n  connectionHandleType: s.connectionHandleType,\n  nodesConnectable: s.nodesConnectable,\n  elementsSelectable: s.elementsSelectable,\n  width: s.width,\n  height: s.height,\n  connectionMode: s.connectionMode,\n  nodeInternals: s.nodeInternals\n});\nconst EdgeRenderer = props => {\n  const {\n    connectionNodeId,\n    connectionHandleType,\n    nodesConnectable,\n    elementsSelectable,\n    width,\n    height,\n    connectionMode,\n    nodeInternals\n  } = useStore(selector$3, shallow);\n  const edgeTree = useVisibleEdges(props.onlyRenderVisibleElements, nodeInternals, props.elevateEdgesOnSelect);\n  if (!width) {\n    return null;\n  }\n  const {\n    connectionLineType,\n    defaultMarkerColor,\n    connectionLineStyle,\n    connectionLineComponent,\n    connectionLineContainerStyle\n  } = props;\n  const renderConnectionLine = connectionNodeId && connectionHandleType;\n  return jsxs(Fragment, {\n    children: [edgeTree.map(_ref56 => {\n      let {\n        level,\n        edges,\n        isMaxLevel\n      } = _ref56;\n      return jsxs(\"svg\", {\n        style: {\n          zIndex: level\n        },\n        width: width,\n        height: height,\n        className: \"react-flow__edges react-flow__container\",\n        children: [isMaxLevel && jsx(MarkerDefinitions$1, {\n          defaultColor: defaultMarkerColor,\n          rfId: props.rfId\n        }), jsx(\"g\", {\n          children: edges.map(edge => {\n            const [sourceNodeRect, sourceHandleBounds, sourceIsValid] = getNodeData(nodeInternals.get(edge.source));\n            const [targetNodeRect, targetHandleBounds, targetIsValid] = getNodeData(nodeInternals.get(edge.target));\n            if (!sourceIsValid || !targetIsValid) {\n              return null;\n            }\n            let edgeType = edge.type || 'default';\n            if (!props.edgeTypes[edgeType]) {\n              devWarn(`Edge type \"${edgeType}\" not found. Using fallback type \"default\". Help: https://reactflow.dev/error#300`);\n              edgeType = 'default';\n            }\n            const EdgeComponent = props.edgeTypes[edgeType] || props.edgeTypes.default;\n            // when connection type is loose we can define all handles as sources\n            const targetNodeHandles = connectionMode === ConnectionMode.Strict ? targetHandleBounds.target : targetHandleBounds.target || targetHandleBounds.source;\n            const sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle || null);\n            const targetHandle = getHandle(targetNodeHandles, edge.targetHandle || null);\n            const sourcePosition = sourceHandle?.position || Position.Bottom;\n            const targetPosition = targetHandle?.position || Position.Top;\n            if (!sourceHandle || !targetHandle) {\n              devWarn(`Couldn't create edge for ${!sourceHandle ? 'source' : 'target'} handle id: ${!sourceHandle ? edge.sourceHandle : edge.targetHandle}; edge id: ${edge.id}. Help: https://reactflow.dev/error#800`);\n              return null;\n            }\n            const {\n              sourceX,\n              sourceY,\n              targetX,\n              targetY\n            } = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition);\n            return jsx(EdgeComponent, {\n              id: edge.id,\n              className: cc([edge.className, props.noPanClassName]),\n              type: edgeType,\n              data: edge.data,\n              selected: !!edge.selected,\n              animated: !!edge.animated,\n              hidden: !!edge.hidden,\n              label: edge.label,\n              labelStyle: edge.labelStyle,\n              labelShowBg: edge.labelShowBg,\n              labelBgStyle: edge.labelBgStyle,\n              labelBgPadding: edge.labelBgPadding,\n              labelBgBorderRadius: edge.labelBgBorderRadius,\n              style: edge.style,\n              source: edge.source,\n              target: edge.target,\n              sourceHandleId: edge.sourceHandle,\n              targetHandleId: edge.targetHandle,\n              markerEnd: edge.markerEnd,\n              markerStart: edge.markerStart,\n              sourceX: sourceX,\n              sourceY: sourceY,\n              targetX: targetX,\n              targetY: targetY,\n              sourcePosition: sourcePosition,\n              targetPosition: targetPosition,\n              elementsSelectable: elementsSelectable,\n              onEdgeUpdate: props.onEdgeUpdate,\n              onContextMenu: props.onEdgeContextMenu,\n              onMouseEnter: props.onEdgeMouseEnter,\n              onMouseMove: props.onEdgeMouseMove,\n              onMouseLeave: props.onEdgeMouseLeave,\n              onClick: props.onEdgeClick,\n              edgeUpdaterRadius: props.edgeUpdaterRadius,\n              onEdgeDoubleClick: props.onEdgeDoubleClick,\n              onEdgeUpdateStart: props.onEdgeUpdateStart,\n              onEdgeUpdateEnd: props.onEdgeUpdateEnd,\n              rfId: props.rfId,\n              ariaLabel: edge.ariaLabel,\n              disableKeyboardA11y: props.disableKeyboardA11y,\n              pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined,\n              interactionWidth: edge.interactionWidth\n            }, edge.id);\n          })\n        })]\n      }, level);\n    }), renderConnectionLine && jsx(\"svg\", {\n      style: connectionLineContainerStyle,\n      width: width,\n      height: height,\n      className: \"react-flow__edges react-flow__connectionline react-flow__container\",\n      children: jsx(ConnectionLine, {\n        connectionNodeId: connectionNodeId,\n        connectionHandleType: connectionHandleType,\n        connectionLineStyle: connectionLineStyle,\n        connectionLineType: connectionLineType,\n        isConnectable: nodesConnectable,\n        CustomConnectionLineComponent: connectionLineComponent\n      })\n    })]\n  });\n};\nEdgeRenderer.displayName = 'EdgeRenderer';\nvar EdgeRenderer$1 = memo(EdgeRenderer);\nconst selector$2 = s => `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`;\nfunction Viewport(_ref57) {\n  let {\n    children\n  } = _ref57;\n  const transform = useStore(selector$2);\n  return jsx(\"div\", {\n    className: \"react-flow__viewport react-flow__container\",\n    style: {\n      transform\n    },\n    children: children\n  });\n}\nfunction calculateXYZPosition(node, nodeInternals, parentNodes, result) {\n  if (!node.parentNode) {\n    return result;\n  }\n  const parentNode = nodeInternals.get(node.parentNode);\n  return calculateXYZPosition(parentNode, nodeInternals, parentNodes, {\n    x: (result.x ?? 0) + (parentNode.position?.x ?? 0),\n    y: (result.y ?? 0) + (parentNode.position?.y ?? 0),\n    z: (parentNode[internalsSymbol]?.z ?? 0) > (result.z ?? 0) ? parentNode[internalsSymbol]?.z ?? 0 : result.z ?? 0\n  });\n}\nfunction createNodeInternals(nodes, nodeInternals) {\n  const nextNodeInternals = new Map();\n  const parentNodes = {};\n  nodes.forEach(node => {\n    const z = isNumeric(node.zIndex) ? node.zIndex : node.selected ? 1000 : 0;\n    const currInternals = nodeInternals.get(node.id);\n    const internals = {\n      width: currInternals?.width,\n      height: currInternals?.height,\n      ...node,\n      positionAbsolute: {\n        x: node.position.x,\n        y: node.position.y\n      }\n    };\n    if (node.parentNode) {\n      internals.parentNode = node.parentNode;\n      parentNodes[node.parentNode] = true;\n    }\n    Object.defineProperty(internals, internalsSymbol, {\n      enumerable: false,\n      value: {\n        handleBounds: currInternals?.[internalsSymbol]?.handleBounds,\n        z\n      }\n    });\n    nextNodeInternals.set(node.id, internals);\n  });\n  nextNodeInternals.forEach(node => {\n    if (node.parentNode && !nextNodeInternals.has(node.parentNode)) {\n      throw new Error(`Parent node ${node.parentNode} not found`);\n    }\n    if (node.parentNode || parentNodes[node.id]) {\n      const {\n        x,\n        y,\n        z\n      } = calculateXYZPosition(node, nextNodeInternals, parentNodes, {\n        ...node.position,\n        z: node[internalsSymbol]?.z ?? 0\n      });\n      node.positionAbsolute = {\n        x,\n        y\n      };\n      node[internalsSymbol].z = z;\n      if (parentNodes[node.id]) {\n        node[internalsSymbol].isParent = true;\n      }\n    }\n  });\n  return nextNodeInternals;\n}\nfunction fitView(get) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    nodeInternals,\n    width,\n    height,\n    minZoom,\n    maxZoom,\n    d3Zoom,\n    d3Selection,\n    fitViewOnInitDone,\n    fitViewOnInit\n  } = get();\n  if (options.initial && !fitViewOnInitDone && fitViewOnInit || !options.initial) {\n    if (d3Zoom && d3Selection) {\n      const nodes = Array.from(nodeInternals.values()).filter(n => options.includeHiddenNodes ? n.width && n.height : !n.hidden);\n      const nodesInitialized = nodes.every(n => n.width && n.height);\n      if (nodes.length > 0 && nodesInitialized) {\n        const bounds = getRectOfNodes(nodes);\n        const [x, y, zoom] = getTransformForBounds(bounds, width, height, options.minZoom ?? minZoom, options.maxZoom ?? maxZoom, options.padding ?? 0.1);\n        const nextTransform = zoomIdentity.translate(x, y).scale(zoom);\n        if (typeof options.duration === 'number' && options.duration > 0) {\n          d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\n        } else {\n          d3Zoom.transform(d3Selection, nextTransform);\n        }\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\n  nodeChanges.forEach(change => {\n    const node = nodeInternals.get(change.id);\n    if (node) {\n      nodeInternals.set(node.id, {\n        ...node,\n        [internalsSymbol]: node[internalsSymbol],\n        selected: change.selected\n      });\n    }\n  });\n  return new Map(nodeInternals);\n}\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\n  return edges.map(e => {\n    const change = edgeChanges.find(change => change.id === e.id);\n    if (change) {\n      e.selected = change.selected;\n    }\n    return e;\n  });\n}\nfunction updateNodesAndEdgesSelections(_ref58) {\n  let {\n    changedNodes,\n    changedEdges,\n    get,\n    set\n  } = _ref58;\n  const {\n    nodeInternals,\n    edges,\n    onNodesChange,\n    onEdgesChange,\n    hasDefaultNodes,\n    hasDefaultEdges\n  } = get();\n  if (changedNodes?.length) {\n    if (hasDefaultNodes) {\n      set({\n        nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals)\n      });\n    }\n    onNodesChange?.(changedNodes);\n  }\n  if (changedEdges?.length) {\n    if (hasDefaultEdges) {\n      set({\n        edges: handleControlledEdgeSelectionChange(changedEdges, edges)\n      });\n    }\n    onEdgesChange?.(changedEdges);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nconst initialViewportHelper = {\n  zoomIn: noop,\n  zoomOut: noop,\n  zoomTo: noop,\n  getZoom: () => 1,\n  setViewport: noop,\n  getViewport: () => ({\n    x: 0,\n    y: 0,\n    zoom: 1\n  }),\n  fitView: noop,\n  setCenter: noop,\n  fitBounds: noop,\n  project: position => position,\n  viewportInitialized: false\n};\nconst selector$1 = s => ({\n  d3Zoom: s.d3Zoom,\n  d3Selection: s.d3Selection\n});\nconst useViewportHelper = () => {\n  const store = useStoreApi();\n  const {\n    d3Zoom,\n    d3Selection\n  } = useStore(selector$1, shallow);\n  const viewportHelperFunctions = useMemo(() => {\n    if (d3Selection && d3Zoom) {\n      return {\n        zoomIn: options => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1.2),\n        zoomOut: options => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1 / 1.2),\n        zoomTo: (zoomLevel, options) => d3Zoom.scaleTo(getD3Transition(d3Selection, options?.duration), zoomLevel),\n        getZoom: () => store.getState().transform[2],\n        setViewport: (transform, options) => {\n          const [x, y, zoom] = store.getState().transform;\n          const nextTransform = zoomIdentity.translate(transform.x ?? x, transform.y ?? y).scale(transform.zoom ?? zoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options?.duration), nextTransform);\n        },\n        getViewport: () => {\n          const [x, y, zoom] = store.getState().transform;\n          return {\n            x,\n            y,\n            zoom\n          };\n        },\n        fitView: options => fitView(store.getState, options),\n        setCenter: (x, y, options) => {\n          const {\n            width,\n            height,\n            maxZoom\n          } = store.getState();\n          const nextZoom = typeof options?.zoom !== 'undefined' ? options.zoom : maxZoom;\n          const centerX = width / 2 - x * nextZoom;\n          const centerY = height / 2 - y * nextZoom;\n          const transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n        },\n        fitBounds: (bounds, options) => {\n          const {\n            width,\n            height,\n            minZoom,\n            maxZoom\n          } = store.getState();\n          const [x, y, zoom] = getTransformForBounds(bounds, width, height, minZoom, maxZoom, options?.padding ?? 0.1);\n          const transform = zoomIdentity.translate(x, y).scale(zoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n        },\n        project: position => {\n          const {\n            transform,\n            snapToGrid,\n            snapGrid\n          } = store.getState();\n          return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\n        },\n        viewportInitialized: true\n      };\n    }\n    return initialViewportHelper;\n  }, [d3Zoom, d3Selection]);\n  return viewportHelperFunctions;\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction useReactFlow() {\n  const viewportHelper = useViewportHelper();\n  const store = useStoreApi();\n  const getNodes = useCallback(() => {\n    const {\n      nodeInternals\n    } = store.getState();\n    const nodes = Array.from(nodeInternals.values());\n    return nodes.map(n => ({\n      ...n\n    }));\n  }, []);\n  const getNode = useCallback(id => {\n    const {\n      nodeInternals\n    } = store.getState();\n    return nodeInternals.get(id);\n  }, []);\n  const getEdges = useCallback(() => {\n    const {\n      edges = []\n    } = store.getState();\n    return edges.map(e => ({\n      ...e\n    }));\n  }, []);\n  const getEdge = useCallback(id => {\n    const {\n      edges = []\n    } = store.getState();\n    return edges.find(e => e.id === id);\n  }, []);\n  const setNodes = useCallback(payload => {\n    const {\n      nodeInternals,\n      setNodes,\n      hasDefaultNodes,\n      onNodesChange\n    } = store.getState();\n    const nodes = Array.from(nodeInternals.values());\n    const nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\n    if (hasDefaultNodes) {\n      setNodes(nextNodes);\n    } else if (onNodesChange) {\n      const changes = nextNodes.length === 0 ? nodes.map(node => ({\n        type: 'remove',\n        id: node.id\n      })) : nextNodes.map(node => ({\n        item: node,\n        type: 'reset'\n      }));\n      onNodesChange(changes);\n    }\n  }, []);\n  const setEdges = useCallback(payload => {\n    const {\n      edges = [],\n      setEdges,\n      hasDefaultEdges,\n      onEdgesChange\n    } = store.getState();\n    const nextEdges = typeof payload === 'function' ? payload(edges) : payload;\n    if (hasDefaultEdges) {\n      setEdges(nextEdges);\n    } else if (onEdgesChange) {\n      const changes = nextEdges.length === 0 ? edges.map(edge => ({\n        type: 'remove',\n        id: edge.id\n      })) : nextEdges.map(edge => ({\n        item: edge,\n        type: 'reset'\n      }));\n      onEdgesChange(changes);\n    }\n  }, []);\n  const addNodes = useCallback(payload => {\n    const nodes = Array.isArray(payload) ? payload : [payload];\n    const {\n      nodeInternals,\n      setNodes,\n      hasDefaultNodes,\n      onNodesChange\n    } = store.getState();\n    if (hasDefaultNodes) {\n      const currentNodes = Array.from(nodeInternals.values());\n      const nextNodes = [...currentNodes, ...nodes];\n      setNodes(nextNodes);\n    } else if (onNodesChange) {\n      const changes = nodes.map(node => ({\n        item: node,\n        type: 'add'\n      }));\n      onNodesChange(changes);\n    }\n  }, []);\n  const addEdges = useCallback(payload => {\n    const nextEdges = Array.isArray(payload) ? payload : [payload];\n    const {\n      edges = [],\n      setEdges,\n      hasDefaultEdges,\n      onEdgesChange\n    } = store.getState();\n    if (hasDefaultEdges) {\n      setEdges([...edges, ...nextEdges]);\n    } else if (onEdgesChange) {\n      const changes = nextEdges.map(edge => ({\n        item: edge,\n        type: 'add'\n      }));\n      onEdgesChange(changes);\n    }\n  }, []);\n  const toObject = useCallback(() => {\n    const {\n      nodeInternals,\n      edges = [],\n      transform\n    } = store.getState();\n    const nodes = Array.from(nodeInternals.values());\n    const [x, y, zoom] = transform;\n    return {\n      nodes: nodes.map(n => ({\n        ...n\n      })),\n      edges: edges.map(e => ({\n        ...e\n      })),\n      viewport: {\n        x,\n        y,\n        zoom\n      }\n    };\n  }, []);\n  return useMemo(() => {\n    return {\n      ...viewportHelper,\n      getNodes,\n      getNode,\n      getEdges,\n      getEdge,\n      setNodes,\n      setEdges,\n      addNodes,\n      addEdges,\n      toObject\n    };\n  }, [viewportHelper, getNodes, getNode, getEdges, getEdge, setNodes, setEdges, addNodes, addEdges, toObject]);\n}\nfunction useOnInitHandler(onInit) {\n  const rfInstance = useReactFlow();\n  const isInitialized = useRef(false);\n  useEffect(() => {\n    if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n      setTimeout(() => onInit(rfInstance), 1);\n      isInitialized.current = true;\n    }\n  }, [onInit, rfInstance.viewportInitialized]);\n}\nconst GraphView = _ref59 => {\n  let {\n    nodeTypes,\n    edgeTypes,\n    onMove,\n    onMoveStart,\n    onMoveEnd,\n    onInit,\n    onNodeClick,\n    onEdgeClick,\n    onNodeDoubleClick,\n    onEdgeDoubleClick,\n    onNodeMouseEnter,\n    onNodeMouseMove,\n    onNodeMouseLeave,\n    onNodeContextMenu,\n    onSelectionContextMenu,\n    connectionLineType,\n    connectionLineStyle,\n    connectionLineComponent,\n    connectionLineContainerStyle,\n    selectionKeyCode,\n    multiSelectionKeyCode,\n    zoomActivationKeyCode,\n    deleteKeyCode,\n    onlyRenderVisibleElements,\n    elementsSelectable,\n    selectNodesOnDrag,\n    defaultViewport,\n    translateExtent,\n    minZoom,\n    maxZoom,\n    preventScrolling,\n    defaultMarkerColor,\n    zoomOnScroll,\n    zoomOnPinch,\n    panOnScroll,\n    panOnScrollSpeed,\n    panOnScrollMode,\n    zoomOnDoubleClick,\n    panOnDrag,\n    onPaneClick,\n    onPaneMouseEnter,\n    onPaneMouseMove,\n    onPaneMouseLeave,\n    onPaneScroll,\n    onPaneContextMenu,\n    onEdgeUpdate,\n    onEdgeContextMenu,\n    onEdgeMouseEnter,\n    onEdgeMouseMove,\n    onEdgeMouseLeave,\n    edgeUpdaterRadius,\n    onEdgeUpdateStart,\n    onEdgeUpdateEnd,\n    noDragClassName,\n    noWheelClassName,\n    noPanClassName,\n    elevateEdgesOnSelect,\n    disableKeyboardA11y,\n    nodeOrigin,\n    nodeExtent,\n    rfId\n  } = _ref59;\n  useOnInitHandler(onInit);\n  return jsx(FlowRenderer$1, {\n    onPaneClick: onPaneClick,\n    onPaneMouseEnter: onPaneMouseEnter,\n    onPaneMouseMove: onPaneMouseMove,\n    onPaneMouseLeave: onPaneMouseLeave,\n    onPaneContextMenu: onPaneContextMenu,\n    onPaneScroll: onPaneScroll,\n    deleteKeyCode: deleteKeyCode,\n    selectionKeyCode: selectionKeyCode,\n    multiSelectionKeyCode: multiSelectionKeyCode,\n    zoomActivationKeyCode: zoomActivationKeyCode,\n    elementsSelectable: elementsSelectable,\n    onMove: onMove,\n    onMoveStart: onMoveStart,\n    onMoveEnd: onMoveEnd,\n    zoomOnScroll: zoomOnScroll,\n    zoomOnPinch: zoomOnPinch,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    panOnScroll: panOnScroll,\n    panOnScrollSpeed: panOnScrollSpeed,\n    panOnScrollMode: panOnScrollMode,\n    panOnDrag: panOnDrag,\n    defaultViewport: defaultViewport,\n    translateExtent: translateExtent,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    onSelectionContextMenu: onSelectionContextMenu,\n    preventScrolling: preventScrolling,\n    noDragClassName: noDragClassName,\n    noWheelClassName: noWheelClassName,\n    noPanClassName: noPanClassName,\n    disableKeyboardA11y: disableKeyboardA11y,\n    children: jsxs(Viewport, {\n      children: [jsx(EdgeRenderer$1, {\n        edgeTypes: edgeTypes,\n        onEdgeClick: onEdgeClick,\n        onEdgeDoubleClick: onEdgeDoubleClick,\n        connectionLineType: connectionLineType,\n        connectionLineStyle: connectionLineStyle,\n        connectionLineComponent: connectionLineComponent,\n        connectionLineContainerStyle: connectionLineContainerStyle,\n        onEdgeUpdate: onEdgeUpdate,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        onEdgeContextMenu: onEdgeContextMenu,\n        onEdgeMouseEnter: onEdgeMouseEnter,\n        onEdgeMouseMove: onEdgeMouseMove,\n        onEdgeMouseLeave: onEdgeMouseLeave,\n        onEdgeUpdateStart: onEdgeUpdateStart,\n        onEdgeUpdateEnd: onEdgeUpdateEnd,\n        edgeUpdaterRadius: edgeUpdaterRadius,\n        defaultMarkerColor: defaultMarkerColor,\n        noPanClassName: noPanClassName,\n        elevateEdgesOnSelect: !!elevateEdgesOnSelect,\n        disableKeyboardA11y: disableKeyboardA11y,\n        rfId: rfId\n      }), jsx(NodeRenderer$1, {\n        nodeTypes: nodeTypes,\n        onNodeClick: onNodeClick,\n        onNodeDoubleClick: onNodeDoubleClick,\n        onNodeMouseEnter: onNodeMouseEnter,\n        onNodeMouseMove: onNodeMouseMove,\n        onNodeMouseLeave: onNodeMouseLeave,\n        onNodeContextMenu: onNodeContextMenu,\n        selectNodesOnDrag: selectNodesOnDrag,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        noPanClassName: noPanClassName,\n        noDragClassName: noDragClassName,\n        disableKeyboardA11y: disableKeyboardA11y,\n        nodeOrigin: nodeOrigin,\n        nodeExtent: nodeExtent,\n        rfId: rfId\n      })]\n    })\n  });\n};\nGraphView.displayName = 'GraphView';\nvar GraphView$1 = memo(GraphView);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\n  const typesKeysRef = useRef(null);\n  const typesParsed = useMemo(() => {\n    if (process.env.NODE_ENV === 'development') {\n      const typeKeys = Object.keys(nodeOrEdgeTypes);\n      if (shallow(typesKeysRef.current, typeKeys)) {\n        devWarn(\"It looks like you have created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them. Help: https://reactflow.dev/error#200\");\n      }\n      typesKeysRef.current = typeKeys;\n    }\n    return createTypes(nodeOrEdgeTypes);\n  }, [nodeOrEdgeTypes]);\n  return typesParsed;\n}\nconst infiniteExtent = [[Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY], [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY]];\nconst initialState = {\n  rfId: '1',\n  width: 0,\n  height: 0,\n  transform: [0, 0, 1],\n  nodeInternals: new Map(),\n  edges: [],\n  onNodesChange: null,\n  onEdgesChange: null,\n  hasDefaultNodes: false,\n  hasDefaultEdges: false,\n  d3Zoom: null,\n  d3Selection: null,\n  d3ZoomHandler: undefined,\n  minZoom: 0.5,\n  maxZoom: 2,\n  translateExtent: infiniteExtent,\n  nodeExtent: infiniteExtent,\n  nodesSelectionActive: false,\n  userSelectionActive: false,\n  connectionNodeId: null,\n  connectionHandleId: null,\n  connectionHandleType: 'source',\n  connectionPosition: {\n    x: 0,\n    y: 0\n  },\n  connectionMode: ConnectionMode.Strict,\n  domNode: null,\n  paneDragging: false,\n  noPanClassName: 'nopan',\n  nodeOrigin: [0, 0],\n  snapGrid: [15, 15],\n  snapToGrid: false,\n  nodesDraggable: true,\n  nodesConnectable: true,\n  elementsSelectable: true,\n  fitViewOnInit: false,\n  fitViewOnInitDone: false,\n  fitViewOnInitOptions: undefined,\n  multiSelectionActive: false,\n  connectionStartHandle: null,\n  connectOnClick: true,\n  ariaLiveMessage: ''\n};\nconst createRFStore = () => createStore((set, get) => ({\n  ...initialState,\n  setNodes: nodes => {\n    set({\n      nodeInternals: createNodeInternals(nodes, get().nodeInternals)\n    });\n  },\n  setEdges: edges => {\n    const {\n      defaultEdgeOptions = {}\n    } = get();\n    set({\n      edges: edges.map(e => ({\n        ...defaultEdgeOptions,\n        ...e\n      }))\n    });\n  },\n  setDefaultNodesAndEdges: (nodes, edges) => {\n    const hasDefaultNodes = typeof nodes !== 'undefined';\n    const hasDefaultEdges = typeof edges !== 'undefined';\n    const nodeInternals = hasDefaultNodes ? createNodeInternals(nodes, new Map()) : new Map();\n    const nextEdges = hasDefaultEdges ? edges : [];\n    set({\n      nodeInternals,\n      edges: nextEdges,\n      hasDefaultNodes,\n      hasDefaultEdges\n    });\n  },\n  updateNodeDimensions: updates => {\n    const {\n      onNodesChange,\n      nodeInternals,\n      fitViewOnInit,\n      fitViewOnInitDone,\n      fitViewOnInitOptions,\n      domNode,\n      nodeOrigin\n    } = get();\n    const viewportNode = domNode?.querySelector('.react-flow__viewport');\n    if (!viewportNode) {\n      return;\n    }\n    const style = window.getComputedStyle(viewportNode);\n    const {\n      m22: zoom\n    } = new window.DOMMatrixReadOnly(style.transform);\n    const changes = updates.reduce((res, update) => {\n      const node = nodeInternals.get(update.id);\n      if (node) {\n        const dimensions = getDimensions(update.nodeElement);\n        const doUpdate = !!(dimensions.width && dimensions.height && (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\n        if (doUpdate) {\n          nodeInternals.set(node.id, {\n            ...node,\n            [internalsSymbol]: {\n              ...node[internalsSymbol],\n              handleBounds: {\n                source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\n                target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin)\n              }\n            },\n            ...dimensions\n          });\n          res.push({\n            id: node.id,\n            type: 'dimensions',\n            dimensions\n          });\n        }\n      }\n      return res;\n    }, []);\n    const nextFitViewOnInitDone = fitViewOnInitDone || fitViewOnInit && !fitViewOnInitDone && fitView(get, {\n      initial: true,\n      ...fitViewOnInitOptions\n    });\n    set({\n      nodeInternals: new Map(nodeInternals),\n      fitViewOnInitDone: nextFitViewOnInitDone\n    });\n    if (changes?.length > 0) {\n      onNodesChange?.(changes);\n    }\n  },\n  updateNodePositions: function (nodeDragItems) {\n    let positionChanged = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let dragging = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const {\n      onNodesChange,\n      nodeInternals,\n      hasDefaultNodes\n    } = get();\n    if (hasDefaultNodes || onNodesChange) {\n      const changes = nodeDragItems.map(node => {\n        const change = {\n          id: node.id,\n          type: 'position',\n          dragging\n        };\n        if (positionChanged) {\n          change.positionAbsolute = node.positionAbsolute;\n          change.position = node.position;\n        }\n        return change;\n      });\n      if (changes?.length) {\n        if (hasDefaultNodes) {\n          const nodes = applyNodeChanges(changes, Array.from(nodeInternals.values()));\n          const nextNodeInternals = createNodeInternals(nodes, nodeInternals);\n          set({\n            nodeInternals: nextNodeInternals\n          });\n        }\n        onNodesChange?.(changes);\n      }\n    }\n  },\n  addSelectedNodes: selectedNodeIds => {\n    const {\n      multiSelectionActive,\n      nodeInternals,\n      edges\n    } = get();\n    let changedNodes;\n    let changedEdges = null;\n    if (multiSelectionActive) {\n      changedNodes = selectedNodeIds.map(nodeId => createSelectionChange(nodeId, true));\n    } else {\n      changedNodes = getSelectionChanges(Array.from(nodeInternals.values()), selectedNodeIds);\n      changedEdges = getSelectionChanges(edges, []);\n    }\n    updateNodesAndEdgesSelections({\n      changedNodes,\n      changedEdges,\n      get,\n      set\n    });\n  },\n  addSelectedEdges: selectedEdgeIds => {\n    const {\n      multiSelectionActive,\n      edges,\n      nodeInternals\n    } = get();\n    let changedEdges;\n    let changedNodes = null;\n    if (multiSelectionActive) {\n      changedEdges = selectedEdgeIds.map(edgeId => createSelectionChange(edgeId, true));\n    } else {\n      changedEdges = getSelectionChanges(edges, selectedEdgeIds);\n      changedNodes = getSelectionChanges(Array.from(nodeInternals.values()), []);\n    }\n    updateNodesAndEdgesSelections({\n      changedNodes,\n      changedEdges,\n      get,\n      set\n    });\n  },\n  unselectNodesAndEdges: function () {\n    let {\n      nodes,\n      edges\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      nodeInternals,\n      edges: storeEdges\n    } = get();\n    const nodesToUnselect = nodes ? nodes : Array.from(nodeInternals.values());\n    const edgesToUnselect = edges ? edges : storeEdges;\n    const changedNodes = nodesToUnselect.map(n => {\n      n.selected = false;\n      return createSelectionChange(n.id, false);\n    });\n    const changedEdges = edgesToUnselect.map(edge => createSelectionChange(edge.id, false));\n    updateNodesAndEdgesSelections({\n      changedNodes,\n      changedEdges,\n      get,\n      set\n    });\n  },\n  setMinZoom: minZoom => {\n    const {\n      d3Zoom,\n      maxZoom\n    } = get();\n    d3Zoom?.scaleExtent([minZoom, maxZoom]);\n    set({\n      minZoom\n    });\n  },\n  setMaxZoom: maxZoom => {\n    const {\n      d3Zoom,\n      minZoom\n    } = get();\n    d3Zoom?.scaleExtent([minZoom, maxZoom]);\n    set({\n      maxZoom\n    });\n  },\n  setTranslateExtent: translateExtent => {\n    const {\n      d3Zoom\n    } = get();\n    d3Zoom?.translateExtent(translateExtent);\n    set({\n      translateExtent\n    });\n  },\n  resetSelectedElements: () => {\n    const {\n      nodeInternals,\n      edges\n    } = get();\n    const nodes = Array.from(nodeInternals.values());\n    const nodesToUnselect = nodes.filter(e => e.selected).map(n => createSelectionChange(n.id, false));\n    const edgesToUnselect = edges.filter(e => e.selected).map(e => createSelectionChange(e.id, false));\n    updateNodesAndEdgesSelections({\n      changedNodes: nodesToUnselect,\n      changedEdges: edgesToUnselect,\n      get,\n      set\n    });\n  },\n  setNodeExtent: nodeExtent => {\n    const {\n      nodeInternals\n    } = get();\n    nodeInternals.forEach(node => {\n      node.positionAbsolute = clampPosition(node.position, nodeExtent);\n    });\n    set({\n      nodeExtent,\n      nodeInternals: new Map(nodeInternals)\n    });\n  },\n  reset: () => set({\n    ...initialState\n  })\n}));\nconst ReactFlowProvider = _ref60 => {\n  let {\n    children\n  } = _ref60;\n  const storeRef = useRef(null);\n  if (!storeRef.current) {\n    storeRef.current = createRFStore();\n  }\n  return jsx(Provider$1, {\n    value: storeRef.current,\n    children: children\n  });\n};\nReactFlowProvider.displayName = 'ReactFlowProvider';\nconst Wrapper = _ref61 => {\n  let {\n    children\n  } = _ref61;\n  let isWrapped = true;\n  try {\n    useStoreApi();\n  } catch (e) {\n    isWrapped = false;\n  }\n  if (isWrapped) {\n    // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n    return jsx(Fragment, {\n      children: children\n    });\n  }\n  return jsx(ReactFlowProvider, {\n    children: children\n  });\n};\nWrapper.displayName = 'ReactFlowWrapper';\nconst defaultNodeTypes = {\n  input: InputNode$1,\n  default: DefaultNode$1,\n  output: OutputNode$1,\n  group: GroupNode\n};\nconst defaultEdgeTypes = {\n  default: BezierEdge,\n  straight: StraightEdge,\n  step: StepEdge,\n  smoothstep: SmoothStepEdge,\n  simplebezier: SimpleBezierEdge\n};\nconst initNodeOrigin = [0, 0];\nconst initSnapGrid = [15, 15];\nconst initDefaultViewport = {\n  x: 0,\n  y: 0,\n  zoom: 1\n};\nconst wrapperStyle = {\n  width: '100%',\n  height: '100%',\n  position: 'relative',\n  overflow: 'hidden'\n};\nconst ReactFlow = forwardRef((_ref62, ref) => {\n  let {\n    nodes,\n    edges,\n    defaultNodes,\n    defaultEdges,\n    className,\n    nodeTypes = defaultNodeTypes,\n    edgeTypes = defaultEdgeTypes,\n    onNodeClick,\n    onEdgeClick,\n    onInit,\n    onMove,\n    onMoveStart,\n    onMoveEnd,\n    onConnect,\n    onConnectStart,\n    onConnectEnd,\n    onClickConnectStart,\n    onClickConnectEnd,\n    onNodeMouseEnter,\n    onNodeMouseMove,\n    onNodeMouseLeave,\n    onNodeContextMenu,\n    onNodeDoubleClick,\n    onNodeDragStart,\n    onNodeDrag,\n    onNodeDragStop,\n    onNodesDelete,\n    onEdgesDelete,\n    onSelectionChange,\n    onSelectionDragStart,\n    onSelectionDrag,\n    onSelectionDragStop,\n    onSelectionContextMenu,\n    connectionMode = ConnectionMode.Strict,\n    connectionLineType = ConnectionLineType.Bezier,\n    connectionLineStyle,\n    connectionLineComponent,\n    connectionLineContainerStyle,\n    deleteKeyCode = 'Backspace',\n    selectionKeyCode = 'Shift',\n    multiSelectionKeyCode = 'Meta',\n    zoomActivationKeyCode = 'Meta',\n    snapToGrid = false,\n    snapGrid = initSnapGrid,\n    onlyRenderVisibleElements = false,\n    selectNodesOnDrag = true,\n    nodesDraggable,\n    nodesConnectable,\n    nodeOrigin = initNodeOrigin,\n    elementsSelectable,\n    defaultViewport = initDefaultViewport,\n    minZoom = 0.5,\n    maxZoom = 2,\n    translateExtent = infiniteExtent,\n    preventScrolling = true,\n    nodeExtent,\n    defaultMarkerColor = '#b1b1b7',\n    zoomOnScroll = true,\n    zoomOnPinch = true,\n    panOnScroll = false,\n    panOnScrollSpeed = 0.5,\n    panOnScrollMode = PanOnScrollMode.Free,\n    zoomOnDoubleClick = true,\n    panOnDrag = true,\n    onPaneClick,\n    onPaneMouseEnter,\n    onPaneMouseMove,\n    onPaneMouseLeave,\n    onPaneScroll,\n    onPaneContextMenu,\n    children,\n    onEdgeUpdate,\n    onEdgeContextMenu,\n    onEdgeDoubleClick,\n    onEdgeMouseEnter,\n    onEdgeMouseMove,\n    onEdgeMouseLeave,\n    onEdgeUpdateStart,\n    onEdgeUpdateEnd,\n    edgeUpdaterRadius = 10,\n    onNodesChange,\n    onEdgesChange,\n    noDragClassName = 'nodrag',\n    noWheelClassName = 'nowheel',\n    noPanClassName = 'nopan',\n    fitView = false,\n    fitViewOptions,\n    connectOnClick = true,\n    attributionPosition,\n    proOptions,\n    defaultEdgeOptions,\n    elevateEdgesOnSelect = false,\n    disableKeyboardA11y = false,\n    style,\n    id = '1',\n    ...rest\n  } = _ref62;\n  const nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\n  const edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\n  return jsx(\"div\", {\n    ...rest,\n    style: {\n      ...style,\n      ...wrapperStyle\n    },\n    ref: ref,\n    className: cc(['react-flow', className]),\n    \"data-testid\": \"rf__wrapper\",\n    children: jsxs(Wrapper, {\n      children: [jsx(GraphView$1, {\n        onInit: onInit,\n        onMove: onMove,\n        onMoveStart: onMoveStart,\n        onMoveEnd: onMoveEnd,\n        onNodeClick: onNodeClick,\n        onEdgeClick: onEdgeClick,\n        onNodeMouseEnter: onNodeMouseEnter,\n        onNodeMouseMove: onNodeMouseMove,\n        onNodeMouseLeave: onNodeMouseLeave,\n        onNodeContextMenu: onNodeContextMenu,\n        onNodeDoubleClick: onNodeDoubleClick,\n        nodeTypes: nodeTypesWrapped,\n        edgeTypes: edgeTypesWrapped,\n        connectionLineType: connectionLineType,\n        connectionLineStyle: connectionLineStyle,\n        connectionLineComponent: connectionLineComponent,\n        connectionLineContainerStyle: connectionLineContainerStyle,\n        selectionKeyCode: selectionKeyCode,\n        deleteKeyCode: deleteKeyCode,\n        multiSelectionKeyCode: multiSelectionKeyCode,\n        zoomActivationKeyCode: zoomActivationKeyCode,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        selectNodesOnDrag: selectNodesOnDrag,\n        defaultViewport: defaultViewport,\n        translateExtent: translateExtent,\n        minZoom: minZoom,\n        maxZoom: maxZoom,\n        preventScrolling: preventScrolling,\n        zoomOnScroll: zoomOnScroll,\n        zoomOnPinch: zoomOnPinch,\n        zoomOnDoubleClick: zoomOnDoubleClick,\n        panOnScroll: panOnScroll,\n        panOnScrollSpeed: panOnScrollSpeed,\n        panOnScrollMode: panOnScrollMode,\n        panOnDrag: panOnDrag,\n        onPaneClick: onPaneClick,\n        onPaneMouseEnter: onPaneMouseEnter,\n        onPaneMouseMove: onPaneMouseMove,\n        onPaneMouseLeave: onPaneMouseLeave,\n        onPaneScroll: onPaneScroll,\n        onPaneContextMenu: onPaneContextMenu,\n        onSelectionContextMenu: onSelectionContextMenu,\n        onEdgeUpdate: onEdgeUpdate,\n        onEdgeContextMenu: onEdgeContextMenu,\n        onEdgeDoubleClick: onEdgeDoubleClick,\n        onEdgeMouseEnter: onEdgeMouseEnter,\n        onEdgeMouseMove: onEdgeMouseMove,\n        onEdgeMouseLeave: onEdgeMouseLeave,\n        onEdgeUpdateStart: onEdgeUpdateStart,\n        onEdgeUpdateEnd: onEdgeUpdateEnd,\n        edgeUpdaterRadius: edgeUpdaterRadius,\n        defaultMarkerColor: defaultMarkerColor,\n        noDragClassName: noDragClassName,\n        noWheelClassName: noWheelClassName,\n        noPanClassName: noPanClassName,\n        elevateEdgesOnSelect: elevateEdgesOnSelect,\n        rfId: id,\n        disableKeyboardA11y: disableKeyboardA11y,\n        nodeOrigin: nodeOrigin,\n        nodeExtent: nodeExtent\n      }), jsx(StoreUpdater, {\n        nodes: nodes,\n        edges: edges,\n        defaultNodes: defaultNodes,\n        defaultEdges: defaultEdges,\n        onConnect: onConnect,\n        onConnectStart: onConnectStart,\n        onConnectEnd: onConnectEnd,\n        onClickConnectStart: onClickConnectStart,\n        onClickConnectEnd: onClickConnectEnd,\n        nodesDraggable: nodesDraggable,\n        nodesConnectable: nodesConnectable,\n        elementsSelectable: elementsSelectable,\n        minZoom: minZoom,\n        maxZoom: maxZoom,\n        nodeExtent: nodeExtent,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        snapToGrid: snapToGrid,\n        snapGrid: snapGrid,\n        connectionMode: connectionMode,\n        translateExtent: translateExtent,\n        connectOnClick: connectOnClick,\n        defaultEdgeOptions: defaultEdgeOptions,\n        fitView: fitView,\n        fitViewOptions: fitViewOptions,\n        onNodesDelete: onNodesDelete,\n        onEdgesDelete: onEdgesDelete,\n        onNodeDragStart: onNodeDragStart,\n        onNodeDrag: onNodeDrag,\n        onNodeDragStop: onNodeDragStop,\n        onSelectionDrag: onSelectionDrag,\n        onSelectionDragStart: onSelectionDragStart,\n        onSelectionDragStop: onSelectionDragStop,\n        noPanClassName: noPanClassName,\n        nodeOrigin: nodeOrigin,\n        id: id\n      }), onSelectionChange && jsx(SelectionListener$1, {\n        onSelectionChange: onSelectionChange\n      }), children, jsx(Attribution, {\n        proOptions: proOptions,\n        position: attributionPosition\n      }), !disableKeyboardA11y && jsx(A11yDescriptions, {\n        rfId: id\n      })]\n    })\n  });\n});\nReactFlow.displayName = 'ReactFlow';\nfunction useUpdateNodeInternals() {\n  const store = useStoreApi();\n  return useCallback(id => {\n    const {\n      domNode,\n      updateNodeDimensions\n    } = store.getState();\n    const nodeElement = domNode?.querySelector(`.react-flow__node[data-id=\"${id}\"]`);\n    if (nodeElement) {\n      requestAnimationFrame(() => updateNodeDimensions([{\n        id,\n        nodeElement,\n        forceUpdate: true\n      }]));\n    }\n  }, []);\n}\nconst nodesSelector = state => Array.from(state.nodeInternals.values());\nfunction useNodes() {\n  const nodes = useStore(nodesSelector);\n  return nodes;\n}\nconst edgesSelector = state => state.edges;\nfunction useEdges() {\n  const edges = useStore(edgesSelector);\n  return edges;\n}\nconst viewportSelector = state => ({\n  x: state.transform[0],\n  y: state.transform[1],\n  zoom: state.transform[2]\n});\nfunction useViewport() {\n  const viewport = useStore(viewportSelector, shallow);\n  return viewport;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createUseItemsState(applyChanges) {\n  return initialItems => {\n    const [items, setItems] = useState(initialItems);\n    const onItemsChange = useCallback(changes => setItems(items => applyChanges(changes, items)), []);\n    return [items, setItems, onItemsChange];\n  };\n}\nconst useNodesState = createUseItemsState(applyNodeChanges);\nconst useEdgesState = createUseItemsState(applyEdgeChanges);\nfunction useOnViewportChange(_ref63) {\n  let {\n    onStart,\n    onChange,\n    onEnd\n  } = _ref63;\n  const store = useStoreApi();\n  useEffect(() => {\n    store.setState({\n      onViewportChangeStart: onStart\n    });\n  }, [onStart]);\n  useEffect(() => {\n    store.setState({\n      onViewportChange: onChange\n    });\n  }, [onChange]);\n  useEffect(() => {\n    store.setState({\n      onViewportChangeEnd: onEnd\n    });\n  }, [onEnd]);\n}\nfunction useOnSelectionChange(_ref64) {\n  let {\n    onChange\n  } = _ref64;\n  const store = useStoreApi();\n  useEffect(() => {\n    store.setState({\n      onSelectionChange: onChange\n    });\n  }, [onChange]);\n}\nconst selector = s => {\n  if (s.nodeInternals.size === 0) {\n    return false;\n  }\n  return Array.from(s.nodeInternals.values()).every(n => n[internalsSymbol]?.handleBounds !== undefined);\n};\nfunction useNodesInitialized() {\n  const initialized = useStore(selector);\n  return initialized;\n}\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, internalsSymbol, isEdge, isNode, rectToBox, updateEdge, useEdges, useEdgesState, useKeyPress, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };","map":{"version":3,"names":["jsx","jsxs","Fragment","memo","useRef","useState","useEffect","useMemo","createContext","useContext","forwardRef","useCallback","cc","shallow","useStore","useStore$1","createStore","zoom","zoomIdentity","select","pointer","drag","Panel","position","children","className","rest","positionClasses","split","Attribution","proOptions","hideAttribution","href","target","rel","ConnectionMode","PanOnScrollMode","getDimensions","node","width","offsetWidth","height","offsetHeight","clamp","val","min","max","Math","clampPosition","x","y","extent","getHostForElement","element","getRootNode","window","document","getBoundsOfBoxes","box1","box2","x2","y2","rectToBox","boxToRect","getBoundsOfRects","rect1","rect2","isNumeric","n","isNaN","isFinite","internalsSymbol","Symbol","for","elementSelectionKeys","devWarn","message","process","env","NODE_ENV","console","warn","ConnectionLineType","MarkerType","Position","EdgeText","label","labelStyle","labelShowBg","labelBgStyle","labelBgPadding","labelBgBorderRadius","edgeRef","edgeTextBbox","setEdgeTextBbox","edgeTextClasses","current","textBbox","getBBox","transform","visibility","style","rx","ry","dy","ref","EdgeText$1","BaseEdge","path","labelX","labelY","markerEnd","markerStart","interactionWidth","d","fill","strokeOpacity","strokeWidth","displayName","getMarkerEnd","markerType","markerEndId","getMouseHandler$1","id","getState","handler","undefined","event","edge","edges","find","e","getEdgeCenter","sourceX","sourceY","targetX","targetY","xOffset","abs","centerX","yOffset","centerY","getBezierEdgeCenter","sourceControlX","sourceControlY","targetControlX","targetControlY","offsetX","offsetY","getControl","pos","x1","y1","Left","Right","getSimpleBezierPath","sourcePosition","Bottom","targetPosition","Top","SimpleBezierEdge","handleDirections","getDirection","source","distance","a","b","sqrt","pow","getPoints","center","offset","sourceDir","targetDir","sourceGapped","targetGapped","dir","dirAccessor","currDir","points","defaultCenterX","defaultCenterY","defaultOffsetX","defaultOffsetY","verticalSplit","horizontalSplit","sourceTarget","targetSource","dirAccessorOpposite","isSameDir","sourceGtTargetOppo","sourceLtTargetOppo","flipSourceTarget","pathPoints","getBend","c","size","bendSize","xDir","yDir","getSmoothStepPath","borderRadius","reduce","res","p","i","segment","length","SmoothStepEdge","pathOptions","StepEdge","props","getStraightPath","StraightEdge","calculateControlOffset","curvature","getControlWithCurvature","getBezierPath","BezierEdge","StoreContext","Provider$1","Provider","errorMessage","selector","equalityFn","store","Error","useStoreApi","setState","subscribe","destroy","NodeIdContext","Consumer","checkElementBelowIsValid","connectionMode","isTarget","nodeId","handleId","isValidConnection","doc","elementBelow","elementFromPoint","clientX","clientY","elementBelowIsTarget","classList","contains","elementBelowIsSource","result","isValid","connection","sourceHandle","targetHandle","isHoveringHandle","elementBelowNodeId","getAttribute","elementBelowHandleId","Strict","resetRecentHandle","hoveredHandle","remove","handleMouseDown","onConnect","elementEdgeUpdaterType","onEdgeUpdateEnd","reactFlowNode","closest","onConnectStart","handleType","containerBounds","getBoundingClientRect","recentHoveredHandle","connectionPosition","left","top","connectionNodeId","connectionHandleId","connectionHandleType","onMouseMove","add","toggle","onMouseUp","onConnectEnd","removeEventListener","addEventListener","isEdge","isNode","getOutgoers","nodes","outgoerIds","filter","map","includes","getIncomers","incomersIds","getEdgeId","getMarkerId","marker","rfId","idPrefix","Object","keys","sort","key","join","connectionExists","some","el","addEdge","edgeParams","concat","updateEdge","oldEdge","newConnection","foundEdge","pointToRendererPoint","snapToGrid","tx","ty","tScale","snapX","snapY","round","getRectOfNodes","box","currBox","positionAbsolute","Infinity","getNodesInside","nodeInternals","rect","partially","excludeNonSelectableNodes","rBox","visibleNodes","forEach","selectable","nBox","xOverlap","yOverlap","overlappingArea","ceil","notInitialized","partiallyVisible","area","isVisible","push","getConnectedEdges","nodeIds","getTransformForBounds","bounds","minZoom","maxZoom","padding","xZoom","yZoom","clampedZoom","boundsCenterX","boundsCenterY","getD3Transition","selection","duration","transition","alwaysValid","selector$d","s","connectionStartHandle","connectOnClick","noPanClassName","Handle","type","isConnectable","onMouseDown","onConnectExtended","params","defaultEdgeOptions","onConnectAction","hasDefaultEdges","onMouseDownHandler","button","onClick","onClickConnectStart","onClickConnectEnd","connectable","connecting","Handle$1","DefaultNode","data","DefaultNode$1","InputNode","InputNode$1","OutputNode","OutputNode$1","GroupNode","selector$c","selectedNodes","Array","from","values","selected","selectedEdges","areEqual","objA","objB","selectedNodeIdsA","selectedNodeIdsB","selectedEdgeIdsA","selectedEdgeIdsB","SelectionListener","onSelectionChange","SelectionListener$1","selector$b","setNodes","setEdges","setDefaultNodesAndEdges","setMinZoom","setMaxZoom","setTranslateExtent","setNodeExtent","reset","useStoreUpdater","value","setStoreState","useDirectStoreUpdater","StoreUpdater","defaultNodes","defaultEdges","nodesDraggable","nodesConnectable","nodeExtent","onNodesChange","onEdgesChange","elementsSelectable","snapGrid","translateExtent","fitView","fitViewOptions","onNodesDelete","onEdgesDelete","onNodeDrag","onNodeDragStart","onNodeDragStop","onSelectionDrag","onSelectionDragStart","onSelectionDragStop","nodeOrigin","edgesWithDefaults","display","ariaLiveStyle","margin","border","overflow","clip","clipPath","ARIA_NODE_DESC_KEY","ARIA_EDGE_DESC_KEY","ARIA_LIVE_MESSAGE","selector$a","ariaLiveMessage","A11yDescriptions","shiftX","shift","shiftY","EdgeUpdaterClassName","EdgeAnchor","radius","onMouseEnter","onMouseOut","cx","cy","r","stroke","wrapEdge","EdgeComponent","EdgeWrapper","onEdgeDoubleClick","animated","hidden","sourceHandleId","targetHandleId","onContextMenu","onMouseLeave","edgeUpdaterRadius","onEdgeUpdate","onEdgeUpdateStart","ariaLabel","disableKeyboardA11y","updateHover","setUpdateHover","updating","setUpdating","markerStartUrl","markerEndUrl","onEdgeClick","addSelectedEdges","nodesSelectionActive","onEdgeDoubleClickHandler","onEdgeContextMenu","onEdgeMouseEnter","onEdgeMouseMove","onEdgeMouseLeave","handleEdgeUpdater","isSourceHandle","_onEdgeUpdateEnd","evt","onConnectEdge","onEdgeUpdaterSourceMouseDown","onEdgeUpdaterTargetMouseDown","onEdgeUpdaterMouseEnter","onEdgeUpdaterMouseOut","inactive","handleEdgeUpdate","onKeyDown","unselectNodesAndEdges","unselect","blur","onDoubleClick","tabIndex","role","createEdgeTypes","edgeTypes","standardTypes","default","straight","bezier","step","smoothstep","simplebezier","wrappedTypes","specialTypes","k","getHandlePosition","nodeRect","handle","getHandle","getEdgePositions","sourceNodeRect","targetNodeRect","sourceHandlePos","targetHandlePos","isEdgeVisible","sourcePos","targetPos","sourceWidth","sourceHeight","targetWidth","targetHeight","edgeBox","viewBox","getNodeData","handleBounds","isInvalid","useKeyPress","keyCode","options","keyPressed","setKeyPressed","pressedKeys","Set","keyCodes","keysToWatch","keyCodeArr","isArray","kc","keysFlat","item","downHandler","isInputDOMNode","keyOrCode","useKeyOrCode","code","isMatchingKey","preventDefault","upHandler","clear","delete","resetHandler","isUp","every","has","eventCode","composedPath","nodeName","hasAttribute","useGlobalKeyHandler","deleteKeyCode","multiSelectionKeyCode","deleteKeyPressed","multiSelectionKeyPressed","hasDefaultNodes","nodesToRemove","parentSelected","parentNode","deletable","deletableEdges","connectedEdges","edgesToRemove","edgeIdsToRemove","Map","nodeChanges","multiSelectionActive","useResizeHandler","rendererNode","resizeObserver","updateDimensions","ResizeObserver","observe","unobserve","containerStyle","viewChanged","prevViewport","eventViewport","eventToFlowTransform","isWrappedWithClass","selector$9","d3Zoom","d3Selection","d3ZoomHandler","ZoomPane","onMove","onMoveStart","onMoveEnd","zoomOnScroll","zoomOnPinch","panOnScroll","panOnScrollSpeed","panOnScrollMode","Free","zoomOnDoubleClick","selectionKeyPressed","panOnDrag","defaultViewport","zoomActivationKeyCode","preventScrolling","noWheelClassName","timerId","isZoomingOrPanning","zoomPane","prevTransform","zoomActivationKeyPressed","d3ZoomInstance","scaleExtent","call","clampedX","clampedY","updatedTransform","translate","scale","on","domNode","stopImmediatePropagation","currentZoom","property","ctrlKey","point","pinchDelta","deltaY","deltaMode","scaleTo","deltaNormalize","deltaX","Vertical","Horizontal","translateBy","onViewportChange","flowTransform","sourceEvent","onViewportChangeStart","paneDragging","onViewportChangeEnd","clearTimeout","setTimeout","zoomScroll","pinchZoom","handleParentExpand","updateItem","parent","extendWidth","extendHeight","xDiff","yDiff","applyChanges","changes","elements","initElements","currentChange","dragging","expandParent","dimensions","applyNodeChanges","applyEdgeChanges","createSelectionChange","getSelectionChanges","items","selectedIds","willBeSelected","getMousePosition","selector$8","userSelectionActive","initialRect","startX","startY","draw","UserSelection","prevSelectedNodesCount","prevSelectedEdgesCount","userSelectionRect","setUserSelectionRect","renderUserSelectionPane","resetUserSelection","mousePos","nextUserSelectRect","selectedEdgeIds","selectedNodeIds","isParentSelected","get","hasSelector","nodeRef","matches","parentElement","getDragItems","delta","calcNextPosition","nextPosition","currentExtent","parentX","parentY","parentPosition","getEventHandlerParams","dragItems","extentedDragItems","getHandleBounds","nodeElement","handles","querySelectorAll","handlesArray","nodeBounds","nodeOffset","getMouseHandler","handleNodeClick","addSelectedNodes","wrapSelectionDragFunc","selectionFunc","_","useDrag","disabled","noDragClassName","handleSelector","isSelectable","selectNodesOnDrag","setDragging","lastPos","getPointerPosition","touches","pointerPos","xSnapped","ySnapped","dragHandler","onStart","currentNode","updateNodePositions","updatedPos","onDrag","onStop","isDraggable","useUpdateNodePositions","updatePositions","positionDiff","nodeUpdates","arrowKeyDiffs","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","wrapNode","NodeComponent","NodeWrapper","xPos","yPos","xPosOrigin","yPosOrigin","dragHandle","zIndex","isParent","initialized","prevSourcePosition","prevTargetPosition","prevType","hasPointerEvents","onMouseEnterHandler","onMouseMoveHandler","onMouseLeaveHandler","onContextMenuHandler","onDoubleClickHandler","onSelectNodeHandler","prototype","hasOwnProperty","replace","toLowerCase","currNode","typeChanged","sourcePosChanged","targetPosChanged","updateNodeDimensions","forceUpdate","pointerEvents","selector$7","transformString","bboxSelector","NodesSelection","onSelectionContextMenu","focus","NodesSelection$1","selector$6","Pane","onWheel","selector$5","FlowRenderer","onPaneClick","onPaneMouseEnter","onPaneMouseMove","onPaneMouseLeave","onPaneContextMenu","onPaneScroll","selectionKeyCode","resetSelectedElements","FlowRenderer$1","useVisibleNodes","onlyRenderVisible","createNodeTypes","nodeTypes","input","output","group","getPositionWithOrigin","origin","selector$4","NodeRenderer","onlyRenderVisibleElements","resizeObserverRef","observer","entries","updates","entry","disconnect","nodeType","draggable","clampedPosition","posX","posY","posOrigin","onNodeClick","onNodeMouseEnter","onNodeMouseMove","onNodeMouseLeave","onNodeContextMenu","onNodeDoubleClick","z","NodeRenderer$1","defaultEdgeTree","level","isMaxLevel","groupEdgesByZLevel","elevateEdgesOnSelect","maxLevel","levelLookup","tree","hasZIndex","edgeTree","useVisibleEdges","sourceNode","targetNode","oppositePosition","ConnectionLine","connectionLineStyle","connectionLineType","Bezier","CustomConnectionLineComponent","fromNode","toX","toY","fromHandleBounds","handleBound","fromHandle","fromHandleX","fromHandleY","fromX","fromY","fromPosition","toPosition","dAttr","pathParams","Step","SmoothStep","SimpleBezier","ArrowSymbol","color","strokeLinecap","strokeLinejoin","ArrowClosedSymbol","MarkerSymbols","Arrow","ArrowClosed","useMarkerSymbol","symbol","symbolExists","Marker","markerUnits","orient","markerWidth","markerHeight","refX","refY","markerSelector","defaultColor","ids","markers","markerId","localeCompare","MarkerDefinitions","m","MarkerDefinitions$1","selector$3","EdgeRenderer","defaultMarkerColor","connectionLineComponent","connectionLineContainerStyle","renderConnectionLine","sourceHandleBounds","sourceIsValid","targetHandleBounds","targetIsValid","edgeType","targetNodeHandles","EdgeRenderer$1","selector$2","Viewport","calculateXYZPosition","parentNodes","createNodeInternals","nextNodeInternals","currInternals","internals","defineProperty","enumerable","set","fitViewOnInitDone","fitViewOnInit","initial","includeHiddenNodes","nodesInitialized","nextTransform","handleControlledNodeSelectionChange","change","handleControlledEdgeSelectionChange","edgeChanges","updateNodesAndEdgesSelections","changedNodes","changedEdges","noop","initialViewportHelper","zoomIn","zoomOut","zoomTo","getZoom","setViewport","getViewport","setCenter","fitBounds","project","viewportInitialized","selector$1","useViewportHelper","viewportHelperFunctions","scaleBy","zoomLevel","nextZoom","useReactFlow","viewportHelper","getNodes","getNode","getEdges","getEdge","payload","nextNodes","nextEdges","addNodes","currentNodes","addEdges","toObject","viewport","useOnInitHandler","onInit","rfInstance","isInitialized","GraphView","GraphView$1","useNodeOrEdgeTypes","nodeOrEdgeTypes","createTypes","typesKeysRef","typesParsed","typeKeys","infiniteExtent","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","initialState","fitViewOnInitOptions","createRFStore","viewportNode","querySelector","getComputedStyle","m22","DOMMatrixReadOnly","update","doUpdate","nextFitViewOnInitDone","nodeDragItems","positionChanged","edgeId","storeEdges","nodesToUnselect","edgesToUnselect","ReactFlowProvider","storeRef","Wrapper","isWrapped","defaultNodeTypes","defaultEdgeTypes","initNodeOrigin","initSnapGrid","initDefaultViewport","wrapperStyle","ReactFlow","attributionPosition","nodeTypesWrapped","edgeTypesWrapped","useUpdateNodeInternals","requestAnimationFrame","nodesSelector","state","useNodes","edgesSelector","useEdges","viewportSelector","useViewport","createUseItemsState","initialItems","setItems","onItemsChange","useNodesState","useEdgesState","useOnViewportChange","onChange","onEnd","useOnSelectionChange","useNodesInitialized"],"sources":["/Users/kunjeshkumar/Downloads/workflow-builder-example/node_modules/@reactflow/core/dist/esm/index.js"],"sourcesContent":["import { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { memo, useRef, useState, useEffect, useMemo, createContext, useContext, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport shallow from 'zustand/shallow';\nimport { useStore as useStore$1, createStore } from 'zustand';\nimport { zoom, zoomIdentity } from 'd3-zoom';\nimport { select, pointer } from 'd3-selection';\nimport { drag } from 'd3-drag';\n\nfunction Panel({ position, children, className, ...rest }) {\r\n    const positionClasses = `${position}`.split('-');\r\n    return (jsx(\"div\", { className: cc(['react-flow__panel', className, ...positionClasses]), ...rest, children: children }));\r\n}\n\nfunction Attribution({ proOptions, position = 'bottom-right' }) {\r\n    if (proOptions?.hideAttribution) {\r\n        return null;\r\n    }\r\n    return (jsx(Panel, { position: position, className: \"react-flow__attribution\", \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev\", children: jsx(\"a\", { href: \"https://reactflow.dev\", target: \"_blank\", rel: \"noopener noreferrer\", \"aria-label\": \"React Flow attribution\", children: \"React Flow\" }) }));\r\n}\n\nvar ConnectionMode;\r\n(function (ConnectionMode) {\r\n    ConnectionMode[\"Strict\"] = \"strict\";\r\n    ConnectionMode[\"Loose\"] = \"loose\";\r\n})(ConnectionMode || (ConnectionMode = {}));\r\nvar PanOnScrollMode;\r\n(function (PanOnScrollMode) {\r\n    PanOnScrollMode[\"Free\"] = \"free\";\r\n    PanOnScrollMode[\"Vertical\"] = \"vertical\";\r\n    PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\r\n})(PanOnScrollMode || (PanOnScrollMode = {}));\n\nconst getDimensions = (node) => ({\r\n    width: node.offsetWidth,\r\n    height: node.offsetHeight,\r\n});\r\nconst clamp = (val, min = 0, max = 1) => Math.min(Math.max(val, min), max);\r\nconst clampPosition = (position = { x: 0, y: 0 }, extent) => ({\r\n    x: clamp(position.x, extent[0][0], extent[1][0]),\r\n    y: clamp(position.y, extent[0][1], extent[1][1]),\r\n});\r\nconst getHostForElement = (element) => element.getRootNode?.() || window?.document;\r\nconst getBoundsOfBoxes = (box1, box2) => ({\r\n    x: Math.min(box1.x, box2.x),\r\n    y: Math.min(box1.y, box2.y),\r\n    x2: Math.max(box1.x2, box2.x2),\r\n    y2: Math.max(box1.y2, box2.y2),\r\n});\r\nconst rectToBox = ({ x, y, width, height }) => ({\r\n    x,\r\n    y,\r\n    x2: x + width,\r\n    y2: y + height,\r\n});\r\nconst boxToRect = ({ x, y, x2, y2 }) => ({\r\n    x,\r\n    y,\r\n    width: x2 - x,\r\n    height: y2 - y,\r\n});\r\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\r\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\r\nconst isNumeric = (n) => !isNaN(n) && isFinite(n);\r\nconst internalsSymbol = Symbol.for('internals');\r\n// used for a11y key board controls for nodes and edges\r\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\r\nconst devWarn = (message) => {\r\n    if (process.env.NODE_ENV === 'development') {\r\n        console.warn(`[React Flow]: ${message}`);\r\n    }\r\n};\n\nvar ConnectionLineType;\r\n(function (ConnectionLineType) {\r\n    ConnectionLineType[\"Bezier\"] = \"default\";\r\n    ConnectionLineType[\"Straight\"] = \"straight\";\r\n    ConnectionLineType[\"Step\"] = \"step\";\r\n    ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\r\n    ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\r\n})(ConnectionLineType || (ConnectionLineType = {}));\r\nvar MarkerType;\r\n(function (MarkerType) {\r\n    MarkerType[\"Arrow\"] = \"arrow\";\r\n    MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\r\n})(MarkerType || (MarkerType = {}));\n\nvar Position;\r\n(function (Position) {\r\n    Position[\"Left\"] = \"left\";\r\n    Position[\"Top\"] = \"top\";\r\n    Position[\"Right\"] = \"right\";\r\n    Position[\"Bottom\"] = \"bottom\";\r\n})(Position || (Position = {}));\n\nconst EdgeText = ({ x, y, label, labelStyle = {}, labelShowBg = true, labelBgStyle = {}, labelBgPadding = [2, 4], labelBgBorderRadius = 2, children, className, ...rest }) => {\r\n    const edgeRef = useRef(null);\r\n    const [edgeTextBbox, setEdgeTextBbox] = useState({ x: 0, y: 0, width: 0, height: 0 });\r\n    const edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\r\n    useEffect(() => {\r\n        if (edgeRef.current) {\r\n            const textBbox = edgeRef.current.getBBox();\r\n            setEdgeTextBbox({\r\n                x: textBbox.x,\r\n                y: textBbox.y,\r\n                width: textBbox.width,\r\n                height: textBbox.height,\r\n            });\r\n        }\r\n    }, [label]);\r\n    if (typeof label === 'undefined' || !label) {\r\n        return null;\r\n    }\r\n    return (jsxs(\"g\", { transform: `translate(${x - edgeTextBbox.width / 2} ${y - edgeTextBbox.height / 2})`, className: edgeTextClasses, visibility: edgeTextBbox.width ? 'visible' : 'hidden', ...rest, children: [labelShowBg && (jsx(\"rect\", { width: edgeTextBbox.width + 2 * labelBgPadding[0], x: -labelBgPadding[0], y: -labelBgPadding[1], height: edgeTextBbox.height + 2 * labelBgPadding[1], className: \"react-flow__edge-textbg\", style: labelBgStyle, rx: labelBgBorderRadius, ry: labelBgBorderRadius })), jsx(\"text\", { className: \"react-flow__edge-text\", y: edgeTextBbox.height / 2, dy: \"0.3em\", ref: edgeRef, style: labelStyle, children: label }), children] }));\r\n};\r\nvar EdgeText$1 = memo(EdgeText);\n\nconst BaseEdge = ({ path, labelX, labelY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth = 20, }) => {\r\n    return (jsxs(Fragment, { children: [jsx(\"path\", { style: style, d: path, fill: \"none\", className: \"react-flow__edge-path\", markerEnd: markerEnd, markerStart: markerStart }), interactionWidth && jsx(\"path\", { d: path, fill: \"none\", strokeOpacity: 0, strokeWidth: interactionWidth }), label ? (jsx(EdgeText$1, { x: labelX, y: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius })) : null] }));\r\n};\r\nBaseEdge.displayName = 'BaseEdge';\n\nconst getMarkerEnd = (markerType, markerEndId) => {\r\n    if (typeof markerEndId !== 'undefined' && markerEndId) {\r\n        return `url(#${markerEndId})`;\r\n    }\r\n    return typeof markerType !== 'undefined' ? `url(#react-flow__${markerType})` : 'none';\r\n};\r\nfunction getMouseHandler$1(id, getState, handler) {\r\n    return handler === undefined\r\n        ? handler\r\n        : (event) => {\r\n            const edge = getState().edges.find((e) => e.id === id);\r\n            if (edge) {\r\n                handler(event, { ...edge });\r\n            }\r\n        };\r\n}\r\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\r\nfunction getEdgeCenter({ sourceX, sourceY, targetX, targetY, }) {\r\n    const xOffset = Math.abs(targetX - sourceX) / 2;\r\n    const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\r\n    const yOffset = Math.abs(targetY - sourceY) / 2;\r\n    const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\r\n    return [centerX, centerY, xOffset, yOffset];\r\n}\r\nfunction getBezierEdgeCenter({ sourceX, sourceY, targetX, targetY, sourceControlX, sourceControlY, targetControlX, targetControlY, }) {\r\n    // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\r\n    // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\r\n    const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\r\n    const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\r\n    const offsetX = Math.abs(centerX - sourceX);\r\n    const offsetY = Math.abs(centerY - sourceY);\r\n    return [centerX, centerY, offsetX, offsetY];\r\n}\n\nfunction getControl({ pos, x1, y1, x2, y2 }) {\r\n    if (pos === Position.Left || pos === Position.Right) {\r\n        return [0.5 * (x1 + x2), y1];\r\n    }\r\n    return [x1, 0.5 * (y1 + y2)];\r\n}\r\nfunction getSimpleBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, }) {\r\n    const [sourceControlX, sourceControlY] = getControl({\r\n        pos: sourcePosition,\r\n        x1: sourceX,\r\n        y1: sourceY,\r\n        x2: targetX,\r\n        y2: targetY,\r\n    });\r\n    const [targetControlX, targetControlY] = getControl({\r\n        pos: targetPosition,\r\n        x1: targetX,\r\n        y1: targetY,\r\n        x2: sourceX,\r\n        y2: sourceY,\r\n    });\r\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\r\n        sourceX,\r\n        sourceY,\r\n        targetX,\r\n        targetY,\r\n        sourceControlX,\r\n        sourceControlY,\r\n        targetControlX,\r\n        targetControlY,\r\n    });\r\n    return [\r\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\r\n        labelX,\r\n        labelY,\r\n        offsetX,\r\n        offsetY,\r\n    ];\r\n}\r\nconst SimpleBezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\r\n    const [path, labelX, labelY] = getSimpleBezierPath({\r\n        sourceX,\r\n        sourceY,\r\n        sourcePosition,\r\n        targetX,\r\n        targetY,\r\n        targetPosition,\r\n    });\r\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\r\n});\r\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\n\nconst handleDirections = {\r\n    [Position.Left]: { x: -1, y: 0 },\r\n    [Position.Right]: { x: 1, y: 0 },\r\n    [Position.Top]: { x: 0, y: -1 },\r\n    [Position.Bottom]: { x: 0, y: 1 },\r\n};\r\nconst getDirection = ({ source, sourcePosition = Position.Bottom, target, }) => {\r\n    if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\r\n        return source.x < target.x ? { x: 1, y: 0 } : { x: -1, y: 0 };\r\n    }\r\n    return source.y < target.y ? { x: 0, y: 1 } : { x: 0, y: -1 };\r\n};\r\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\r\n// ith this function we try to mimic a orthogonal edge routing behaviour\r\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\r\nfunction getPoints({ source, sourcePosition = Position.Bottom, target, targetPosition = Position.Top, center, offset, }) {\r\n    const sourceDir = handleDirections[sourcePosition];\r\n    const targetDir = handleDirections[targetPosition];\r\n    const sourceGapped = { x: source.x + sourceDir.x * offset, y: source.y + sourceDir.y * offset };\r\n    const targetGapped = { x: target.x + targetDir.x * offset, y: target.y + targetDir.y * offset };\r\n    const dir = getDirection({\r\n        source: sourceGapped,\r\n        sourcePosition,\r\n        target: targetGapped,\r\n    });\r\n    const dirAccessor = dir.x !== 0 ? 'x' : 'y';\r\n    const currDir = dir[dirAccessor];\r\n    let points = [];\r\n    let centerX, centerY;\r\n    const [defaultCenterX, defaultCenterY, defaultOffsetX, defaultOffsetY] = getEdgeCenter({\r\n        sourceX: source.x,\r\n        sourceY: source.y,\r\n        targetX: target.x,\r\n        targetY: target.y,\r\n    });\r\n    // opposite handle positions, default case\r\n    if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\r\n        centerX = center.x || defaultCenterX;\r\n        centerY = center.y || defaultCenterY;\r\n        //    --->\r\n        //    |\r\n        // >---\r\n        const verticalSplit = [\r\n            { x: centerX, y: sourceGapped.y },\r\n            { x: centerX, y: targetGapped.y },\r\n        ];\r\n        //    |\r\n        //  ---\r\n        //  |\r\n        const horizontalSplit = [\r\n            { x: sourceGapped.x, y: centerY },\r\n            { x: targetGapped.x, y: centerY },\r\n        ];\r\n        if (sourceDir[dirAccessor] === currDir) {\r\n            points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\r\n        }\r\n        else {\r\n            points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\r\n        }\r\n    }\r\n    else {\r\n        // sourceTarget means we take x from source and y from target, targetSource is the opposite\r\n        const sourceTarget = [{ x: sourceGapped.x, y: targetGapped.y }];\r\n        const targetSource = [{ x: targetGapped.x, y: sourceGapped.y }];\r\n        // this handles edges with same handle positions\r\n        if (dirAccessor === 'x') {\r\n            points = sourceDir.x === currDir ? targetSource : sourceTarget;\r\n        }\r\n        else {\r\n            points = sourceDir.y === currDir ? sourceTarget : targetSource;\r\n        }\r\n        // these are conditions for handling mixed handle positions like Right -> Bottom for example\r\n        if (sourcePosition !== targetPosition) {\r\n            const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\r\n            const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\r\n            const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\r\n            const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\r\n            const flipSourceTarget = (sourceDir[dirAccessor] === 1 && ((!isSameDir && sourceGtTargetOppo) || (isSameDir && sourceLtTargetOppo))) ||\r\n                (sourceDir[dirAccessor] !== 1 && ((!isSameDir && sourceLtTargetOppo) || (isSameDir && sourceGtTargetOppo)));\r\n            if (flipSourceTarget) {\r\n                points = dirAccessor === 'x' ? sourceTarget : targetSource;\r\n            }\r\n        }\r\n        centerX = points[0].x;\r\n        centerY = points[0].y;\r\n    }\r\n    const pathPoints = [source, sourceGapped, ...points, targetGapped, target];\r\n    return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\r\n}\r\nfunction getBend(a, b, c, size) {\r\n    const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\r\n    const { x, y } = b;\r\n    // no bend\r\n    if ((a.x === x && x === c.x) || (a.y === y && y === c.y)) {\r\n        return `L${x} ${y}`;\r\n    }\r\n    // first segment is horizontal\r\n    if (a.y === y) {\r\n        const xDir = a.x < c.x ? -1 : 1;\r\n        const yDir = a.y < c.y ? 1 : -1;\r\n        return `L ${x + bendSize * xDir},${y}Q ${x},${y} ${x},${y + bendSize * yDir}`;\r\n    }\r\n    const xDir = a.x < c.x ? 1 : -1;\r\n    const yDir = a.y < c.y ? -1 : 1;\r\n    return `L ${x},${y + bendSize * yDir}Q ${x},${y} ${x + bendSize * xDir},${y}`;\r\n}\r\nfunction getSmoothStepPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, borderRadius = 5, centerX, centerY, offset = 20, }) {\r\n    const [points, labelX, labelY, offsetX, offsetY] = getPoints({\r\n        source: { x: sourceX, y: sourceY },\r\n        sourcePosition,\r\n        target: { x: targetX, y: targetY },\r\n        targetPosition,\r\n        center: { x: centerX, y: centerY },\r\n        offset,\r\n    });\r\n    const path = points.reduce((res, p, i) => {\r\n        let segment = '';\r\n        if (i > 0 && i < points.length - 1) {\r\n            segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\r\n        }\r\n        else {\r\n            segment = `${i === 0 ? 'M' : 'L'}${p.x} ${p.y}`;\r\n        }\r\n        res += segment;\r\n        return res;\r\n    }, '');\r\n    return [path, labelX, labelY, offsetX, offsetY];\r\n}\r\nconst SmoothStepEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, sourcePosition = Position.Bottom, targetPosition = Position.Top, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\r\n    const [path, labelX, labelY] = getSmoothStepPath({\r\n        sourceX,\r\n        sourceY,\r\n        sourcePosition,\r\n        targetX,\r\n        targetY,\r\n        targetPosition,\r\n        borderRadius: pathOptions?.borderRadius,\r\n        offset: pathOptions?.offset,\r\n    });\r\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\r\n});\r\nSmoothStepEdge.displayName = 'SmoothStepEdge';\n\nconst StepEdge = memo((props) => (jsx(SmoothStepEdge, { ...props, pathOptions: useMemo(() => ({ borderRadius: 0, offset: props.pathOptions?.offset }), [props.pathOptions?.offset]) })));\r\nStepEdge.displayName = 'StepEdge';\n\nfunction getStraightPath({ sourceX, sourceY, targetX, targetY, }) {\r\n    const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\r\n        sourceX,\r\n        sourceY,\r\n        targetX,\r\n        targetY,\r\n    });\r\n    return [`M ${sourceX},${sourceY}L ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\r\n}\r\nconst StraightEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\r\n    const [path, labelX, labelY] = getStraightPath({ sourceX, sourceY, targetX, targetY });\r\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\r\n});\r\nStraightEdge.displayName = 'StraightEdge';\n\nfunction calculateControlOffset(distance, curvature) {\r\n    if (distance >= 0) {\r\n        return 0.5 * distance;\r\n    }\r\n    return curvature * 25 * Math.sqrt(-distance);\r\n}\r\nfunction getControlWithCurvature({ pos, x1, y1, x2, y2, c }) {\r\n    switch (pos) {\r\n        case Position.Left:\r\n            return [x1 - calculateControlOffset(x1 - x2, c), y1];\r\n        case Position.Right:\r\n            return [x1 + calculateControlOffset(x2 - x1, c), y1];\r\n        case Position.Top:\r\n            return [x1, y1 - calculateControlOffset(y1 - y2, c)];\r\n        case Position.Bottom:\r\n            return [x1, y1 + calculateControlOffset(y2 - y1, c)];\r\n    }\r\n}\r\nfunction getBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, curvature = 0.25, }) {\r\n    const [sourceControlX, sourceControlY] = getControlWithCurvature({\r\n        pos: sourcePosition,\r\n        x1: sourceX,\r\n        y1: sourceY,\r\n        x2: targetX,\r\n        y2: targetY,\r\n        c: curvature,\r\n    });\r\n    const [targetControlX, targetControlY] = getControlWithCurvature({\r\n        pos: targetPosition,\r\n        x1: targetX,\r\n        y1: targetY,\r\n        x2: sourceX,\r\n        y2: sourceY,\r\n        c: curvature,\r\n    });\r\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\r\n        sourceX,\r\n        sourceY,\r\n        targetX,\r\n        targetY,\r\n        sourceControlX,\r\n        sourceControlY,\r\n        targetControlX,\r\n        targetControlY,\r\n    });\r\n    return [\r\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\r\n        labelX,\r\n        labelY,\r\n        offsetX,\r\n        offsetY,\r\n    ];\r\n}\r\nconst BezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\r\n    const [path, labelX, labelY] = getBezierPath({\r\n        sourceX,\r\n        sourceY,\r\n        sourcePosition,\r\n        targetX,\r\n        targetY,\r\n        targetPosition,\r\n        curvature: pathOptions?.curvature,\r\n    });\r\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\r\n});\r\nBezierEdge.displayName = 'BezierEdge';\n\nconst StoreContext = createContext(null);\r\nconst Provider$1 = StoreContext.Provider;\n\nconst errorMessage = '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#100';\r\nfunction useStore(selector, equalityFn) {\r\n    const store = useContext(StoreContext);\r\n    if (store === null) {\r\n        throw new Error(errorMessage);\r\n    }\r\n    return useStore$1(store, selector, equalityFn);\r\n}\r\nconst useStoreApi = () => {\r\n    const store = useContext(StoreContext);\r\n    if (store === null) {\r\n        throw new Error(errorMessage);\r\n    }\r\n    return useMemo(() => ({\r\n        getState: store.getState,\r\n        setState: store.setState,\r\n        subscribe: store.subscribe,\r\n        destroy: store.destroy,\r\n    }), [store]);\r\n};\n\nconst NodeIdContext = createContext(null);\r\nconst Provider = NodeIdContext.Provider;\r\nNodeIdContext.Consumer;\n\n// checks if element below mouse is a handle and returns connection in form of an object { source: 123, target: 312 }\r\nfunction checkElementBelowIsValid(event, connectionMode, isTarget, nodeId, handleId, isValidConnection, doc) {\r\n    const elementBelow = doc.elementFromPoint(event.clientX, event.clientY);\r\n    const elementBelowIsTarget = elementBelow?.classList.contains('target') || false;\r\n    const elementBelowIsSource = elementBelow?.classList.contains('source') || false;\r\n    const result = {\r\n        elementBelow,\r\n        isValid: false,\r\n        connection: { source: null, target: null, sourceHandle: null, targetHandle: null },\r\n        isHoveringHandle: false,\r\n    };\r\n    if (elementBelow && (elementBelowIsTarget || elementBelowIsSource)) {\r\n        result.isHoveringHandle = true;\r\n        const elementBelowNodeId = elementBelow.getAttribute('data-nodeid');\r\n        const elementBelowHandleId = elementBelow.getAttribute('data-handleid');\r\n        const connection = isTarget\r\n            ? {\r\n                source: elementBelowNodeId,\r\n                sourceHandle: elementBelowHandleId,\r\n                target: nodeId,\r\n                targetHandle: handleId,\r\n            }\r\n            : {\r\n                source: nodeId,\r\n                sourceHandle: handleId,\r\n                target: elementBelowNodeId,\r\n                targetHandle: elementBelowHandleId,\r\n            };\r\n        result.connection = connection;\r\n        // in strict mode we don't allow target to target or source to source connections\r\n        const isValid = connectionMode === ConnectionMode.Strict\r\n            ? (isTarget && elementBelowIsSource) || (!isTarget && elementBelowIsTarget)\r\n            : true;\r\n        if (isValid) {\r\n            result.isValid = isValidConnection(connection);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction resetRecentHandle(hoveredHandle) {\r\n    hoveredHandle?.classList.remove('react-flow__handle-valid');\r\n    hoveredHandle?.classList.remove('react-flow__handle-connecting');\r\n}\r\nfunction handleMouseDown({ event, handleId, nodeId, onConnect, isTarget, getState, setState, isValidConnection, elementEdgeUpdaterType, onEdgeUpdateEnd, }) {\r\n    const reactFlowNode = event.target.closest('.react-flow');\r\n    // when react-flow is used inside a shadow root we can't use document\r\n    const doc = getHostForElement(event.target);\r\n    if (!doc) {\r\n        return;\r\n    }\r\n    const elementBelow = doc.elementFromPoint(event.clientX, event.clientY);\r\n    const elementBelowIsTarget = elementBelow?.classList.contains('target');\r\n    const elementBelowIsSource = elementBelow?.classList.contains('source');\r\n    if (!reactFlowNode || (!elementBelowIsTarget && !elementBelowIsSource && !elementEdgeUpdaterType)) {\r\n        return;\r\n    }\r\n    const { onConnectStart, connectionMode } = getState();\r\n    const handleType = elementEdgeUpdaterType ? elementEdgeUpdaterType : elementBelowIsTarget ? 'target' : 'source';\r\n    const containerBounds = reactFlowNode.getBoundingClientRect();\r\n    let recentHoveredHandle;\r\n    setState({\r\n        connectionPosition: {\r\n            x: event.clientX - containerBounds.left,\r\n            y: event.clientY - containerBounds.top,\r\n        },\r\n        connectionNodeId: nodeId,\r\n        connectionHandleId: handleId,\r\n        connectionHandleType: handleType,\r\n    });\r\n    onConnectStart?.(event, { nodeId, handleId, handleType });\r\n    function onMouseMove(event) {\r\n        setState({\r\n            connectionPosition: {\r\n                x: event.clientX - containerBounds.left,\r\n                y: event.clientY - containerBounds.top,\r\n            },\r\n        });\r\n        const { connection, elementBelow, isValid, isHoveringHandle } = checkElementBelowIsValid(event, connectionMode, isTarget, nodeId, handleId, isValidConnection, doc);\r\n        if (!isHoveringHandle) {\r\n            return resetRecentHandle(recentHoveredHandle);\r\n        }\r\n        if (connection.source !== connection.target && elementBelow) {\r\n            resetRecentHandle(recentHoveredHandle);\r\n            recentHoveredHandle = elementBelow;\r\n            elementBelow.classList.add('react-flow__handle-connecting');\r\n            elementBelow.classList.toggle('react-flow__handle-valid', isValid);\r\n        }\r\n    }\r\n    function onMouseUp(event) {\r\n        const { connection, isValid } = checkElementBelowIsValid(event, connectionMode, isTarget, nodeId, handleId, isValidConnection, doc);\r\n        if (isValid) {\r\n            onConnect?.(connection);\r\n        }\r\n        getState().onConnectEnd?.(event);\r\n        if (elementEdgeUpdaterType && onEdgeUpdateEnd) {\r\n            onEdgeUpdateEnd(event);\r\n        }\r\n        resetRecentHandle(recentHoveredHandle);\r\n        setState({\r\n            connectionNodeId: null,\r\n            connectionHandleId: null,\r\n            connectionHandleType: null,\r\n        });\r\n        doc.removeEventListener('mousemove', onMouseMove);\r\n        doc.removeEventListener('mouseup', onMouseUp);\r\n    }\r\n    doc.addEventListener('mousemove', onMouseMove);\r\n    doc.addEventListener('mouseup', onMouseUp);\r\n}\n\nconst isEdge = (element) => 'id' in element && 'source' in element && 'target' in element;\r\nconst isNode = (element) => 'id' in element && !('source' in element) && !('target' in element);\r\nconst getOutgoers = (node, nodes, edges) => {\r\n    if (!isNode(node)) {\r\n        return [];\r\n    }\r\n    const outgoerIds = edges.filter((e) => e.source === node.id).map((e) => e.target);\r\n    return nodes.filter((n) => outgoerIds.includes(n.id));\r\n};\r\nconst getIncomers = (node, nodes, edges) => {\r\n    if (!isNode(node)) {\r\n        return [];\r\n    }\r\n    const incomersIds = edges.filter((e) => e.target === node.id).map((e) => e.source);\r\n    return nodes.filter((n) => incomersIds.includes(n.id));\r\n};\r\nconst getEdgeId = ({ source, sourceHandle, target, targetHandle }) => `reactflow__edge-${source}${sourceHandle || ''}-${target}${targetHandle || ''}`;\r\nconst getMarkerId = (marker, rfId) => {\r\n    if (typeof marker === 'undefined') {\r\n        return '';\r\n    }\r\n    if (typeof marker === 'string') {\r\n        return marker;\r\n    }\r\n    const idPrefix = rfId ? `${rfId}__` : '';\r\n    return `${idPrefix}${Object.keys(marker)\r\n        .sort()\r\n        .map((key) => `${key}=${marker[key]}`)\r\n        .join('&')}`;\r\n};\r\nconst connectionExists = (edge, edges) => {\r\n    return edges.some((el) => el.source === edge.source &&\r\n        el.target === edge.target &&\r\n        (el.sourceHandle === edge.sourceHandle || (!el.sourceHandle && !edge.sourceHandle)) &&\r\n        (el.targetHandle === edge.targetHandle || (!el.targetHandle && !edge.targetHandle)));\r\n};\r\nconst addEdge = (edgeParams, edges) => {\r\n    if (!edgeParams.source || !edgeParams.target) {\r\n        devWarn(\"Can't create edge. An edge needs a source and a target. Help: https://reactflow.dev/error#600\");\r\n        return edges;\r\n    }\r\n    let edge;\r\n    if (isEdge(edgeParams)) {\r\n        edge = { ...edgeParams };\r\n    }\r\n    else {\r\n        edge = {\r\n            ...edgeParams,\r\n            id: getEdgeId(edgeParams),\r\n        };\r\n    }\r\n    if (connectionExists(edge, edges)) {\r\n        return edges;\r\n    }\r\n    return edges.concat(edge);\r\n};\r\nconst updateEdge = (oldEdge, newConnection, edges) => {\r\n    if (!newConnection.source || !newConnection.target) {\r\n        devWarn(\"Can't create a new edge. An edge needs a source and a target. Help: https://reactflow.dev/error#600\");\r\n        return edges;\r\n    }\r\n    const foundEdge = edges.find((e) => e.id === oldEdge.id);\r\n    if (!foundEdge) {\r\n        devWarn(`The old edge with id=${oldEdge.id} does not exist. Help: https://reactflow.dev/error#700`);\r\n        return edges;\r\n    }\r\n    // Remove old edge and create the new edge with parameters of old edge.\r\n    const edge = {\r\n        ...oldEdge,\r\n        id: getEdgeId(newConnection),\r\n        source: newConnection.source,\r\n        target: newConnection.target,\r\n        sourceHandle: newConnection.sourceHandle,\r\n        targetHandle: newConnection.targetHandle,\r\n    };\r\n    return edges.filter((e) => e.id !== oldEdge.id).concat(edge);\r\n};\r\nconst pointToRendererPoint = ({ x, y }, [tx, ty, tScale], snapToGrid, [snapX, snapY]) => {\r\n    const position = {\r\n        x: (x - tx) / tScale,\r\n        y: (y - ty) / tScale,\r\n    };\r\n    if (snapToGrid) {\r\n        return {\r\n            x: snapX * Math.round(position.x / snapX),\r\n            y: snapY * Math.round(position.y / snapY),\r\n        };\r\n    }\r\n    return position;\r\n};\r\nconst getRectOfNodes = (nodes) => {\r\n    if (nodes.length === 0) {\r\n        return { x: 0, y: 0, width: 0, height: 0 };\r\n    }\r\n    const box = nodes.reduce((currBox, { positionAbsolute, position, width, height }) => getBoundsOfBoxes(currBox, rectToBox({\r\n        x: positionAbsolute ? positionAbsolute.x : position.x,\r\n        y: positionAbsolute ? positionAbsolute.y : position.y,\r\n        width: width || 0,\r\n        height: height || 0,\r\n    })), { x: Infinity, y: Infinity, x2: -Infinity, y2: -Infinity });\r\n    return boxToRect(box);\r\n};\r\nconst getNodesInside = (nodeInternals, rect, [tx, ty, tScale] = [0, 0, 1], partially = false, \r\n// set excludeNonSelectableNodes if you want to pay attention to the nodes \"selectable\" attribute\r\nexcludeNonSelectableNodes = false) => {\r\n    const rBox = rectToBox({\r\n        x: (rect.x - tx) / tScale,\r\n        y: (rect.y - ty) / tScale,\r\n        width: rect.width / tScale,\r\n        height: rect.height / tScale,\r\n    });\r\n    const visibleNodes = [];\r\n    nodeInternals.forEach((node) => {\r\n        const { positionAbsolute = { x: 0, y: 0 }, width, height, selectable = true } = node;\r\n        if (excludeNonSelectableNodes && !selectable) {\r\n            return false;\r\n        }\r\n        const nBox = rectToBox({ ...positionAbsolute, width: width || 0, height: height || 0 });\r\n        const xOverlap = Math.max(0, Math.min(rBox.x2, nBox.x2) - Math.max(rBox.x, nBox.x));\r\n        const yOverlap = Math.max(0, Math.min(rBox.y2, nBox.y2) - Math.max(rBox.y, nBox.y));\r\n        const overlappingArea = Math.ceil(xOverlap * yOverlap);\r\n        const notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\r\n        const partiallyVisible = partially && overlappingArea > 0;\r\n        const area = (width || 0) * (height || 0);\r\n        const isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\r\n        if (isVisible) {\r\n            visibleNodes.push(node);\r\n        }\r\n    });\r\n    return visibleNodes;\r\n};\r\nconst getConnectedEdges = (nodes, edges) => {\r\n    const nodeIds = nodes.map((node) => node.id);\r\n    return edges.filter((edge) => nodeIds.includes(edge.source) || nodeIds.includes(edge.target));\r\n};\r\nconst getTransformForBounds = (bounds, width, height, minZoom, maxZoom, padding = 0.1) => {\r\n    const xZoom = width / (bounds.width * (1 + padding));\r\n    const yZoom = height / (bounds.height * (1 + padding));\r\n    const zoom = Math.min(xZoom, yZoom);\r\n    const clampedZoom = clamp(zoom, minZoom, maxZoom);\r\n    const boundsCenterX = bounds.x + bounds.width / 2;\r\n    const boundsCenterY = bounds.y + bounds.height / 2;\r\n    const x = width / 2 - boundsCenterX * clampedZoom;\r\n    const y = height / 2 - boundsCenterY * clampedZoom;\r\n    return [x, y, clampedZoom];\r\n};\r\nconst getD3Transition = (selection, duration = 0) => {\r\n    return selection.transition().duration(duration);\r\n};\n\nconst alwaysValid = () => true;\r\nconst selector$d = (s) => ({\r\n    connectionStartHandle: s.connectionStartHandle,\r\n    connectOnClick: s.connectOnClick,\r\n    noPanClassName: s.noPanClassName,\r\n});\r\nconst Handle = forwardRef(({ type = 'source', position = Position.Top, isValidConnection = alwaysValid, isConnectable = true, id, onConnect, children, className, onMouseDown, ...rest }, ref) => {\r\n    const store = useStoreApi();\r\n    const nodeId = useContext(NodeIdContext);\r\n    const { connectionStartHandle, connectOnClick, noPanClassName } = useStore(selector$d, shallow);\r\n    const handleId = id || null;\r\n    const isTarget = type === 'target';\r\n    const onConnectExtended = (params) => {\r\n        const { defaultEdgeOptions, onConnect: onConnectAction, hasDefaultEdges } = store.getState();\r\n        const edgeParams = {\r\n            ...defaultEdgeOptions,\r\n            ...params,\r\n        };\r\n        if (hasDefaultEdges) {\r\n            const { edges } = store.getState();\r\n            store.setState({ edges: addEdge(edgeParams, edges) });\r\n        }\r\n        onConnectAction?.(edgeParams);\r\n        onConnect?.(edgeParams);\r\n    };\r\n    const onMouseDownHandler = (event) => {\r\n        if (event.button === 0) {\r\n            handleMouseDown({\r\n                event,\r\n                handleId,\r\n                nodeId,\r\n                onConnect: onConnectExtended,\r\n                isTarget,\r\n                getState: store.getState,\r\n                setState: store.setState,\r\n                isValidConnection,\r\n            });\r\n        }\r\n        onMouseDown?.(event);\r\n    };\r\n    const onClick = (event) => {\r\n        const { onClickConnectStart, onClickConnectEnd, connectionMode } = store.getState();\r\n        if (!connectionStartHandle) {\r\n            onClickConnectStart?.(event, { nodeId, handleId, handleType: type });\r\n            store.setState({ connectionStartHandle: { nodeId, type, handleId } });\r\n            return;\r\n        }\r\n        const doc = getHostForElement(event.target);\r\n        const { connection, isValid } = checkElementBelowIsValid(event, connectionMode, connectionStartHandle.type === 'target', connectionStartHandle.nodeId, connectionStartHandle.handleId || null, isValidConnection, doc);\r\n        if (isValid) {\r\n            onConnectExtended(connection);\r\n        }\r\n        onClickConnectEnd?.(event);\r\n        store.setState({ connectionStartHandle: null });\r\n    };\r\n    return (jsx(\"div\", { \"data-handleid\": handleId, \"data-nodeid\": nodeId, \"data-handlepos\": position, className: cc([\r\n            'react-flow__handle',\r\n            `react-flow__handle-${position}`,\r\n            'nodrag',\r\n            noPanClassName,\r\n            className,\r\n            {\r\n                source: !isTarget,\r\n                target: isTarget,\r\n                connectable: isConnectable,\r\n                connecting: connectionStartHandle?.nodeId === nodeId &&\r\n                    connectionStartHandle?.handleId === handleId &&\r\n                    connectionStartHandle?.type === type,\r\n            },\r\n        ]), onMouseDown: onMouseDownHandler, onClick: connectOnClick ? onClick : undefined, ref: ref, ...rest, children: children }));\r\n});\r\nHandle.displayName = 'Handle';\r\nvar Handle$1 = memo(Handle);\n\nconst DefaultNode = ({ data, isConnectable, targetPosition = Position.Top, sourcePosition = Position.Bottom, }) => {\r\n    return (jsxs(Fragment, { children: [jsx(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label, jsx(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\r\n};\r\nDefaultNode.displayName = 'DefaultNode';\r\nvar DefaultNode$1 = memo(DefaultNode);\n\nconst InputNode = ({ data, isConnectable, sourcePosition = Position.Bottom }) => (jsxs(Fragment, { children: [data?.label, jsx(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\r\nInputNode.displayName = 'InputNode';\r\nvar InputNode$1 = memo(InputNode);\n\nconst OutputNode = ({ data, isConnectable, targetPosition = Position.Top }) => (jsxs(Fragment, { children: [jsx(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label] }));\r\nOutputNode.displayName = 'OutputNode';\r\nvar OutputNode$1 = memo(OutputNode);\n\nconst GroupNode = () => null;\r\nGroupNode.displayName = 'GroupNode';\n\nconst selector$c = (s) => ({\r\n    selectedNodes: Array.from(s.nodeInternals.values()).filter((n) => n.selected),\r\n    selectedEdges: s.edges.filter((e) => e.selected),\r\n});\r\nfunction areEqual(objA, objB) {\r\n    const selectedNodeIdsA = objA.selectedNodes.map((n) => n.id);\r\n    const selectedNodeIdsB = objB.selectedNodes.map((n) => n.id);\r\n    const selectedEdgeIdsA = objA.selectedEdges.map((e) => e.id);\r\n    const selectedEdgeIdsB = objB.selectedEdges.map((e) => e.id);\r\n    return shallow(selectedNodeIdsA, selectedNodeIdsB) && shallow(selectedEdgeIdsA, selectedEdgeIdsB);\r\n}\r\n// This is just a helper component for calling the onSelectionChange listener.\r\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\r\nfunction SelectionListener({ onSelectionChange }) {\r\n    const store = useStoreApi();\r\n    const { selectedNodes, selectedEdges } = useStore(selector$c, areEqual);\r\n    useEffect(() => {\r\n        const params = { nodes: selectedNodes, edges: selectedEdges };\r\n        onSelectionChange(params);\r\n        store.getState().onSelectionChange?.(params);\r\n    }, [selectedNodes, selectedEdges]);\r\n    return null;\r\n}\r\nvar SelectionListener$1 = memo(SelectionListener);\n\nconst selector$b = (s) => ({\r\n    setNodes: s.setNodes,\r\n    setEdges: s.setEdges,\r\n    setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\r\n    setMinZoom: s.setMinZoom,\r\n    setMaxZoom: s.setMaxZoom,\r\n    setTranslateExtent: s.setTranslateExtent,\r\n    setNodeExtent: s.setNodeExtent,\r\n    reset: s.reset,\r\n});\r\nfunction useStoreUpdater(value, setStoreState) {\r\n    useEffect(() => {\r\n        if (typeof value !== 'undefined') {\r\n            setStoreState(value);\r\n        }\r\n    }, [value]);\r\n}\r\n// updates with values in store that don't have a dedicated setter function\r\nfunction useDirectStoreUpdater(key, value, setState) {\r\n    useEffect(() => {\r\n        if (typeof value !== 'undefined') {\r\n            setState({ [key]: value });\r\n        }\r\n    }, [value]);\r\n}\r\nconst StoreUpdater = ({ nodes, edges, defaultNodes, defaultEdges, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, nodesDraggable, nodesConnectable, minZoom, maxZoom, nodeExtent, onNodesChange, onEdgesChange, elementsSelectable, connectionMode, snapGrid, snapToGrid, translateExtent, connectOnClick, defaultEdgeOptions, fitView, fitViewOptions, onNodesDelete, onEdgesDelete, onNodeDrag, onNodeDragStart, onNodeDragStop, onSelectionDrag, onSelectionDragStart, onSelectionDragStop, noPanClassName, nodeOrigin, id, }) => {\r\n    const { setNodes, setEdges, setDefaultNodesAndEdges, setMinZoom, setMaxZoom, setTranslateExtent, setNodeExtent, reset, } = useStore(selector$b, shallow);\r\n    const store = useStoreApi();\r\n    useEffect(() => {\r\n        const edgesWithDefaults = defaultEdges?.map((e) => ({ ...e, ...defaultEdgeOptions }));\r\n        setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\r\n        return () => {\r\n            reset();\r\n        };\r\n    }, []);\r\n    useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\r\n    useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\r\n    useDirectStoreUpdater('onConnect', onConnect, store.setState);\r\n    useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\r\n    useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\r\n    useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\r\n    useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\r\n    useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\r\n    useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\r\n    useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\r\n    useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\r\n    useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\r\n    useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\r\n    useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\r\n    useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\r\n    useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\r\n    useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\r\n    useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\r\n    useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\r\n    useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\r\n    useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\r\n    useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\r\n    useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\r\n    useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\r\n    useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\r\n    useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\r\n    useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\r\n    useDirectStoreUpdater('rfId', id, store.setState);\r\n    useStoreUpdater(nodes, setNodes);\r\n    useStoreUpdater(edges, setEdges);\r\n    useStoreUpdater(minZoom, setMinZoom);\r\n    useStoreUpdater(maxZoom, setMaxZoom);\r\n    useStoreUpdater(translateExtent, setTranslateExtent);\r\n    useStoreUpdater(nodeExtent, setNodeExtent);\r\n    return null;\r\n};\n\nconst style = { display: 'none' };\r\nconst ariaLiveStyle = {\r\n    position: 'absolute',\r\n    width: 1,\r\n    height: 1,\r\n    margin: -1,\r\n    border: 0,\r\n    padding: 0,\r\n    overflow: 'hidden',\r\n    clip: 'rect(0px, 0px, 0px, 0px)',\r\n    clipPath: 'inset(100%)',\r\n};\r\nconst ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\r\nconst ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\r\nconst ARIA_LIVE_MESSAGE = 'react-flow__arai-live';\r\nconst selector$a = (s) => s.ariaLiveMessage;\r\nfunction A11yDescriptions({ rfId }) {\r\n    const ariaLiveMessage = useStore(selector$a);\r\n    return (jsxs(Fragment, { children: [jsx(\"div\", { id: `${ARIA_NODE_DESC_KEY}-${rfId}`, style: style, children: \"Press enter or space to select a node. You can then use the arrow keys to move the node around, press delete to remove it and press escape to cancel.\" }), jsx(\"div\", { id: `${ARIA_EDGE_DESC_KEY}-${rfId}`, style: style, children: \"Press enter or space to select an edge. You can then press delete to remove it or press escape to cancel.\" }), jsx(\"div\", { id: `${ARIA_LIVE_MESSAGE}-${rfId}`, \"aria-live\": \"assertive\", \"aria-atomic\": \"true\", style: ariaLiveStyle, children: ariaLiveMessage })] }));\r\n}\n\nconst shiftX = (x, shift, position) => {\r\n    if (position === Position.Left)\r\n        return x - shift;\r\n    if (position === Position.Right)\r\n        return x + shift;\r\n    return x;\r\n};\r\nconst shiftY = (y, shift, position) => {\r\n    if (position === Position.Top)\r\n        return y - shift;\r\n    if (position === Position.Bottom)\r\n        return y + shift;\r\n    return y;\r\n};\r\nconst EdgeUpdaterClassName = 'react-flow__edgeupdater';\r\nconst EdgeAnchor = ({ position, centerX, centerY, radius = 10, onMouseDown, onMouseEnter, onMouseOut, type, }) => (jsx(\"circle\", { onMouseDown: onMouseDown, onMouseEnter: onMouseEnter, onMouseOut: onMouseOut, className: cc([EdgeUpdaterClassName, `${EdgeUpdaterClassName}-${type}`]), cx: shiftX(centerX, radius, position), cy: shiftY(centerY, radius, position), r: radius, stroke: \"transparent\", fill: \"transparent\" }));\n\nvar wrapEdge = (EdgeComponent) => {\r\n    const EdgeWrapper = ({ id, className, type, data, onClick, onEdgeDoubleClick, selected, animated, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, source, target, sourceX, sourceY, targetX, targetY, sourcePosition, targetPosition, elementsSelectable, hidden, sourceHandleId, targetHandleId, onContextMenu, onMouseEnter, onMouseMove, onMouseLeave, edgeUpdaterRadius, onEdgeUpdate, onEdgeUpdateStart, onEdgeUpdateEnd, markerEnd, markerStart, rfId, ariaLabel, disableKeyboardA11y, pathOptions, interactionWidth, }) => {\r\n        const edgeRef = useRef(null);\r\n        const [updateHover, setUpdateHover] = useState(false);\r\n        const [updating, setUpdating] = useState(false);\r\n        const store = useStoreApi();\r\n        const markerStartUrl = useMemo(() => `url(#${getMarkerId(markerStart, rfId)})`, [markerStart, rfId]);\r\n        const markerEndUrl = useMemo(() => `url(#${getMarkerId(markerEnd, rfId)})`, [markerEnd, rfId]);\r\n        if (hidden) {\r\n            return null;\r\n        }\r\n        const onEdgeClick = (event) => {\r\n            const { edges, addSelectedEdges } = store.getState();\r\n            if (elementsSelectable) {\r\n                store.setState({ nodesSelectionActive: false });\r\n                addSelectedEdges([id]);\r\n            }\r\n            if (onClick) {\r\n                const edge = edges.find((e) => e.id === id);\r\n                onClick(event, edge);\r\n            }\r\n        };\r\n        const onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\r\n        const onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\r\n        const onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\r\n        const onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\r\n        const onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\r\n        const handleEdgeUpdater = (event, isSourceHandle) => {\r\n            const nodeId = isSourceHandle ? target : source;\r\n            const handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\r\n            const handleType = isSourceHandle ? 'target' : 'source';\r\n            const isValidConnection = () => true;\r\n            const isTarget = isSourceHandle;\r\n            const edge = store.getState().edges.find((e) => e.id === id);\r\n            setUpdating(true);\r\n            onEdgeUpdateStart?.(event, edge, handleType);\r\n            const _onEdgeUpdateEnd = (evt) => {\r\n                setUpdating(false);\r\n                onEdgeUpdateEnd?.(evt, edge, handleType);\r\n            };\r\n            const onConnectEdge = (connection) => onEdgeUpdate?.(edge, connection);\r\n            handleMouseDown({\r\n                event,\r\n                handleId,\r\n                nodeId,\r\n                onConnect: onConnectEdge,\r\n                isTarget,\r\n                getState: store.getState,\r\n                setState: store.setState,\r\n                isValidConnection,\r\n                elementEdgeUpdaterType: handleType,\r\n                onEdgeUpdateEnd: _onEdgeUpdateEnd,\r\n            });\r\n        };\r\n        const onEdgeUpdaterSourceMouseDown = (event) => handleEdgeUpdater(event, true);\r\n        const onEdgeUpdaterTargetMouseDown = (event) => handleEdgeUpdater(event, false);\r\n        const onEdgeUpdaterMouseEnter = () => setUpdateHover(true);\r\n        const onEdgeUpdaterMouseOut = () => setUpdateHover(false);\r\n        const inactive = !elementsSelectable && !onClick;\r\n        const handleEdgeUpdate = typeof onEdgeUpdate !== 'undefined';\r\n        const onKeyDown = (event) => {\r\n            if (elementSelectionKeys.includes(event.key) && elementsSelectable) {\r\n                const { unselectNodesAndEdges, addSelectedEdges, edges } = store.getState();\r\n                const unselect = event.key === 'Escape';\r\n                if (unselect) {\r\n                    edgeRef.current?.blur();\r\n                    unselectNodesAndEdges({ edges: [edges.find((e) => e.id === id)] });\r\n                }\r\n                else {\r\n                    addSelectedEdges([id]);\r\n                }\r\n            }\r\n        };\r\n        return (jsxs(\"g\", { className: cc([\r\n                'react-flow__edge',\r\n                `react-flow__edge-${type}`,\r\n                className,\r\n                { selected, animated, inactive, updating: updateHover },\r\n            ]), onClick: onEdgeClick, onDoubleClick: onEdgeDoubleClickHandler, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onKeyDown: disableKeyboardA11y ? undefined : onKeyDown, tabIndex: disableKeyboardA11y ? undefined : 0, role: disableKeyboardA11y ? undefined : 'button', \"data-testid\": `rf__edge-${id}`, \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : `Edge from ${source} to ${target}`, \"aria-describedby\": disableKeyboardA11y ? undefined : `${ARIA_EDGE_DESC_KEY}-${rfId}`, ref: edgeRef, children: [!updating && (jsx(EdgeComponent, { id: id, source: source, target: target, selected: selected, animated: animated, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, data: data, style: style, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, sourceHandleId: sourceHandleId, targetHandleId: targetHandleId, markerStart: markerStartUrl, markerEnd: markerEndUrl, pathOptions: pathOptions, interactionWidth: interactionWidth })), handleEdgeUpdate && (jsxs(Fragment, { children: [jsx(EdgeAnchor, { position: sourcePosition, centerX: sourceX, centerY: sourceY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterSourceMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"source\" }), jsx(EdgeAnchor, { position: targetPosition, centerX: targetX, centerY: targetY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterTargetMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"target\" })] }))] }));\r\n    };\r\n    EdgeWrapper.displayName = 'EdgeWrapper';\r\n    return memo(EdgeWrapper);\r\n};\n\nfunction createEdgeTypes(edgeTypes) {\r\n    const standardTypes = {\r\n        default: wrapEdge((edgeTypes.default || BezierEdge)),\r\n        straight: wrapEdge((edgeTypes.bezier || StraightEdge)),\r\n        step: wrapEdge((edgeTypes.step || StepEdge)),\r\n        smoothstep: wrapEdge((edgeTypes.step || SmoothStepEdge)),\r\n        simplebezier: wrapEdge((edgeTypes.simplebezier || SimpleBezierEdge)),\r\n    };\r\n    const wrappedTypes = {};\r\n    const specialTypes = Object.keys(edgeTypes)\r\n        .filter((k) => !['default', 'bezier'].includes(k))\r\n        .reduce((res, key) => {\r\n        res[key] = wrapEdge((edgeTypes[key] || BezierEdge));\r\n        return res;\r\n    }, wrappedTypes);\r\n    return {\r\n        ...standardTypes,\r\n        ...specialTypes,\r\n    };\r\n}\r\nfunction getHandlePosition(position, nodeRect, handle = null) {\r\n    const x = (handle?.x || 0) + nodeRect.x;\r\n    const y = (handle?.y || 0) + nodeRect.y;\r\n    const width = handle?.width || nodeRect.width;\r\n    const height = handle?.height || nodeRect.height;\r\n    switch (position) {\r\n        case Position.Top:\r\n            return {\r\n                x: x + width / 2,\r\n                y,\r\n            };\r\n        case Position.Right:\r\n            return {\r\n                x: x + width,\r\n                y: y + height / 2,\r\n            };\r\n        case Position.Bottom:\r\n            return {\r\n                x: x + width / 2,\r\n                y: y + height,\r\n            };\r\n        case Position.Left:\r\n            return {\r\n                x,\r\n                y: y + height / 2,\r\n            };\r\n    }\r\n}\r\nfunction getHandle(bounds, handleId) {\r\n    if (!bounds) {\r\n        return null;\r\n    }\r\n    // there is no handleId when there are no multiple handles/ handles with ids\r\n    // so we just pick the first one\r\n    let handle = null;\r\n    if (bounds.length === 1 || !handleId) {\r\n        handle = bounds[0];\r\n    }\r\n    else if (handleId) {\r\n        handle = bounds.find((d) => d.id === handleId);\r\n    }\r\n    return typeof handle === 'undefined' ? null : handle;\r\n}\r\nconst getEdgePositions = (sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) => {\r\n    const sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\r\n    const targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\r\n    return {\r\n        sourceX: sourceHandlePos.x,\r\n        sourceY: sourceHandlePos.y,\r\n        targetX: targetHandlePos.x,\r\n        targetY: targetHandlePos.y,\r\n    };\r\n};\r\nfunction isEdgeVisible({ sourcePos, targetPos, sourceWidth, sourceHeight, targetWidth, targetHeight, width, height, transform, }) {\r\n    const edgeBox = {\r\n        x: Math.min(sourcePos.x, targetPos.x),\r\n        y: Math.min(sourcePos.y, targetPos.y),\r\n        x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\r\n        y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight),\r\n    };\r\n    if (edgeBox.x === edgeBox.x2) {\r\n        edgeBox.x2 += 1;\r\n    }\r\n    if (edgeBox.y === edgeBox.y2) {\r\n        edgeBox.y2 += 1;\r\n    }\r\n    const viewBox = rectToBox({\r\n        x: (0 - transform[0]) / transform[2],\r\n        y: (0 - transform[1]) / transform[2],\r\n        width: width / transform[2],\r\n        height: height / transform[2],\r\n    });\r\n    const xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\r\n    const yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\r\n    const overlappingArea = Math.ceil(xOverlap * yOverlap);\r\n    return overlappingArea > 0;\r\n}\r\nfunction getNodeData(node) {\r\n    const handleBounds = node?.[internalsSymbol]?.handleBounds || null;\r\n    const isInvalid = !node ||\r\n        !handleBounds ||\r\n        !node.width ||\r\n        !node.height ||\r\n        typeof node.positionAbsolute?.x === 'undefined' ||\r\n        typeof node.positionAbsolute?.y === 'undefined';\r\n    return [\r\n        {\r\n            x: node?.positionAbsolute?.x || 0,\r\n            y: node?.positionAbsolute?.y || 0,\r\n            width: node?.width || 0,\r\n            height: node?.height || 0,\r\n        },\r\n        handleBounds,\r\n        !isInvalid,\r\n    ];\r\n}\n\nconst doc = typeof document !== 'undefined' ? document : null;\r\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\r\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\r\n// an array means different possibilites. Explainer: ['a', 'd+s'] here the\r\n// user can use the single key 'a' or the combination 'd' + 's'\r\nvar useKeyPress = (keyCode = null, options = { target: doc }) => {\r\n    const [keyPressed, setKeyPressed] = useState(false);\r\n    // we need to remember the pressed keys in order to support combinations\r\n    const pressedKeys = useRef(new Set([]));\r\n    // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\r\n    // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\r\n    // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\r\n    // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\r\n    // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\r\n    // we can't find it in the list of keysToWatch.\r\n    const [keyCodes, keysToWatch] = useMemo(() => {\r\n        if (keyCode !== null) {\r\n            const keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\r\n            const keys = keyCodeArr.filter((kc) => typeof kc === 'string').map((kc) => kc.split('+'));\r\n            const keysFlat = keys.reduce((res, item) => res.concat(...item), []);\r\n            return [keys, keysFlat];\r\n        }\r\n        return [[], []];\r\n    }, [keyCode]);\r\n    useEffect(() => {\r\n        if (keyCode !== null) {\r\n            const downHandler = (event) => {\r\n                if (isInputDOMNode(event)) {\r\n                    return false;\r\n                }\r\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\r\n                pressedKeys.current.add(event[keyOrCode]);\r\n                if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\r\n                    event.preventDefault();\r\n                    setKeyPressed(true);\r\n                }\r\n            };\r\n            const upHandler = (event) => {\r\n                if (isInputDOMNode(event)) {\r\n                    return false;\r\n                }\r\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\r\n                if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\r\n                    setKeyPressed(false);\r\n                    pressedKeys.current.clear();\r\n                }\r\n                else {\r\n                    pressedKeys.current.delete(event[keyOrCode]);\r\n                }\r\n            };\r\n            const resetHandler = () => {\r\n                pressedKeys.current.clear();\r\n                setKeyPressed(false);\r\n            };\r\n            options?.target?.addEventListener('keydown', downHandler);\r\n            options?.target?.addEventListener('keyup', upHandler);\r\n            window.addEventListener('blur', resetHandler);\r\n            return () => {\r\n                options?.target?.removeEventListener('keydown', downHandler);\r\n                options?.target?.removeEventListener('keyup', upHandler);\r\n                window.removeEventListener('blur', resetHandler);\r\n            };\r\n        }\r\n    }, [keyCode, setKeyPressed]);\r\n    return keyPressed;\r\n};\r\n// utils\r\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\r\n    return (keyCodes\r\n        // we only want to compare same sizes of keyCode definitions\r\n        // and pressed keys. When the user specified 'Meta' as a key somewhere\r\n        // this would also be truthy without this filter when user presses 'Meta' + 'r'\r\n        .filter((keys) => isUp || keys.length === pressedKeys.size)\r\n        // since we want to support multiple possibilities only one of the\r\n        // combinations need to be part of the pressed keys\r\n        .some((keys) => keys.every((k) => pressedKeys.has(k))));\r\n}\r\nfunction useKeyOrCode(eventCode, keysToWatch) {\r\n    return keysToWatch.includes(eventCode) ? 'code' : 'key';\r\n}\r\nfunction isInputDOMNode(event) {\r\n    // using composed path for handling shadow dom\r\n    const target = (event.composedPath?.()[0] || event.target);\r\n    return (['INPUT', 'SELECT', 'TEXTAREA'].includes(target?.nodeName) ||\r\n        target?.hasAttribute('contenteditable') ||\r\n        !!target?.closest('.nokey'));\r\n}\n\nvar useGlobalKeyHandler = ({ deleteKeyCode, multiSelectionKeyCode }) => {\r\n    const store = useStoreApi();\r\n    const deleteKeyPressed = useKeyPress(deleteKeyCode);\r\n    const multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\r\n    useEffect(() => {\r\n        if (!deleteKeyPressed) {\r\n            return;\r\n        }\r\n        const { nodeInternals, edges, hasDefaultNodes, hasDefaultEdges, onNodesDelete, onEdgesDelete, onNodesChange, onEdgesChange, } = store.getState();\r\n        const nodes = Array.from(nodeInternals.values());\r\n        const nodesToRemove = nodes.reduce((res, node) => {\r\n            const parentSelected = !node.selected && node.parentNode && res.find((n) => n.id === node.parentNode);\r\n            const deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\r\n            if (deletable && (node.selected || parentSelected)) {\r\n                res.push(node);\r\n            }\r\n            return res;\r\n        }, []);\r\n        const deletableEdges = edges.filter((e) => (typeof e.deletable === 'boolean' ? e.deletable : true));\r\n        const selectedEdges = deletableEdges.filter((e) => e.selected);\r\n        if (nodesToRemove || selectedEdges) {\r\n            const connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\r\n            const edgesToRemove = [...selectedEdges, ...connectedEdges];\r\n            const edgeIdsToRemove = edgesToRemove.reduce((res, edge) => {\r\n                if (!res.includes(edge.id)) {\r\n                    res.push(edge.id);\r\n                }\r\n                return res;\r\n            }, []);\r\n            if (hasDefaultEdges || hasDefaultNodes) {\r\n                if (hasDefaultEdges) {\r\n                    store.setState({\r\n                        edges: edges.filter((e) => !edgeIdsToRemove.includes(e.id)),\r\n                    });\r\n                }\r\n                if (hasDefaultNodes) {\r\n                    nodesToRemove.forEach((node) => {\r\n                        nodeInternals.delete(node.id);\r\n                    });\r\n                    store.setState({\r\n                        nodeInternals: new Map(nodeInternals),\r\n                    });\r\n                }\r\n            }\r\n            if (edgeIdsToRemove.length > 0) {\r\n                onEdgesDelete?.(edgesToRemove);\r\n                if (onEdgesChange) {\r\n                    onEdgesChange(edgeIdsToRemove.map((id) => ({\r\n                        id,\r\n                        type: 'remove',\r\n                    })));\r\n                }\r\n            }\r\n            if (nodesToRemove.length > 0) {\r\n                onNodesDelete?.(nodesToRemove);\r\n                if (onNodesChange) {\r\n                    const nodeChanges = nodesToRemove.map((n) => ({ id: n.id, type: 'remove' }));\r\n                    onNodesChange(nodeChanges);\r\n                }\r\n            }\r\n            store.setState({ nodesSelectionActive: false });\r\n        }\r\n    }, [deleteKeyPressed]);\r\n    useEffect(() => {\r\n        store.setState({ multiSelectionActive: multiSelectionKeyPressed });\r\n    }, [multiSelectionKeyPressed]);\r\n};\n\nfunction useResizeHandler(rendererNode) {\r\n    const store = useStoreApi();\r\n    useEffect(() => {\r\n        let resizeObserver;\r\n        const updateDimensions = () => {\r\n            if (!rendererNode.current) {\r\n                return;\r\n            }\r\n            const size = getDimensions(rendererNode.current);\r\n            if (size.height === 0 || size.width === 0) {\r\n                devWarn('The React Flow parent container needs a width and a height to render the graph. Help: https://reactflow.dev/error#400');\r\n            }\r\n            store.setState({ width: size.width || 500, height: size.height || 500 });\r\n        };\r\n        updateDimensions();\r\n        window.addEventListener('resize', updateDimensions);\r\n        if (rendererNode.current) {\r\n            resizeObserver = new ResizeObserver(() => updateDimensions());\r\n            resizeObserver.observe(rendererNode.current);\r\n        }\r\n        return () => {\r\n            window.removeEventListener('resize', updateDimensions);\r\n            if (resizeObserver && rendererNode.current) {\r\n                resizeObserver.unobserve(rendererNode.current);\r\n            }\r\n        };\r\n    }, []);\r\n}\n\nconst containerStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%',\r\n    top: 0,\r\n    left: 0,\r\n};\n\nconst viewChanged = (prevViewport, eventViewport) => prevViewport.x !== eventViewport.x || prevViewport.y !== eventViewport.y || prevViewport.zoom !== eventViewport.k;\r\nconst eventToFlowTransform = (eventViewport) => ({\r\n    x: eventViewport.x,\r\n    y: eventViewport.y,\r\n    zoom: eventViewport.k,\r\n});\r\nconst isWrappedWithClass = (event, className) => event.target.closest(`.${className}`);\r\nconst selector$9 = (s) => ({\r\n    d3Zoom: s.d3Zoom,\r\n    d3Selection: s.d3Selection,\r\n    d3ZoomHandler: s.d3ZoomHandler,\r\n});\r\nconst ZoomPane = ({ onMove, onMoveStart, onMoveEnd, zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, selectionKeyPressed, elementsSelectable, panOnDrag = true, defaultViewport, translateExtent, minZoom, maxZoom, zoomActivationKeyCode, preventScrolling = true, children, noWheelClassName, noPanClassName, }) => {\r\n    const timerId = useRef();\r\n    const store = useStoreApi();\r\n    const isZoomingOrPanning = useRef(false);\r\n    const zoomPane = useRef(null);\r\n    const prevTransform = useRef({ x: 0, y: 0, zoom: 0 });\r\n    const { d3Zoom, d3Selection, d3ZoomHandler } = useStore(selector$9, shallow);\r\n    const zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\r\n    useResizeHandler(zoomPane);\r\n    useEffect(() => {\r\n        if (zoomPane.current) {\r\n            const d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\r\n            const selection = select(zoomPane.current).call(d3ZoomInstance);\r\n            const clampedX = clamp(defaultViewport.x, translateExtent[0][0], translateExtent[1][0]);\r\n            const clampedY = clamp(defaultViewport.y, translateExtent[0][1], translateExtent[1][1]);\r\n            const clampedZoom = clamp(defaultViewport.zoom, minZoom, maxZoom);\r\n            const updatedTransform = zoomIdentity.translate(clampedX, clampedY).scale(clampedZoom);\r\n            d3ZoomInstance.transform(selection, updatedTransform);\r\n            store.setState({\r\n                d3Zoom: d3ZoomInstance,\r\n                d3Selection: selection,\r\n                d3ZoomHandler: selection.on('wheel.zoom'),\r\n                // we need to pass transform because zoom handler is not registered when we set the initial transform\r\n                transform: [clampedX, clampedY, clampedZoom],\r\n                domNode: zoomPane.current.closest('.react-flow'),\r\n            });\r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n        if (d3Selection && d3Zoom) {\r\n            if (panOnScroll && !zoomActivationKeyPressed) {\r\n                d3Selection.on('wheel.zoom', (event) => {\r\n                    if (isWrappedWithClass(event, noWheelClassName)) {\r\n                        return false;\r\n                    }\r\n                    event.preventDefault();\r\n                    event.stopImmediatePropagation();\r\n                    const currentZoom = d3Selection.property('__zoom').k || 1;\r\n                    if (event.ctrlKey && zoomOnPinch) {\r\n                        const point = pointer(event);\r\n                        // taken from https://github.com/d3/d3-zoom/blob/master/src/zoom.js\r\n                        const pinchDelta = -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * 10;\r\n                        const zoom = currentZoom * Math.pow(2, pinchDelta);\r\n                        d3Zoom.scaleTo(d3Selection, zoom, point);\r\n                        return;\r\n                    }\r\n                    // increase scroll speed in firefox\r\n                    // firefox: deltaMode === 1; chrome: deltaMode === 0\r\n                    const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\r\n                    const deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\r\n                    const deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\r\n                    d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed);\r\n                });\r\n            }\r\n            else if (typeof d3ZoomHandler !== 'undefined') {\r\n                d3Selection.on('wheel.zoom', function (event, d) {\r\n                    if (!preventScrolling || isWrappedWithClass(event, noWheelClassName)) {\r\n                        return null;\r\n                    }\r\n                    event.preventDefault();\r\n                    d3ZoomHandler.call(this, event, d);\r\n                });\r\n            }\r\n        }\r\n    }, [\r\n        panOnScroll,\r\n        panOnScrollMode,\r\n        d3Selection,\r\n        d3Zoom,\r\n        d3ZoomHandler,\r\n        zoomActivationKeyPressed,\r\n        zoomOnPinch,\r\n        preventScrolling,\r\n        noWheelClassName,\r\n    ]);\r\n    useEffect(() => {\r\n        if (d3Zoom) {\r\n            if (selectionKeyPressed && !isZoomingOrPanning.current) {\r\n                d3Zoom.on('zoom', null);\r\n            }\r\n            else if (!selectionKeyPressed) {\r\n                d3Zoom.on('zoom', (event) => {\r\n                    const { onViewportChange } = store.getState();\r\n                    store.setState({ transform: [event.transform.x, event.transform.y, event.transform.k] });\r\n                    if (onMove || onViewportChange) {\r\n                        const flowTransform = eventToFlowTransform(event.transform);\r\n                        onViewportChange?.(flowTransform);\r\n                        onMove?.(event.sourceEvent, flowTransform);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [selectionKeyPressed, d3Zoom, onMove]);\r\n    useEffect(() => {\r\n        if (d3Zoom) {\r\n            d3Zoom.on('start', (event) => {\r\n                const { onViewportChangeStart } = store.getState();\r\n                isZoomingOrPanning.current = true;\r\n                if (event.sourceEvent?.type === 'mousedown') {\r\n                    store.setState({ paneDragging: true });\r\n                }\r\n                if (onMoveStart || onViewportChangeStart) {\r\n                    const flowTransform = eventToFlowTransform(event.transform);\r\n                    prevTransform.current = flowTransform;\r\n                    onViewportChangeStart?.(flowTransform);\r\n                    onMoveStart?.(event.sourceEvent, flowTransform);\r\n                }\r\n            });\r\n        }\r\n    }, [d3Zoom, onMoveStart]);\r\n    useEffect(() => {\r\n        if (d3Zoom) {\r\n            d3Zoom.on('end', (event) => {\r\n                const { onViewportChangeEnd } = store.getState();\r\n                isZoomingOrPanning.current = false;\r\n                store.setState({ paneDragging: false });\r\n                if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\r\n                    const flowTransform = eventToFlowTransform(event.transform);\r\n                    prevTransform.current = flowTransform;\r\n                    clearTimeout(timerId.current);\r\n                    timerId.current = setTimeout(() => {\r\n                        onViewportChangeEnd?.(flowTransform);\r\n                        onMoveEnd?.(event.sourceEvent, flowTransform);\r\n                    }, panOnScroll ? 150 : 0);\r\n                }\r\n            });\r\n        }\r\n    }, [d3Zoom, onMoveEnd, panOnScroll]);\r\n    useEffect(() => {\r\n        if (d3Zoom) {\r\n            d3Zoom.filter((event) => {\r\n                const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\r\n                const pinchZoom = zoomOnPinch && event.ctrlKey;\r\n                if (event.button === 1 && event.type === 'mousedown' && event.target.closest(`.react-flow__node`)) {\r\n                    return true;\r\n                }\r\n                // if all interactions are disabled, we prevent all zoom events\r\n                if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\r\n                    return false;\r\n                }\r\n                // during a selection we prevent all other interactions\r\n                if (selectionKeyPressed) {\r\n                    return false;\r\n                }\r\n                // if zoom on double click is disabled, we prevent the double click event\r\n                if (!zoomOnDoubleClick && event.type === 'dblclick') {\r\n                    return false;\r\n                }\r\n                // if the target element is inside an element with the nowheel class, we prevent zooming\r\n                if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\r\n                    return false;\r\n                }\r\n                // if the target element is inside an element with the nopan class, we prevent panning\r\n                if (isWrappedWithClass(event, noPanClassName) && event.type !== 'wheel') {\r\n                    return false;\r\n                }\r\n                if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\r\n                    return false;\r\n                }\r\n                // when there is no scroll handling enabled, we prevent all wheel events\r\n                if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\r\n                    return false;\r\n                }\r\n                // if the pane is not movable, we prevent dragging it with mousestart or touchstart\r\n                if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\r\n                    return false;\r\n                }\r\n                // default filter for d3-zoom\r\n                return (!event.ctrlKey || event.type === 'wheel') && (!event.button || event.button <= 1);\r\n            });\r\n        }\r\n    }, [\r\n        d3Zoom,\r\n        zoomOnScroll,\r\n        zoomOnPinch,\r\n        panOnScroll,\r\n        zoomOnDoubleClick,\r\n        panOnDrag,\r\n        selectionKeyPressed,\r\n        elementsSelectable,\r\n        zoomActivationKeyPressed,\r\n    ]);\r\n    return (jsx(\"div\", { className: \"react-flow__renderer\", ref: zoomPane, style: containerStyle, children: children }));\r\n};\n\nfunction handleParentExpand(res, updateItem) {\r\n    const parent = res.find((e) => e.id === updateItem.parentNode);\r\n    if (parent) {\r\n        const extendWidth = updateItem.position.x + updateItem.width - parent.width;\r\n        const extendHeight = updateItem.position.y + updateItem.height - parent.height;\r\n        if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\r\n            parent.style = { ...parent.style } || {};\r\n            parent.style.width = parent.style.width ?? parent.width;\r\n            parent.style.height = parent.style.height ?? parent.height;\r\n            if (extendWidth > 0) {\r\n                parent.style.width += extendWidth;\r\n            }\r\n            if (extendHeight > 0) {\r\n                parent.style.height += extendHeight;\r\n            }\r\n            if (updateItem.position.x < 0) {\r\n                const xDiff = Math.abs(updateItem.position.x);\r\n                parent.position.x = parent.position.x - xDiff;\r\n                parent.style.width += xDiff;\r\n                updateItem.position.x = 0;\r\n            }\r\n            if (updateItem.position.y < 0) {\r\n                const yDiff = Math.abs(updateItem.position.y);\r\n                parent.position.y = parent.position.y - yDiff;\r\n                parent.style.height += yDiff;\r\n                updateItem.position.y = 0;\r\n            }\r\n            parent.width = parent.style.width;\r\n            parent.height = parent.style.height;\r\n        }\r\n    }\r\n}\r\nfunction applyChanges(changes, elements) {\r\n    // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\r\n    if (changes.some((c) => c.type === 'reset')) {\r\n        return changes.filter((c) => c.type === 'reset').map((c) => c.item);\r\n    }\r\n    const initElements = changes.filter((c) => c.type === 'add').map((c) => c.item);\r\n    return elements.reduce((res, item) => {\r\n        const currentChange = changes.find((c) => c.id === item.id);\r\n        if (currentChange) {\r\n            switch (currentChange.type) {\r\n                case 'select': {\r\n                    res.push({ ...item, selected: currentChange.selected });\r\n                    return res;\r\n                }\r\n                case 'position': {\r\n                    const updateItem = { ...item };\r\n                    if (typeof currentChange.position !== 'undefined') {\r\n                        updateItem.position = currentChange.position;\r\n                    }\r\n                    if (typeof currentChange.positionAbsolute !== 'undefined') {\r\n                        updateItem.positionAbsolute = currentChange.positionAbsolute;\r\n                    }\r\n                    if (typeof currentChange.dragging !== 'undefined') {\r\n                        updateItem.dragging = currentChange.dragging;\r\n                    }\r\n                    if (updateItem.expandParent) {\r\n                        handleParentExpand(res, updateItem);\r\n                    }\r\n                    res.push(updateItem);\r\n                    return res;\r\n                }\r\n                case 'dimensions': {\r\n                    const updateItem = { ...item };\r\n                    if (typeof currentChange.dimensions !== 'undefined') {\r\n                        updateItem.width = currentChange.dimensions.width;\r\n                        updateItem.height = currentChange.dimensions.height;\r\n                    }\r\n                    if (updateItem.expandParent) {\r\n                        handleParentExpand(res, updateItem);\r\n                    }\r\n                    res.push(updateItem);\r\n                    return res;\r\n                }\r\n                case 'remove': {\r\n                    return res;\r\n                }\r\n            }\r\n        }\r\n        res.push(item);\r\n        return res;\r\n    }, initElements);\r\n}\r\nfunction applyNodeChanges(changes, nodes) {\r\n    return applyChanges(changes, nodes);\r\n}\r\nfunction applyEdgeChanges(changes, edges) {\r\n    return applyChanges(changes, edges);\r\n}\r\nconst createSelectionChange = (id, selected) => ({\r\n    id,\r\n    type: 'select',\r\n    selected,\r\n});\r\nfunction getSelectionChanges(items, selectedIds) {\r\n    return items.reduce((res, item) => {\r\n        const willBeSelected = selectedIds.includes(item.id);\r\n        if (!item.selected && willBeSelected) {\r\n            item.selected = true;\r\n            res.push(createSelectionChange(item.id, true));\r\n        }\r\n        else if (item.selected && !willBeSelected) {\r\n            item.selected = false;\r\n            res.push(createSelectionChange(item.id, false));\r\n        }\r\n        return res;\r\n    }, []);\r\n}\n\nfunction getMousePosition(event, containerBounds) {\r\n    return {\r\n        x: event.clientX - containerBounds.left,\r\n        y: event.clientY - containerBounds.top,\r\n    };\r\n}\r\nconst selector$8 = (s) => ({\r\n    userSelectionActive: s.userSelectionActive,\r\n    elementsSelectable: s.elementsSelectable,\r\n});\r\nconst initialRect = {\r\n    startX: 0,\r\n    startY: 0,\r\n    x: 0,\r\n    y: 0,\r\n    width: 0,\r\n    height: 0,\r\n    draw: false,\r\n};\r\nconst UserSelection = memo(({ selectionKeyPressed }) => {\r\n    const store = useStoreApi();\r\n    const prevSelectedNodesCount = useRef(0);\r\n    const prevSelectedEdgesCount = useRef(0);\r\n    const containerBounds = useRef();\r\n    const [userSelectionRect, setUserSelectionRect] = useState(initialRect);\r\n    const { userSelectionActive, elementsSelectable } = useStore(selector$8, shallow);\r\n    const renderUserSelectionPane = userSelectionActive || selectionKeyPressed;\r\n    if (!elementsSelectable || !renderUserSelectionPane) {\r\n        return null;\r\n    }\r\n    const resetUserSelection = () => {\r\n        setUserSelectionRect(initialRect);\r\n        store.setState({ userSelectionActive: false });\r\n        prevSelectedNodesCount.current = 0;\r\n        prevSelectedEdgesCount.current = 0;\r\n    };\r\n    const onMouseDown = (event) => {\r\n        const reactFlowNode = event.target.closest('.react-flow');\r\n        containerBounds.current = reactFlowNode.getBoundingClientRect();\r\n        const mousePos = getMousePosition(event, containerBounds.current);\r\n        setUserSelectionRect({\r\n            width: 0,\r\n            height: 0,\r\n            startX: mousePos.x,\r\n            startY: mousePos.y,\r\n            x: mousePos.x,\r\n            y: mousePos.y,\r\n            draw: true,\r\n        });\r\n        store.setState({ userSelectionActive: true, nodesSelectionActive: false });\r\n    };\r\n    const onMouseMove = (event) => {\r\n        if (!selectionKeyPressed || !userSelectionRect.draw || !containerBounds.current) {\r\n            return;\r\n        }\r\n        const mousePos = getMousePosition(event, containerBounds.current);\r\n        const startX = userSelectionRect.startX ?? 0;\r\n        const startY = userSelectionRect.startY ?? 0;\r\n        const nextUserSelectRect = {\r\n            ...userSelectionRect,\r\n            x: mousePos.x < startX ? mousePos.x : startX,\r\n            y: mousePos.y < startY ? mousePos.y : startY,\r\n            width: Math.abs(mousePos.x - startX),\r\n            height: Math.abs(mousePos.y - startY),\r\n        };\r\n        const { nodeInternals, edges, transform, onNodesChange, onEdgesChange } = store.getState();\r\n        const nodes = Array.from(nodeInternals.values());\r\n        const selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, false, true);\r\n        const selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map((e) => e.id);\r\n        const selectedNodeIds = selectedNodes.map((n) => n.id);\r\n        if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\r\n            prevSelectedNodesCount.current = selectedNodeIds.length;\r\n            const changes = getSelectionChanges(nodes, selectedNodeIds);\r\n            if (changes.length) {\r\n                onNodesChange?.(changes);\r\n            }\r\n        }\r\n        if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\r\n            prevSelectedEdgesCount.current = selectedEdgeIds.length;\r\n            const changes = getSelectionChanges(edges, selectedEdgeIds);\r\n            if (changes.length) {\r\n                onEdgesChange?.(changes);\r\n            }\r\n        }\r\n        setUserSelectionRect(nextUserSelectRect);\r\n    };\r\n    const onMouseUp = () => {\r\n        store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\r\n        resetUserSelection();\r\n    };\r\n    const onMouseLeave = () => {\r\n        store.setState({ nodesSelectionActive: false });\r\n        resetUserSelection();\r\n    };\r\n    return (jsx(\"div\", { className: \"react-flow__selectionpane react-flow__container\", onMouseDown: onMouseDown, onMouseMove: onMouseMove, onMouseUp: onMouseUp, onMouseLeave: onMouseLeave, children: userSelectionRect.draw && (jsx(\"div\", { className: \"react-flow__selection react-flow__container\", style: {\r\n                width: userSelectionRect.width,\r\n                height: userSelectionRect.height,\r\n                transform: `translate(${userSelectionRect.x}px, ${userSelectionRect.y}px)`,\r\n            } })) }));\r\n});\r\nUserSelection.displayName = 'UserSelection';\n\nfunction isParentSelected(node, nodeInternals) {\r\n    if (!node.parentNode) {\r\n        return false;\r\n    }\r\n    const parentNode = nodeInternals.get(node.parentNode);\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    if (parentNode.selected) {\r\n        return true;\r\n    }\r\n    return isParentSelected(parentNode, nodeInternals);\r\n}\r\nfunction hasSelector(target, selector, nodeRef) {\r\n    let current = target;\r\n    do {\r\n        if (current?.matches(selector))\r\n            return true;\r\n        if (current === nodeRef.current)\r\n            return false;\r\n        current = current.parentElement;\r\n    } while (current);\r\n    return false;\r\n}\r\n// looks for all selected nodes and created a NodeDragItem for each of them\r\nfunction getDragItems(nodeInternals, mousePos, nodeId) {\r\n    return Array.from(nodeInternals.values())\r\n        .filter((n) => (n.selected || n.id === nodeId) && (!n.parentNode || !isParentSelected(n, nodeInternals)))\r\n        .map((n) => ({\r\n        id: n.id,\r\n        position: n.position || { x: 0, y: 0 },\r\n        positionAbsolute: n.positionAbsolute || { x: 0, y: 0 },\r\n        distance: {\r\n            x: mousePos.x - (n.positionAbsolute?.x ?? 0),\r\n            y: mousePos.y - (n.positionAbsolute?.y ?? 0),\r\n        },\r\n        delta: {\r\n            x: 0,\r\n            y: 0,\r\n        },\r\n        extent: n.extent,\r\n        parentNode: n.parentNode,\r\n        width: n.width,\r\n        height: n.height,\r\n    }));\r\n}\r\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent) {\r\n    let currentExtent = node.extent || nodeExtent;\r\n    if (node.extent === 'parent') {\r\n        if (node.parentNode && node.width && node.height) {\r\n            const parent = nodeInternals.get(node.parentNode);\r\n            currentExtent =\r\n                parent?.positionAbsolute && parent?.width && parent?.height\r\n                    ? [\r\n                        [parent.positionAbsolute.x, parent.positionAbsolute.y],\r\n                        [\r\n                            parent.positionAbsolute.x + parent.width - node.width,\r\n                            parent.positionAbsolute.y + parent.height - node.height,\r\n                        ],\r\n                    ]\r\n                    : currentExtent;\r\n        }\r\n        else {\r\n            devWarn('Only child nodes can use a parent extent. Help: https://reactflow.dev/error#500');\r\n            currentExtent = nodeExtent;\r\n        }\r\n    }\r\n    else if (node.extent && node.parentNode) {\r\n        const parent = nodeInternals.get(node.parentNode);\r\n        const parentX = parent?.positionAbsolute?.x ?? 0;\r\n        const parentY = parent?.positionAbsolute?.y ?? 0;\r\n        currentExtent = [\r\n            [node.extent[0][0] + parentX, node.extent[0][1] + parentY],\r\n            [node.extent[1][0] + parentX, node.extent[1][1] + parentY],\r\n        ];\r\n    }\r\n    let parentPosition = { x: 0, y: 0 };\r\n    if (node.parentNode) {\r\n        const parentNode = nodeInternals.get(node.parentNode);\r\n        parentPosition = { x: parentNode?.positionAbsolute?.x ?? 0, y: parentNode?.positionAbsolute?.y ?? 0 };\r\n    }\r\n    const positionAbsolute = currentExtent\r\n        ? clampPosition(nextPosition, currentExtent)\r\n        : nextPosition;\r\n    return {\r\n        position: {\r\n            x: positionAbsolute.x - parentPosition.x,\r\n            y: positionAbsolute.y - parentPosition.y,\r\n        },\r\n        positionAbsolute,\r\n    };\r\n}\r\n// returns two params:\r\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\r\n// 2. array of selected nodes (for multi selections)\r\nfunction getEventHandlerParams({ nodeId, dragItems, nodeInternals, }) {\r\n    const extentedDragItems = dragItems.map((n) => {\r\n        const node = nodeInternals.get(n.id);\r\n        return {\r\n            ...node,\r\n            position: n.position,\r\n            positionAbsolute: n.positionAbsolute,\r\n        };\r\n    });\r\n    return [nodeId ? extentedDragItems.find((n) => n.id === nodeId) : extentedDragItems[0], extentedDragItems];\r\n}\n\nconst getHandleBounds = (selector, nodeElement, zoom, nodeOrigin) => {\r\n    const handles = nodeElement.querySelectorAll(selector);\r\n    if (!handles || !handles.length) {\r\n        return null;\r\n    }\r\n    const handlesArray = Array.from(handles);\r\n    const nodeBounds = nodeElement.getBoundingClientRect();\r\n    const nodeOffset = {\r\n        x: nodeBounds.width * nodeOrigin[0],\r\n        y: nodeBounds.height * nodeOrigin[1],\r\n    };\r\n    return handlesArray.map((handle) => {\r\n        const handleBounds = handle.getBoundingClientRect();\r\n        return {\r\n            id: handle.getAttribute('data-handleid'),\r\n            position: handle.getAttribute('data-handlepos'),\r\n            x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\r\n            y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom,\r\n            ...getDimensions(handle),\r\n        };\r\n    });\r\n};\r\nfunction getMouseHandler(id, getState, handler) {\r\n    return handler === undefined\r\n        ? handler\r\n        : (event) => {\r\n            const node = getState().nodeInternals.get(id);\r\n            handler(event, { ...node });\r\n        };\r\n}\r\n// this handler is called by\r\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\r\n// or\r\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\r\nfunction handleNodeClick({ id, store, unselect = false, }) {\r\n    const { addSelectedNodes, unselectNodesAndEdges, multiSelectionActive, nodeInternals } = store.getState();\r\n    const node = nodeInternals.get(id);\r\n    store.setState({ nodesSelectionActive: false });\r\n    if (!node.selected) {\r\n        addSelectedNodes([id]);\r\n    }\r\n    else if (unselect || (node.selected && multiSelectionActive)) {\r\n        unselectNodesAndEdges({ nodes: [node] });\r\n    }\r\n}\n\nfunction wrapSelectionDragFunc(selectionFunc) {\r\n    return (event, _, nodes) => selectionFunc?.(event, nodes);\r\n}\r\nfunction useDrag({ nodeRef, disabled = false, noDragClassName, handleSelector, nodeId, isSelectable, selectNodesOnDrag, }) {\r\n    const [dragging, setDragging] = useState(false);\r\n    const store = useStoreApi();\r\n    const dragItems = useRef();\r\n    const lastPos = useRef({ x: null, y: null });\r\n    // returns the pointer position projected to the RF coordinate system\r\n    const getPointerPosition = useCallback(({ sourceEvent }) => {\r\n        const { transform, snapGrid, snapToGrid } = store.getState();\r\n        const x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\r\n        const y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\r\n        const pointerPos = {\r\n            x: (x - transform[0]) / transform[2],\r\n            y: (y - transform[1]) / transform[2],\r\n        };\r\n        // we need the snapped position in order to be able to skip unnecessary drag events\r\n        return {\r\n            xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\r\n            ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y,\r\n            ...pointerPos,\r\n        };\r\n    }, []);\r\n    useEffect(() => {\r\n        if (nodeRef?.current) {\r\n            const selection = select(nodeRef.current);\r\n            if (disabled) {\r\n                selection.on('.drag', null);\r\n            }\r\n            else {\r\n                const dragHandler = drag()\r\n                    .on('start', (event) => {\r\n                    const { nodeInternals, multiSelectionActive, unselectNodesAndEdges, onNodeDragStart, onSelectionDragStart, } = store.getState();\r\n                    const onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\r\n                    if (!selectNodesOnDrag && !multiSelectionActive && nodeId) {\r\n                        if (!nodeInternals.get(nodeId)?.selected) {\r\n                            // we need to reset selected nodes when selectNodesOnDrag=false\r\n                            unselectNodesAndEdges();\r\n                        }\r\n                    }\r\n                    if (nodeId && isSelectable && selectNodesOnDrag) {\r\n                        handleNodeClick({\r\n                            id: nodeId,\r\n                            store,\r\n                        });\r\n                    }\r\n                    const pointerPos = getPointerPosition(event);\r\n                    lastPos.current = pointerPos;\r\n                    dragItems.current = getDragItems(nodeInternals, pointerPos, nodeId);\r\n                    if (onStart && dragItems.current) {\r\n                        const [currentNode, nodes] = getEventHandlerParams({\r\n                            nodeId,\r\n                            dragItems: dragItems.current,\r\n                            nodeInternals,\r\n                        });\r\n                        onStart(event.sourceEvent, currentNode, nodes);\r\n                    }\r\n                })\r\n                    .on('drag', (event) => {\r\n                    const { updateNodePositions, nodeInternals, nodeExtent, onNodeDrag, onSelectionDrag, snapGrid, snapToGrid, } = store.getState();\r\n                    const pointerPos = getPointerPosition(event);\r\n                    // skip events without movement\r\n                    if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) &&\r\n                        dragItems.current) {\r\n                        lastPos.current = {\r\n                            x: pointerPos.xSnapped,\r\n                            y: pointerPos.ySnapped,\r\n                        };\r\n                        dragItems.current = dragItems.current.map((n) => {\r\n                            const nextPosition = { x: pointerPos.x - n.distance.x, y: pointerPos.y - n.distance.y };\r\n                            if (snapToGrid) {\r\n                                nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\r\n                                nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\r\n                            }\r\n                            const updatedPos = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent);\r\n                            n.position = updatedPos.position;\r\n                            n.positionAbsolute = updatedPos.positionAbsolute;\r\n                            return n;\r\n                        });\r\n                        const onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\r\n                        updateNodePositions(dragItems.current, true, true);\r\n                        setDragging(true);\r\n                        if (onDrag) {\r\n                            const [currentNode, nodes] = getEventHandlerParams({\r\n                                nodeId,\r\n                                dragItems: dragItems.current,\r\n                                nodeInternals,\r\n                            });\r\n                            onDrag(event.sourceEvent, currentNode, nodes);\r\n                        }\r\n                    }\r\n                })\r\n                    .on('end', (event) => {\r\n                    setDragging(false);\r\n                    if (dragItems.current) {\r\n                        const { updateNodePositions, nodeInternals, onNodeDragStop, onSelectionDragStop } = store.getState();\r\n                        const onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\r\n                        updateNodePositions(dragItems.current, false, false);\r\n                        if (onStop) {\r\n                            const [currentNode, nodes] = getEventHandlerParams({\r\n                                nodeId,\r\n                                dragItems: dragItems.current,\r\n                                nodeInternals,\r\n                            });\r\n                            onStop(event.sourceEvent, currentNode, nodes);\r\n                        }\r\n                    }\r\n                })\r\n                    .filter((event) => {\r\n                    const target = event.target;\r\n                    const isDraggable = !event.button &&\r\n                        (!noDragClassName || !hasSelector(target, `.${noDragClassName}`, nodeRef)) &&\r\n                        (!handleSelector || hasSelector(target, handleSelector, nodeRef));\r\n                    return isDraggable;\r\n                });\r\n                selection.call(dragHandler);\r\n                return () => {\r\n                    selection.on('.drag', null);\r\n                };\r\n            }\r\n        }\r\n    }, [\r\n        nodeRef,\r\n        disabled,\r\n        noDragClassName,\r\n        handleSelector,\r\n        isSelectable,\r\n        store,\r\n        nodeId,\r\n        selectNodesOnDrag,\r\n        getPointerPosition,\r\n    ]);\r\n    return dragging;\r\n}\n\nfunction useUpdateNodePositions() {\r\n    const store = useStoreApi();\r\n    const updatePositions = useCallback((positionDiff) => {\r\n        const { nodeInternals, nodeExtent, updateNodePositions } = store.getState();\r\n        const selectedNodes = Array.from(nodeInternals.values()).filter((n) => n.selected);\r\n        const nodeUpdates = selectedNodes.map((n) => {\r\n            if (n.positionAbsolute) {\r\n                const updatedPos = calcNextPosition(n, { x: n.positionAbsolute.x + positionDiff.x, y: n.positionAbsolute.y + positionDiff.y }, nodeInternals, nodeExtent);\r\n                n.position = updatedPos.position;\r\n                n.positionAbsolute = updatedPos.positionAbsolute;\r\n            }\r\n            return n;\r\n        });\r\n        updateNodePositions(nodeUpdates, true, true);\r\n    }, []);\r\n    return updatePositions;\r\n}\n\nconst arrowKeyDiffs = {\r\n    ArrowUp: { x: 0, y: -10 },\r\n    ArrowDown: { x: 0, y: 10 },\r\n    ArrowLeft: { x: -10, y: 0 },\r\n    ArrowRight: { x: 10, y: 0 },\r\n};\r\nvar wrapNode = (NodeComponent) => {\r\n    const NodeWrapper = ({ id, type, data, xPos, yPos, xPosOrigin, yPosOrigin, selected, onClick, onMouseEnter, onMouseMove, onMouseLeave, onContextMenu, onDoubleClick, style, className, isDraggable, isSelectable, isConnectable, selectNodesOnDrag, sourcePosition, targetPosition, hidden, resizeObserver, dragHandle, zIndex, isParent, noDragClassName, noPanClassName, initialized, disableKeyboardA11y, ariaLabel, rfId, }) => {\r\n        const store = useStoreApi();\r\n        const nodeRef = useRef(null);\r\n        const prevSourcePosition = useRef(sourcePosition);\r\n        const prevTargetPosition = useRef(targetPosition);\r\n        const prevType = useRef(type);\r\n        const hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\r\n        const updatePositions = useUpdateNodePositions();\r\n        const onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\r\n        const onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\r\n        const onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\r\n        const onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\r\n        const onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\r\n        const onSelectNodeHandler = (event) => {\r\n            if (isSelectable && (!selectNodesOnDrag || !isDraggable)) {\r\n                // this handler gets called within the drag start event when selectNodesOnDrag=true\r\n                handleNodeClick({\r\n                    id,\r\n                    store,\r\n                });\r\n            }\r\n            if (onClick) {\r\n                const node = store.getState().nodeInternals.get(id);\r\n                onClick(event, { ...node });\r\n            }\r\n        };\r\n        const onKeyDown = (event) => {\r\n            if (elementSelectionKeys.includes(event.key) && isSelectable) {\r\n                const unselect = event.key === 'Escape';\r\n                if (unselect) {\r\n                    nodeRef.current?.blur();\r\n                }\r\n                handleNodeClick({\r\n                    id,\r\n                    store,\r\n                    unselect,\r\n                });\r\n            }\r\n            else if (selected && Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\r\n                store.setState({\r\n                    ariaLiveMessage: `Moved selected node ten pixels ${event.key\r\n                        .replace('Arrow', '')\r\n                        .toLowerCase()}. New position, x: ${~~xPos}, y: ${~~yPos}`,\r\n                });\r\n                updatePositions(arrowKeyDiffs[event.key]);\r\n            }\r\n        };\r\n        useEffect(() => {\r\n            if (nodeRef.current && !hidden) {\r\n                const currNode = nodeRef.current;\r\n                resizeObserver?.observe(currNode);\r\n                return () => resizeObserver?.unobserve(currNode);\r\n            }\r\n        }, [hidden]);\r\n        useEffect(() => {\r\n            // when the user programmatically changes the source or handle position, we re-initialize the node\r\n            const typeChanged = prevType.current !== type;\r\n            const sourcePosChanged = prevSourcePosition.current !== sourcePosition;\r\n            const targetPosChanged = prevTargetPosition.current !== targetPosition;\r\n            if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\r\n                if (typeChanged) {\r\n                    prevType.current = type;\r\n                }\r\n                if (sourcePosChanged) {\r\n                    prevSourcePosition.current = sourcePosition;\r\n                }\r\n                if (targetPosChanged) {\r\n                    prevTargetPosition.current = targetPosition;\r\n                }\r\n                store.getState().updateNodeDimensions([{ id, nodeElement: nodeRef.current, forceUpdate: true }]);\r\n            }\r\n        }, [id, type, sourcePosition, targetPosition]);\r\n        const dragging = useDrag({\r\n            nodeRef,\r\n            disabled: hidden || !isDraggable,\r\n            noDragClassName,\r\n            handleSelector: dragHandle,\r\n            nodeId: id,\r\n            isSelectable,\r\n            selectNodesOnDrag,\r\n        });\r\n        if (hidden) {\r\n            return null;\r\n        }\r\n        return (jsx(\"div\", { className: cc([\r\n                'react-flow__node',\r\n                `react-flow__node-${type}`,\r\n                className,\r\n                {\r\n                    selected,\r\n                    selectable: isSelectable,\r\n                    parent: isParent,\r\n                    dragging,\r\n                    [noPanClassName]: isDraggable,\r\n                },\r\n            ]), ref: nodeRef, style: {\r\n                zIndex,\r\n                transform: `translate(${xPosOrigin}px,${yPosOrigin}px)`,\r\n                pointerEvents: hasPointerEvents ? 'all' : 'none',\r\n                visibility: initialized ? 'visible' : 'hidden',\r\n                ...style,\r\n            }, \"data-id\": id, \"data-testid\": `rf__node-${id}`, onMouseEnter: onMouseEnterHandler, onMouseMove: onMouseMoveHandler, onMouseLeave: onMouseLeaveHandler, onContextMenu: onContextMenuHandler, onClick: onSelectNodeHandler, onDoubleClick: onDoubleClickHandler, onKeyDown: disableKeyboardA11y ? undefined : onKeyDown, tabIndex: disableKeyboardA11y ? undefined : 0, role: disableKeyboardA11y ? undefined : 'button', \"aria-describedby\": disableKeyboardA11y ? undefined : `${ARIA_NODE_DESC_KEY}-${rfId}`, \"aria-label\": ariaLabel, children: jsx(Provider, { value: id, children: jsx(NodeComponent, { id: id, data: data, type: type, xPos: xPos, yPos: yPos, selected: selected, isConnectable: isConnectable, sourcePosition: sourcePosition, targetPosition: targetPosition, dragging: dragging, dragHandle: dragHandle, zIndex: zIndex }) }) }));\r\n    };\r\n    NodeWrapper.displayName = 'NodeWrapper';\r\n    return memo(NodeWrapper);\r\n};\n\nconst selector$7 = (s) => ({\r\n    transformString: `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`,\r\n    userSelectionActive: s.userSelectionActive,\r\n    ...getRectOfNodes(Array.from(s.nodeInternals.values()).filter((n) => n.selected)),\r\n});\r\nconst bboxSelector = (s) => {\r\n    const selectedNodes = Array.from(s.nodeInternals.values()).filter((n) => n.selected);\r\n    return getRectOfNodes(selectedNodes);\r\n};\r\nfunction NodesSelection({ onSelectionContextMenu, noPanClassName, disableKeyboardA11y }) {\r\n    const store = useStoreApi();\r\n    const { transformString, userSelectionActive } = useStore(selector$7, shallow);\r\n    const { width, height, x: left, y: top } = useStore(bboxSelector, shallow);\r\n    const updatePositions = useUpdateNodePositions();\r\n    const nodeRef = useRef(null);\r\n    useEffect(() => {\r\n        if (!disableKeyboardA11y) {\r\n            nodeRef.current?.focus();\r\n        }\r\n    }, [disableKeyboardA11y]);\r\n    useDrag({\r\n        nodeRef,\r\n    });\r\n    if (userSelectionActive || !width || !height) {\r\n        return null;\r\n    }\r\n    const onContextMenu = onSelectionContextMenu\r\n        ? (event) => {\r\n            const selectedNodes = Array.from(store.getState().nodeInternals.values()).filter((n) => n.selected);\r\n            onSelectionContextMenu(event, selectedNodes);\r\n        }\r\n        : undefined;\r\n    const onKeyDown = (event) => {\r\n        if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\r\n            updatePositions(arrowKeyDiffs[event.key]);\r\n        }\r\n    };\r\n    return (jsx(\"div\", { className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]), style: {\r\n            transform: transformString,\r\n        }, children: jsx(\"div\", { ref: nodeRef, className: \"react-flow__nodesselection-rect\", onContextMenu: onContextMenu, tabIndex: disableKeyboardA11y ? undefined : -1, onKeyDown: disableKeyboardA11y ? undefined : onKeyDown, style: {\r\n                width,\r\n                height,\r\n                top,\r\n                left,\r\n            } }) }));\r\n}\r\nvar NodesSelection$1 = memo(NodesSelection);\n\nconst selector$6 = (s) => s.paneDragging;\r\nfunction Pane({ onClick, onMouseEnter, onMouseMove, onMouseLeave, onContextMenu, onWheel }) {\r\n    const dragging = useStore(selector$6);\r\n    return (jsx(\"div\", { className: cc(['react-flow__pane', { dragging }]), onClick: onClick, onMouseEnter: onMouseEnter, onMouseMove: onMouseMove, onMouseLeave: onMouseLeave, onContextMenu: onContextMenu, onWheel: onWheel, style: containerStyle }));\r\n}\n\nconst selector$5 = (s) => s.nodesSelectionActive;\r\nconst FlowRenderer = ({ children, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneContextMenu, onPaneScroll, deleteKeyCode, onMove, onMoveStart, onMoveEnd, selectionKeyCode, multiSelectionKeyCode, zoomActivationKeyCode, elementsSelectable, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, onSelectionContextMenu, noWheelClassName, noPanClassName, disableKeyboardA11y, }) => {\r\n    const store = useStoreApi();\r\n    const nodesSelectionActive = useStore(selector$5);\r\n    const selectionKeyPressed = useKeyPress(selectionKeyCode);\r\n    useGlobalKeyHandler({ deleteKeyCode, multiSelectionKeyCode });\r\n    const onClick = (event) => {\r\n        onPaneClick?.(event);\r\n        store.getState().resetSelectedElements();\r\n        store.setState({ nodesSelectionActive: false });\r\n    };\r\n    const onContextMenu = onPaneContextMenu ? (event) => onPaneContextMenu(event) : undefined;\r\n    const onWheel = onPaneScroll ? (event) => onPaneScroll(event) : undefined;\r\n    return (jsxs(ZoomPane, { onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, selectionKeyPressed: selectionKeyPressed, elementsSelectable: elementsSelectable, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, zoomOnDoubleClick: zoomOnDoubleClick, panOnDrag: panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, zoomActivationKeyCode: zoomActivationKeyCode, preventScrolling: preventScrolling, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, children: [children, jsx(UserSelection, { selectionKeyPressed: selectionKeyPressed }), nodesSelectionActive && (jsx(NodesSelection$1, { onSelectionContextMenu: onSelectionContextMenu, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y })), jsx(Pane, { onClick: onClick, onMouseEnter: onPaneMouseEnter, onMouseMove: onPaneMouseMove, onMouseLeave: onPaneMouseLeave, onContextMenu: onContextMenu, onWheel: onWheel })] }));\r\n};\r\nFlowRenderer.displayName = 'FlowRenderer';\r\nvar FlowRenderer$1 = memo(FlowRenderer);\n\nfunction useVisibleNodes(onlyRenderVisible) {\r\n    const nodes = useStore(useCallback((s) => onlyRenderVisible\r\n        ? getNodesInside(s.nodeInternals, { x: 0, y: 0, width: s.width, height: s.height }, s.transform, true)\r\n        : Array.from(s.nodeInternals.values()), [onlyRenderVisible]));\r\n    return nodes;\r\n}\n\nfunction createNodeTypes(nodeTypes) {\r\n    const standardTypes = {\r\n        input: wrapNode((nodeTypes.input || InputNode$1)),\r\n        default: wrapNode((nodeTypes.default || DefaultNode$1)),\r\n        output: wrapNode((nodeTypes.output || OutputNode$1)),\r\n        group: wrapNode((nodeTypes.group || GroupNode)),\r\n    };\r\n    const wrappedTypes = {};\r\n    const specialTypes = Object.keys(nodeTypes)\r\n        .filter((k) => !['input', 'default', 'output', 'group'].includes(k))\r\n        .reduce((res, key) => {\r\n        res[key] = wrapNode((nodeTypes[key] || DefaultNode$1));\r\n        return res;\r\n    }, wrappedTypes);\r\n    return {\r\n        ...standardTypes,\r\n        ...specialTypes,\r\n    };\r\n}\r\nconst getPositionWithOrigin = ({ x, y, width, height, origin, }) => {\r\n    if (!width || !height) {\r\n        return { x, y };\r\n    }\r\n    if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\r\n        devWarn('nodeOrigin must be between 0 and 1');\r\n        return { x, y };\r\n    }\r\n    return {\r\n        x: x - width * origin[0],\r\n        y: y - height * origin[1],\r\n    };\r\n};\n\nconst selector$4 = (s) => ({\r\n    nodesDraggable: s.nodesDraggable,\r\n    nodesConnectable: s.nodesConnectable,\r\n    elementsSelectable: s.elementsSelectable,\r\n    updateNodeDimensions: s.updateNodeDimensions,\r\n});\r\nconst NodeRenderer = (props) => {\r\n    const { nodesDraggable, nodesConnectable, elementsSelectable, updateNodeDimensions } = useStore(selector$4, shallow);\r\n    const nodes = useVisibleNodes(props.onlyRenderVisibleElements);\r\n    const resizeObserverRef = useRef();\r\n    const resizeObserver = useMemo(() => {\r\n        if (typeof ResizeObserver === 'undefined') {\r\n            return null;\r\n        }\r\n        const observer = new ResizeObserver((entries) => {\r\n            const updates = entries.map((entry) => ({\r\n                id: entry.target.getAttribute('data-id'),\r\n                nodeElement: entry.target,\r\n                forceUpdate: true,\r\n            }));\r\n            updateNodeDimensions(updates);\r\n        });\r\n        resizeObserverRef.current = observer;\r\n        return observer;\r\n    }, []);\r\n    useEffect(() => {\r\n        return () => {\r\n            resizeObserverRef?.current?.disconnect();\r\n        };\r\n    }, []);\r\n    return (jsx(\"div\", { className: \"react-flow__nodes\", style: containerStyle, children: nodes.map((node) => {\r\n            let nodeType = node.type || 'default';\r\n            if (!props.nodeTypes[nodeType]) {\r\n                devWarn(`Node type \"${nodeType}\" not found. Using fallback type \"default\". Help: https://reactflow.dev/error#300`);\r\n                nodeType = 'default';\r\n            }\r\n            const NodeComponent = (props.nodeTypes[nodeType] || props.nodeTypes.default);\r\n            const isDraggable = !!(node.draggable || (nodesDraggable && typeof node.draggable === 'undefined'));\r\n            const isSelectable = !!(node.selectable || (elementsSelectable && typeof node.selectable === 'undefined'));\r\n            const isConnectable = !!(node.connectable || (nodesConnectable && typeof node.connectable === 'undefined'));\r\n            const clampedPosition = props.nodeExtent\r\n                ? clampPosition(node.positionAbsolute, props.nodeExtent)\r\n                : node.positionAbsolute;\r\n            const posX = clampedPosition?.x ?? 0;\r\n            const posY = clampedPosition?.y ?? 0;\r\n            const posOrigin = getPositionWithOrigin({\r\n                x: posX,\r\n                y: posY,\r\n                width: node.width ?? 0,\r\n                height: node.height ?? 0,\r\n                origin: props.nodeOrigin,\r\n            });\r\n            return (jsx(NodeComponent, { id: node.id, className: node.className, style: node.style, type: nodeType, data: node.data, sourcePosition: node.sourcePosition || Position.Bottom, targetPosition: node.targetPosition || Position.Top, hidden: node.hidden, xPos: posX, yPos: posY, xPosOrigin: posOrigin.x, yPosOrigin: posOrigin.y, selectNodesOnDrag: props.selectNodesOnDrag, onClick: props.onNodeClick, onMouseEnter: props.onNodeMouseEnter, onMouseMove: props.onNodeMouseMove, onMouseLeave: props.onNodeMouseLeave, onContextMenu: props.onNodeContextMenu, onDoubleClick: props.onNodeDoubleClick, selected: !!node.selected, isDraggable: isDraggable, isSelectable: isSelectable, isConnectable: isConnectable, resizeObserver: resizeObserver, dragHandle: node.dragHandle, zIndex: node[internalsSymbol]?.z ?? 0, isParent: !!node[internalsSymbol]?.isParent, noDragClassName: props.noDragClassName, noPanClassName: props.noPanClassName, initialized: !!node.width && !!node.height, rfId: props.rfId, disableKeyboardA11y: props.disableKeyboardA11y, ariaLabel: node.ariaLabel }, node.id));\r\n        }) }));\r\n};\r\nNodeRenderer.displayName = 'NodeRenderer';\r\nvar NodeRenderer$1 = memo(NodeRenderer);\n\nconst defaultEdgeTree = [{ level: 0, isMaxLevel: true, edges: [] }];\r\nfunction groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect = false) {\r\n    let maxLevel = -1;\r\n    const levelLookup = edges.reduce((tree, edge) => {\r\n        const hasZIndex = isNumeric(edge.zIndex);\r\n        let z = hasZIndex ? edge.zIndex : 0;\r\n        if (elevateEdgesOnSelect) {\r\n            z = hasZIndex\r\n                ? edge.zIndex\r\n                : Math.max(nodeInternals.get(edge.source)?.[internalsSymbol]?.z || 0, nodeInternals.get(edge.target)?.[internalsSymbol]?.z || 0);\r\n        }\r\n        if (tree[z]) {\r\n            tree[z].push(edge);\r\n        }\r\n        else {\r\n            tree[z] = [edge];\r\n        }\r\n        maxLevel = z > maxLevel ? z : maxLevel;\r\n        return tree;\r\n    }, {});\r\n    const edgeTree = Object.entries(levelLookup).map(([key, edges]) => {\r\n        const level = +key;\r\n        return {\r\n            edges,\r\n            level,\r\n            isMaxLevel: level === maxLevel,\r\n        };\r\n    });\r\n    if (edgeTree.length === 0) {\r\n        return defaultEdgeTree;\r\n    }\r\n    return edgeTree;\r\n}\r\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\r\n    const edges = useStore(useCallback((s) => {\r\n        if (!onlyRenderVisible) {\r\n            return s.edges;\r\n        }\r\n        return s.edges.filter((e) => {\r\n            const sourceNode = nodeInternals.get(e.source);\r\n            const targetNode = nodeInternals.get(e.target);\r\n            return (sourceNode?.width &&\r\n                sourceNode?.height &&\r\n                targetNode?.width &&\r\n                targetNode?.height &&\r\n                isEdgeVisible({\r\n                    sourcePos: sourceNode.positionAbsolute || { x: 0, y: 0 },\r\n                    targetPos: targetNode.positionAbsolute || { x: 0, y: 0 },\r\n                    sourceWidth: sourceNode.width,\r\n                    sourceHeight: sourceNode.height,\r\n                    targetWidth: targetNode.width,\r\n                    targetHeight: targetNode.height,\r\n                    width: s.width,\r\n                    height: s.height,\r\n                    transform: s.transform,\r\n                }));\r\n        });\r\n    }, [onlyRenderVisible, nodeInternals]));\r\n    return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\r\n}\n\nconst oppositePosition = {\r\n    [Position.Left]: Position.Right,\r\n    [Position.Right]: Position.Left,\r\n    [Position.Top]: Position.Bottom,\r\n    [Position.Bottom]: Position.Top,\r\n};\r\nconst ConnectionLine = ({ connectionNodeId, connectionHandleType, connectionLineStyle, connectionLineType = ConnectionLineType.Bezier, isConnectable, CustomConnectionLineComponent, }) => {\r\n    const { fromNode, handleId, toX, toY } = useStore(useCallback((s) => ({\r\n        fromNode: s.nodeInternals.get(connectionNodeId),\r\n        handleId: s.connectionHandleId,\r\n        toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\r\n        toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\r\n    }), [connectionNodeId]), shallow);\r\n    const fromHandleBounds = fromNode?.[internalsSymbol]?.handleBounds;\r\n    if (!fromNode || !isConnectable || !fromHandleBounds?.[connectionHandleType]) {\r\n        return null;\r\n    }\r\n    const handleBound = fromHandleBounds[connectionHandleType];\r\n    const fromHandle = handleId ? handleBound.find((d) => d.id === handleId) : handleBound[0];\r\n    const fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : (fromNode?.width ?? 0) / 2;\r\n    const fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : fromNode?.height ?? 0;\r\n    const fromX = (fromNode?.positionAbsolute?.x || 0) + fromHandleX;\r\n    const fromY = (fromNode?.positionAbsolute?.y || 0) + fromHandleY;\r\n    const fromPosition = fromHandle?.position;\r\n    if (!fromPosition) {\r\n        return null;\r\n    }\r\n    const toPosition = oppositePosition[fromPosition];\r\n    if (CustomConnectionLineComponent) {\r\n        return (jsx(\"g\", { className: \"react-flow__connection\", children: jsx(CustomConnectionLineComponent, { connectionLineType: connectionLineType, connectionLineStyle: connectionLineStyle, fromNode: fromNode, fromHandle: fromHandle, fromX: fromX, fromY: fromY, toX: toX, toY: toY, fromPosition: fromPosition, toPosition: toPosition }) }));\r\n    }\r\n    let dAttr = '';\r\n    const pathParams = {\r\n        sourceX: fromX,\r\n        sourceY: fromY,\r\n        sourcePosition: fromPosition,\r\n        targetX: toX,\r\n        targetY: toY,\r\n        targetPosition: toPosition,\r\n    };\r\n    if (connectionLineType === ConnectionLineType.Bezier) {\r\n        // we assume the destination position is opposite to the source position\r\n        [dAttr] = getBezierPath(pathParams);\r\n    }\r\n    else if (connectionLineType === ConnectionLineType.Step) {\r\n        [dAttr] = getSmoothStepPath({\r\n            ...pathParams,\r\n            borderRadius: 0,\r\n        });\r\n    }\r\n    else if (connectionLineType === ConnectionLineType.SmoothStep) {\r\n        [dAttr] = getSmoothStepPath(pathParams);\r\n    }\r\n    else if (connectionLineType === ConnectionLineType.SimpleBezier) {\r\n        [dAttr] = getSimpleBezierPath(pathParams);\r\n    }\r\n    else {\r\n        dAttr = `M${fromX},${fromY} ${toX},${toY}`;\r\n    }\r\n    return (jsx(\"g\", { className: \"react-flow__connection\", children: jsx(\"path\", { d: dAttr, fill: \"none\", className: \"react-flow__connection-path\", style: connectionLineStyle }) }));\r\n};\r\nConnectionLine.displayName = 'ConnectionLine';\n\nconst ArrowSymbol = ({ color = 'none', strokeWidth = 1 }) => {\r\n    return (jsx(\"polyline\", { stroke: color, strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: strokeWidth, fill: \"none\", points: \"-5,-4 0,0 -5,4\" }));\r\n};\r\nconst ArrowClosedSymbol = ({ color = 'none', strokeWidth = 1 }) => {\r\n    return (jsx(\"polyline\", { stroke: color, strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: strokeWidth, fill: color, points: \"-5,-4 0,0 -5,4 -5,-4\" }));\r\n};\r\nconst MarkerSymbols = {\r\n    [MarkerType.Arrow]: ArrowSymbol,\r\n    [MarkerType.ArrowClosed]: ArrowClosedSymbol,\r\n};\r\nfunction useMarkerSymbol(type) {\r\n    const symbol = useMemo(() => {\r\n        const symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\r\n        if (!symbolExists) {\r\n            devWarn(`Marker type \"${type}\" doesn't exist. Help: https://reactflow.dev/error#900`);\r\n            return null;\r\n        }\r\n        return MarkerSymbols[type];\r\n    }, [type]);\r\n    return symbol;\r\n}\n\nconst Marker = ({ id, type, color, width = 12.5, height = 12.5, markerUnits = 'strokeWidth', strokeWidth, orient = 'auto-start-reverse', }) => {\r\n    const Symbol = useMarkerSymbol(type);\r\n    if (!Symbol) {\r\n        return null;\r\n    }\r\n    return (jsx(\"marker\", { className: \"react-flow__arrowhead\", id: id, markerWidth: `${width}`, markerHeight: `${height}`, viewBox: \"-10 -10 20 20\", markerUnits: markerUnits, orient: orient, refX: \"0\", refY: \"0\", children: jsx(Symbol, { color: color, strokeWidth: strokeWidth }) }));\r\n};\r\nconst markerSelector = ({ defaultColor, rfId }) => (s) => {\r\n    const ids = [];\r\n    return s.edges\r\n        .reduce((markers, edge) => {\r\n        [edge.markerStart, edge.markerEnd].forEach((marker) => {\r\n            if (marker && typeof marker === 'object') {\r\n                const markerId = getMarkerId(marker, rfId);\r\n                if (!ids.includes(markerId)) {\r\n                    markers.push({ id: markerId, color: marker.color || defaultColor, ...marker });\r\n                    ids.push(markerId);\r\n                }\r\n            }\r\n        });\r\n        return markers;\r\n    }, [])\r\n        .sort((a, b) => a.id.localeCompare(b.id));\r\n};\r\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\r\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\r\n// that we can then use for creating our unique marker ids\r\nconst MarkerDefinitions = ({ defaultColor, rfId }) => {\r\n    const markers = useStore(useCallback(markerSelector({ defaultColor, rfId }), [defaultColor, rfId]), \r\n    // the id includes all marker options, so we just need to look at that part of the marker\r\n    (a, b) => !(a.length !== b.length || a.some((m, i) => m.id !== b[i].id)));\r\n    return (jsx(\"defs\", { children: markers.map((marker) => (jsx(Marker, { id: marker.id, type: marker.type, color: marker.color, width: marker.width, height: marker.height, markerUnits: marker.markerUnits, strokeWidth: marker.strokeWidth, orient: marker.orient }, marker.id))) }));\r\n};\r\nMarkerDefinitions.displayName = 'MarkerDefinitions';\r\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\n\nconst selector$3 = (s) => ({\r\n    connectionNodeId: s.connectionNodeId,\r\n    connectionHandleType: s.connectionHandleType,\r\n    nodesConnectable: s.nodesConnectable,\r\n    elementsSelectable: s.elementsSelectable,\r\n    width: s.width,\r\n    height: s.height,\r\n    connectionMode: s.connectionMode,\r\n    nodeInternals: s.nodeInternals,\r\n});\r\nconst EdgeRenderer = (props) => {\r\n    const { connectionNodeId, connectionHandleType, nodesConnectable, elementsSelectable, width, height, connectionMode, nodeInternals, } = useStore(selector$3, shallow);\r\n    const edgeTree = useVisibleEdges(props.onlyRenderVisibleElements, nodeInternals, props.elevateEdgesOnSelect);\r\n    if (!width) {\r\n        return null;\r\n    }\r\n    const { connectionLineType, defaultMarkerColor, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, } = props;\r\n    const renderConnectionLine = connectionNodeId && connectionHandleType;\r\n    return (jsxs(Fragment, { children: [edgeTree.map(({ level, edges, isMaxLevel }) => (jsxs(\"svg\", { style: { zIndex: level }, width: width, height: height, className: \"react-flow__edges react-flow__container\", children: [isMaxLevel && jsx(MarkerDefinitions$1, { defaultColor: defaultMarkerColor, rfId: props.rfId }), jsx(\"g\", { children: edges.map((edge) => {\r\n                            const [sourceNodeRect, sourceHandleBounds, sourceIsValid] = getNodeData(nodeInternals.get(edge.source));\r\n                            const [targetNodeRect, targetHandleBounds, targetIsValid] = getNodeData(nodeInternals.get(edge.target));\r\n                            if (!sourceIsValid || !targetIsValid) {\r\n                                return null;\r\n                            }\r\n                            let edgeType = edge.type || 'default';\r\n                            if (!props.edgeTypes[edgeType]) {\r\n                                devWarn(`Edge type \"${edgeType}\" not found. Using fallback type \"default\". Help: https://reactflow.dev/error#300`);\r\n                                edgeType = 'default';\r\n                            }\r\n                            const EdgeComponent = props.edgeTypes[edgeType] || props.edgeTypes.default;\r\n                            // when connection type is loose we can define all handles as sources\r\n                            const targetNodeHandles = connectionMode === ConnectionMode.Strict\r\n                                ? targetHandleBounds.target\r\n                                : targetHandleBounds.target || targetHandleBounds.source;\r\n                            const sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle || null);\r\n                            const targetHandle = getHandle(targetNodeHandles, edge.targetHandle || null);\r\n                            const sourcePosition = sourceHandle?.position || Position.Bottom;\r\n                            const targetPosition = targetHandle?.position || Position.Top;\r\n                            if (!sourceHandle || !targetHandle) {\r\n                                devWarn(`Couldn't create edge for ${!sourceHandle ? 'source' : 'target'} handle id: ${!sourceHandle ? edge.sourceHandle : edge.targetHandle}; edge id: ${edge.id}. Help: https://reactflow.dev/error#800`);\r\n                                return null;\r\n                            }\r\n                            const { sourceX, sourceY, targetX, targetY } = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition);\r\n                            return (jsx(EdgeComponent, { id: edge.id, className: cc([edge.className, props.noPanClassName]), type: edgeType, data: edge.data, selected: !!edge.selected, animated: !!edge.animated, hidden: !!edge.hidden, label: edge.label, labelStyle: edge.labelStyle, labelShowBg: edge.labelShowBg, labelBgStyle: edge.labelBgStyle, labelBgPadding: edge.labelBgPadding, labelBgBorderRadius: edge.labelBgBorderRadius, style: edge.style, source: edge.source, target: edge.target, sourceHandleId: edge.sourceHandle, targetHandleId: edge.targetHandle, markerEnd: edge.markerEnd, markerStart: edge.markerStart, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, elementsSelectable: elementsSelectable, onEdgeUpdate: props.onEdgeUpdate, onContextMenu: props.onEdgeContextMenu, onMouseEnter: props.onEdgeMouseEnter, onMouseMove: props.onEdgeMouseMove, onMouseLeave: props.onEdgeMouseLeave, onClick: props.onEdgeClick, edgeUpdaterRadius: props.edgeUpdaterRadius, onEdgeDoubleClick: props.onEdgeDoubleClick, onEdgeUpdateStart: props.onEdgeUpdateStart, onEdgeUpdateEnd: props.onEdgeUpdateEnd, rfId: props.rfId, ariaLabel: edge.ariaLabel, disableKeyboardA11y: props.disableKeyboardA11y, pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined, interactionWidth: edge.interactionWidth }, edge.id));\r\n                        }) })] }, level))), renderConnectionLine && (jsx(\"svg\", { style: connectionLineContainerStyle, width: width, height: height, className: \"react-flow__edges react-flow__connectionline react-flow__container\", children: jsx(ConnectionLine, { connectionNodeId: connectionNodeId, connectionHandleType: connectionHandleType, connectionLineStyle: connectionLineStyle, connectionLineType: connectionLineType, isConnectable: nodesConnectable, CustomConnectionLineComponent: connectionLineComponent }) }))] }));\r\n};\r\nEdgeRenderer.displayName = 'EdgeRenderer';\r\nvar EdgeRenderer$1 = memo(EdgeRenderer);\n\nconst selector$2 = (s) => `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`;\r\nfunction Viewport({ children }) {\r\n    const transform = useStore(selector$2);\r\n    return (jsx(\"div\", { className: \"react-flow__viewport react-flow__container\", style: { transform }, children: children }));\r\n}\n\nfunction calculateXYZPosition(node, nodeInternals, parentNodes, result) {\r\n    if (!node.parentNode) {\r\n        return result;\r\n    }\r\n    const parentNode = nodeInternals.get(node.parentNode);\r\n    return calculateXYZPosition(parentNode, nodeInternals, parentNodes, {\r\n        x: (result.x ?? 0) + (parentNode.position?.x ?? 0),\r\n        y: (result.y ?? 0) + (parentNode.position?.y ?? 0),\r\n        z: (parentNode[internalsSymbol]?.z ?? 0) > (result.z ?? 0) ? parentNode[internalsSymbol]?.z ?? 0 : result.z ?? 0,\r\n    });\r\n}\r\nfunction createNodeInternals(nodes, nodeInternals) {\r\n    const nextNodeInternals = new Map();\r\n    const parentNodes = {};\r\n    nodes.forEach((node) => {\r\n        const z = isNumeric(node.zIndex) ? node.zIndex : node.selected ? 1000 : 0;\r\n        const currInternals = nodeInternals.get(node.id);\r\n        const internals = {\r\n            width: currInternals?.width,\r\n            height: currInternals?.height,\r\n            ...node,\r\n            positionAbsolute: {\r\n                x: node.position.x,\r\n                y: node.position.y,\r\n            },\r\n        };\r\n        if (node.parentNode) {\r\n            internals.parentNode = node.parentNode;\r\n            parentNodes[node.parentNode] = true;\r\n        }\r\n        Object.defineProperty(internals, internalsSymbol, {\r\n            enumerable: false,\r\n            value: {\r\n                handleBounds: currInternals?.[internalsSymbol]?.handleBounds,\r\n                z,\r\n            },\r\n        });\r\n        nextNodeInternals.set(node.id, internals);\r\n    });\r\n    nextNodeInternals.forEach((node) => {\r\n        if (node.parentNode && !nextNodeInternals.has(node.parentNode)) {\r\n            throw new Error(`Parent node ${node.parentNode} not found`);\r\n        }\r\n        if (node.parentNode || parentNodes[node.id]) {\r\n            const { x, y, z } = calculateXYZPosition(node, nextNodeInternals, parentNodes, {\r\n                ...node.position,\r\n                z: node[internalsSymbol]?.z ?? 0,\r\n            });\r\n            node.positionAbsolute = {\r\n                x,\r\n                y,\r\n            };\r\n            node[internalsSymbol].z = z;\r\n            if (parentNodes[node.id]) {\r\n                node[internalsSymbol].isParent = true;\r\n            }\r\n        }\r\n    });\r\n    return nextNodeInternals;\r\n}\r\nfunction fitView(get, options = {}) {\r\n    const { nodeInternals, width, height, minZoom, maxZoom, d3Zoom, d3Selection, fitViewOnInitDone, fitViewOnInit } = get();\r\n    if ((options.initial && !fitViewOnInitDone && fitViewOnInit) || !options.initial) {\r\n        if (d3Zoom && d3Selection) {\r\n            const nodes = Array.from(nodeInternals.values()).filter((n) => options.includeHiddenNodes ? n.width && n.height : !n.hidden);\r\n            const nodesInitialized = nodes.every((n) => n.width && n.height);\r\n            if (nodes.length > 0 && nodesInitialized) {\r\n                const bounds = getRectOfNodes(nodes);\r\n                const [x, y, zoom] = getTransformForBounds(bounds, width, height, options.minZoom ?? minZoom, options.maxZoom ?? maxZoom, options.padding ?? 0.1);\r\n                const nextTransform = zoomIdentity.translate(x, y).scale(zoom);\r\n                if (typeof options.duration === 'number' && options.duration > 0) {\r\n                    d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\r\n                }\r\n                else {\r\n                    d3Zoom.transform(d3Selection, nextTransform);\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\r\n    nodeChanges.forEach((change) => {\r\n        const node = nodeInternals.get(change.id);\r\n        if (node) {\r\n            nodeInternals.set(node.id, {\r\n                ...node,\r\n                [internalsSymbol]: node[internalsSymbol],\r\n                selected: change.selected,\r\n            });\r\n        }\r\n    });\r\n    return new Map(nodeInternals);\r\n}\r\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\r\n    return edges.map((e) => {\r\n        const change = edgeChanges.find((change) => change.id === e.id);\r\n        if (change) {\r\n            e.selected = change.selected;\r\n        }\r\n        return e;\r\n    });\r\n}\r\nfunction updateNodesAndEdgesSelections({ changedNodes, changedEdges, get, set }) {\r\n    const { nodeInternals, edges, onNodesChange, onEdgesChange, hasDefaultNodes, hasDefaultEdges } = get();\r\n    if (changedNodes?.length) {\r\n        if (hasDefaultNodes) {\r\n            set({ nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals) });\r\n        }\r\n        onNodesChange?.(changedNodes);\r\n    }\r\n    if (changedEdges?.length) {\r\n        if (hasDefaultEdges) {\r\n            set({ edges: handleControlledEdgeSelectionChange(changedEdges, edges) });\r\n        }\r\n        onEdgesChange?.(changedEdges);\r\n    }\r\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\r\nconst noop = () => { };\r\nconst initialViewportHelper = {\r\n    zoomIn: noop,\r\n    zoomOut: noop,\r\n    zoomTo: noop,\r\n    getZoom: () => 1,\r\n    setViewport: noop,\r\n    getViewport: () => ({ x: 0, y: 0, zoom: 1 }),\r\n    fitView: noop,\r\n    setCenter: noop,\r\n    fitBounds: noop,\r\n    project: (position) => position,\r\n    viewportInitialized: false,\r\n};\r\nconst selector$1 = (s) => ({\r\n    d3Zoom: s.d3Zoom,\r\n    d3Selection: s.d3Selection,\r\n});\r\nconst useViewportHelper = () => {\r\n    const store = useStoreApi();\r\n    const { d3Zoom, d3Selection } = useStore(selector$1, shallow);\r\n    const viewportHelperFunctions = useMemo(() => {\r\n        if (d3Selection && d3Zoom) {\r\n            return {\r\n                zoomIn: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1.2),\r\n                zoomOut: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1 / 1.2),\r\n                zoomTo: (zoomLevel, options) => d3Zoom.scaleTo(getD3Transition(d3Selection, options?.duration), zoomLevel),\r\n                getZoom: () => store.getState().transform[2],\r\n                setViewport: (transform, options) => {\r\n                    const [x, y, zoom] = store.getState().transform;\r\n                    const nextTransform = zoomIdentity\r\n                        .translate(transform.x ?? x, transform.y ?? y)\r\n                        .scale(transform.zoom ?? zoom);\r\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), nextTransform);\r\n                },\r\n                getViewport: () => {\r\n                    const [x, y, zoom] = store.getState().transform;\r\n                    return { x, y, zoom };\r\n                },\r\n                fitView: (options) => fitView(store.getState, options),\r\n                setCenter: (x, y, options) => {\r\n                    const { width, height, maxZoom } = store.getState();\r\n                    const nextZoom = typeof options?.zoom !== 'undefined' ? options.zoom : maxZoom;\r\n                    const centerX = width / 2 - x * nextZoom;\r\n                    const centerY = height / 2 - y * nextZoom;\r\n                    const transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\r\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\r\n                },\r\n                fitBounds: (bounds, options) => {\r\n                    const { width, height, minZoom, maxZoom } = store.getState();\r\n                    const [x, y, zoom] = getTransformForBounds(bounds, width, height, minZoom, maxZoom, options?.padding ?? 0.1);\r\n                    const transform = zoomIdentity.translate(x, y).scale(zoom);\r\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\r\n                },\r\n                project: (position) => {\r\n                    const { transform, snapToGrid, snapGrid } = store.getState();\r\n                    return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\r\n                },\r\n                viewportInitialized: true,\r\n            };\r\n        }\r\n        return initialViewportHelper;\r\n    }, [d3Zoom, d3Selection]);\r\n    return viewportHelperFunctions;\r\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\r\nfunction useReactFlow() {\r\n    const viewportHelper = useViewportHelper();\r\n    const store = useStoreApi();\r\n    const getNodes = useCallback(() => {\r\n        const { nodeInternals } = store.getState();\r\n        const nodes = Array.from(nodeInternals.values());\r\n        return nodes.map((n) => ({ ...n }));\r\n    }, []);\r\n    const getNode = useCallback((id) => {\r\n        const { nodeInternals } = store.getState();\r\n        return nodeInternals.get(id);\r\n    }, []);\r\n    const getEdges = useCallback(() => {\r\n        const { edges = [] } = store.getState();\r\n        return edges.map((e) => ({ ...e }));\r\n    }, []);\r\n    const getEdge = useCallback((id) => {\r\n        const { edges = [] } = store.getState();\r\n        return edges.find((e) => e.id === id);\r\n    }, []);\r\n    const setNodes = useCallback((payload) => {\r\n        const { nodeInternals, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\r\n        const nodes = Array.from(nodeInternals.values());\r\n        const nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\r\n        if (hasDefaultNodes) {\r\n            setNodes(nextNodes);\r\n        }\r\n        else if (onNodesChange) {\r\n            const changes = nextNodes.length === 0\r\n                ? nodes.map((node) => ({ type: 'remove', id: node.id }))\r\n                : nextNodes.map((node) => ({ item: node, type: 'reset' }));\r\n            onNodesChange(changes);\r\n        }\r\n    }, []);\r\n    const setEdges = useCallback((payload) => {\r\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\r\n        const nextEdges = typeof payload === 'function' ? payload(edges) : payload;\r\n        if (hasDefaultEdges) {\r\n            setEdges(nextEdges);\r\n        }\r\n        else if (onEdgesChange) {\r\n            const changes = nextEdges.length === 0\r\n                ? edges.map((edge) => ({ type: 'remove', id: edge.id }))\r\n                : nextEdges.map((edge) => ({ item: edge, type: 'reset' }));\r\n            onEdgesChange(changes);\r\n        }\r\n    }, []);\r\n    const addNodes = useCallback((payload) => {\r\n        const nodes = Array.isArray(payload) ? payload : [payload];\r\n        const { nodeInternals, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\r\n        if (hasDefaultNodes) {\r\n            const currentNodes = Array.from(nodeInternals.values());\r\n            const nextNodes = [...currentNodes, ...nodes];\r\n            setNodes(nextNodes);\r\n        }\r\n        else if (onNodesChange) {\r\n            const changes = nodes.map((node) => ({ item: node, type: 'add' }));\r\n            onNodesChange(changes);\r\n        }\r\n    }, []);\r\n    const addEdges = useCallback((payload) => {\r\n        const nextEdges = Array.isArray(payload) ? payload : [payload];\r\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\r\n        if (hasDefaultEdges) {\r\n            setEdges([...edges, ...nextEdges]);\r\n        }\r\n        else if (onEdgesChange) {\r\n            const changes = nextEdges.map((edge) => ({ item: edge, type: 'add' }));\r\n            onEdgesChange(changes);\r\n        }\r\n    }, []);\r\n    const toObject = useCallback(() => {\r\n        const { nodeInternals, edges = [], transform } = store.getState();\r\n        const nodes = Array.from(nodeInternals.values());\r\n        const [x, y, zoom] = transform;\r\n        return {\r\n            nodes: nodes.map((n) => ({ ...n })),\r\n            edges: edges.map((e) => ({ ...e })),\r\n            viewport: {\r\n                x,\r\n                y,\r\n                zoom,\r\n            },\r\n        };\r\n    }, []);\r\n    return useMemo(() => {\r\n        return {\r\n            ...viewportHelper,\r\n            getNodes,\r\n            getNode,\r\n            getEdges,\r\n            getEdge,\r\n            setNodes,\r\n            setEdges,\r\n            addNodes,\r\n            addEdges,\r\n            toObject,\r\n        };\r\n    }, [viewportHelper, getNodes, getNode, getEdges, getEdge, setNodes, setEdges, addNodes, addEdges, toObject]);\r\n}\n\nfunction useOnInitHandler(onInit) {\r\n    const rfInstance = useReactFlow();\r\n    const isInitialized = useRef(false);\r\n    useEffect(() => {\r\n        if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\r\n            setTimeout(() => onInit(rfInstance), 1);\r\n            isInitialized.current = true;\r\n        }\r\n    }, [onInit, rfInstance.viewportInitialized]);\r\n}\n\nconst GraphView = ({ nodeTypes, edgeTypes, onMove, onMoveStart, onMoveEnd, onInit, onNodeClick, onEdgeClick, onNodeDoubleClick, onEdgeDoubleClick, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onSelectionContextMenu, connectionLineType, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, selectionKeyCode, multiSelectionKeyCode, zoomActivationKeyCode, deleteKeyCode, onlyRenderVisibleElements, elementsSelectable, selectNodesOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, defaultMarkerColor, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, edgeUpdaterRadius, onEdgeUpdateStart, onEdgeUpdateEnd, noDragClassName, noWheelClassName, noPanClassName, elevateEdgesOnSelect, disableKeyboardA11y, nodeOrigin, nodeExtent, rfId, }) => {\r\n    useOnInitHandler(onInit);\r\n    return (jsx(FlowRenderer$1, { onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, deleteKeyCode: deleteKeyCode, selectionKeyCode: selectionKeyCode, multiSelectionKeyCode: multiSelectionKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, elementsSelectable: elementsSelectable, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, onSelectionContextMenu: onSelectionContextMenu, preventScrolling: preventScrolling, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y, children: jsxs(Viewport, { children: [jsx(EdgeRenderer$1, { edgeTypes: edgeTypes, onEdgeClick: onEdgeClick, onEdgeDoubleClick: onEdgeDoubleClick, connectionLineType: connectionLineType, connectionLineStyle: connectionLineStyle, connectionLineComponent: connectionLineComponent, connectionLineContainerStyle: connectionLineContainerStyle, onEdgeUpdate: onEdgeUpdate, onlyRenderVisibleElements: onlyRenderVisibleElements, onEdgeContextMenu: onEdgeContextMenu, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noPanClassName: noPanClassName, elevateEdgesOnSelect: !!elevateEdgesOnSelect, disableKeyboardA11y: disableKeyboardA11y, rfId: rfId }), jsx(NodeRenderer$1, { nodeTypes: nodeTypes, onNodeClick: onNodeClick, onNodeDoubleClick: onNodeDoubleClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, selectNodesOnDrag: selectNodesOnDrag, onlyRenderVisibleElements: onlyRenderVisibleElements, noPanClassName: noPanClassName, noDragClassName: noDragClassName, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent, rfId: rfId })] }) }));\r\n};\r\nGraphView.displayName = 'GraphView';\r\nvar GraphView$1 = memo(GraphView);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\r\n    const typesKeysRef = useRef(null);\r\n    const typesParsed = useMemo(() => {\r\n        if (process.env.NODE_ENV === 'development') {\r\n            const typeKeys = Object.keys(nodeOrEdgeTypes);\r\n            if (shallow(typesKeysRef.current, typeKeys)) {\r\n                devWarn(\"It looks like you have created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them. Help: https://reactflow.dev/error#200\");\r\n            }\r\n            typesKeysRef.current = typeKeys;\r\n        }\r\n        return createTypes(nodeOrEdgeTypes);\r\n    }, [nodeOrEdgeTypes]);\r\n    return typesParsed;\r\n}\n\nconst infiniteExtent = [\r\n    [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],\r\n    [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY],\r\n];\r\nconst initialState = {\r\n    rfId: '1',\r\n    width: 0,\r\n    height: 0,\r\n    transform: [0, 0, 1],\r\n    nodeInternals: new Map(),\r\n    edges: [],\r\n    onNodesChange: null,\r\n    onEdgesChange: null,\r\n    hasDefaultNodes: false,\r\n    hasDefaultEdges: false,\r\n    d3Zoom: null,\r\n    d3Selection: null,\r\n    d3ZoomHandler: undefined,\r\n    minZoom: 0.5,\r\n    maxZoom: 2,\r\n    translateExtent: infiniteExtent,\r\n    nodeExtent: infiniteExtent,\r\n    nodesSelectionActive: false,\r\n    userSelectionActive: false,\r\n    connectionNodeId: null,\r\n    connectionHandleId: null,\r\n    connectionHandleType: 'source',\r\n    connectionPosition: { x: 0, y: 0 },\r\n    connectionMode: ConnectionMode.Strict,\r\n    domNode: null,\r\n    paneDragging: false,\r\n    noPanClassName: 'nopan',\r\n    nodeOrigin: [0, 0],\r\n    snapGrid: [15, 15],\r\n    snapToGrid: false,\r\n    nodesDraggable: true,\r\n    nodesConnectable: true,\r\n    elementsSelectable: true,\r\n    fitViewOnInit: false,\r\n    fitViewOnInitDone: false,\r\n    fitViewOnInitOptions: undefined,\r\n    multiSelectionActive: false,\r\n    connectionStartHandle: null,\r\n    connectOnClick: true,\r\n    ariaLiveMessage: '',\r\n};\n\nconst createRFStore = () => createStore((set, get) => ({\r\n    ...initialState,\r\n    setNodes: (nodes) => {\r\n        set({ nodeInternals: createNodeInternals(nodes, get().nodeInternals) });\r\n    },\r\n    setEdges: (edges) => {\r\n        const { defaultEdgeOptions = {} } = get();\r\n        set({ edges: edges.map((e) => ({ ...defaultEdgeOptions, ...e })) });\r\n    },\r\n    setDefaultNodesAndEdges: (nodes, edges) => {\r\n        const hasDefaultNodes = typeof nodes !== 'undefined';\r\n        const hasDefaultEdges = typeof edges !== 'undefined';\r\n        const nodeInternals = hasDefaultNodes ? createNodeInternals(nodes, new Map()) : new Map();\r\n        const nextEdges = hasDefaultEdges ? edges : [];\r\n        set({ nodeInternals, edges: nextEdges, hasDefaultNodes, hasDefaultEdges });\r\n    },\r\n    updateNodeDimensions: (updates) => {\r\n        const { onNodesChange, nodeInternals, fitViewOnInit, fitViewOnInitDone, fitViewOnInitOptions, domNode, nodeOrigin, } = get();\r\n        const viewportNode = domNode?.querySelector('.react-flow__viewport');\r\n        if (!viewportNode) {\r\n            return;\r\n        }\r\n        const style = window.getComputedStyle(viewportNode);\r\n        const { m22: zoom } = new window.DOMMatrixReadOnly(style.transform);\r\n        const changes = updates.reduce((res, update) => {\r\n            const node = nodeInternals.get(update.id);\r\n            if (node) {\r\n                const dimensions = getDimensions(update.nodeElement);\r\n                const doUpdate = !!(dimensions.width &&\r\n                    dimensions.height &&\r\n                    (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\r\n                if (doUpdate) {\r\n                    nodeInternals.set(node.id, {\r\n                        ...node,\r\n                        [internalsSymbol]: {\r\n                            ...node[internalsSymbol],\r\n                            handleBounds: {\r\n                                source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\r\n                                target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin),\r\n                            },\r\n                        },\r\n                        ...dimensions,\r\n                    });\r\n                    res.push({\r\n                        id: node.id,\r\n                        type: 'dimensions',\r\n                        dimensions,\r\n                    });\r\n                }\r\n            }\r\n            return res;\r\n        }, []);\r\n        const nextFitViewOnInitDone = fitViewOnInitDone ||\r\n            (fitViewOnInit && !fitViewOnInitDone && fitView(get, { initial: true, ...fitViewOnInitOptions }));\r\n        set({ nodeInternals: new Map(nodeInternals), fitViewOnInitDone: nextFitViewOnInitDone });\r\n        if (changes?.length > 0) {\r\n            onNodesChange?.(changes);\r\n        }\r\n    },\r\n    updateNodePositions: (nodeDragItems, positionChanged = true, dragging = false) => {\r\n        const { onNodesChange, nodeInternals, hasDefaultNodes } = get();\r\n        if (hasDefaultNodes || onNodesChange) {\r\n            const changes = nodeDragItems.map((node) => {\r\n                const change = {\r\n                    id: node.id,\r\n                    type: 'position',\r\n                    dragging,\r\n                };\r\n                if (positionChanged) {\r\n                    change.positionAbsolute = node.positionAbsolute;\r\n                    change.position = node.position;\r\n                }\r\n                return change;\r\n            });\r\n            if (changes?.length) {\r\n                if (hasDefaultNodes) {\r\n                    const nodes = applyNodeChanges(changes, Array.from(nodeInternals.values()));\r\n                    const nextNodeInternals = createNodeInternals(nodes, nodeInternals);\r\n                    set({ nodeInternals: nextNodeInternals });\r\n                }\r\n                onNodesChange?.(changes);\r\n            }\r\n        }\r\n    },\r\n    addSelectedNodes: (selectedNodeIds) => {\r\n        const { multiSelectionActive, nodeInternals, edges } = get();\r\n        let changedNodes;\r\n        let changedEdges = null;\r\n        if (multiSelectionActive) {\r\n            changedNodes = selectedNodeIds.map((nodeId) => createSelectionChange(nodeId, true));\r\n        }\r\n        else {\r\n            changedNodes = getSelectionChanges(Array.from(nodeInternals.values()), selectedNodeIds);\r\n            changedEdges = getSelectionChanges(edges, []);\r\n        }\r\n        updateNodesAndEdgesSelections({\r\n            changedNodes,\r\n            changedEdges,\r\n            get,\r\n            set,\r\n        });\r\n    },\r\n    addSelectedEdges: (selectedEdgeIds) => {\r\n        const { multiSelectionActive, edges, nodeInternals } = get();\r\n        let changedEdges;\r\n        let changedNodes = null;\r\n        if (multiSelectionActive) {\r\n            changedEdges = selectedEdgeIds.map((edgeId) => createSelectionChange(edgeId, true));\r\n        }\r\n        else {\r\n            changedEdges = getSelectionChanges(edges, selectedEdgeIds);\r\n            changedNodes = getSelectionChanges(Array.from(nodeInternals.values()), []);\r\n        }\r\n        updateNodesAndEdgesSelections({\r\n            changedNodes,\r\n            changedEdges,\r\n            get,\r\n            set,\r\n        });\r\n    },\r\n    unselectNodesAndEdges: ({ nodes, edges } = {}) => {\r\n        const { nodeInternals, edges: storeEdges } = get();\r\n        const nodesToUnselect = nodes ? nodes : Array.from(nodeInternals.values());\r\n        const edgesToUnselect = edges ? edges : storeEdges;\r\n        const changedNodes = nodesToUnselect.map((n) => {\r\n            n.selected = false;\r\n            return createSelectionChange(n.id, false);\r\n        });\r\n        const changedEdges = edgesToUnselect.map((edge) => createSelectionChange(edge.id, false));\r\n        updateNodesAndEdgesSelections({\r\n            changedNodes,\r\n            changedEdges,\r\n            get,\r\n            set,\r\n        });\r\n    },\r\n    setMinZoom: (minZoom) => {\r\n        const { d3Zoom, maxZoom } = get();\r\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\r\n        set({ minZoom });\r\n    },\r\n    setMaxZoom: (maxZoom) => {\r\n        const { d3Zoom, minZoom } = get();\r\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\r\n        set({ maxZoom });\r\n    },\r\n    setTranslateExtent: (translateExtent) => {\r\n        const { d3Zoom } = get();\r\n        d3Zoom?.translateExtent(translateExtent);\r\n        set({ translateExtent });\r\n    },\r\n    resetSelectedElements: () => {\r\n        const { nodeInternals, edges } = get();\r\n        const nodes = Array.from(nodeInternals.values());\r\n        const nodesToUnselect = nodes\r\n            .filter((e) => e.selected)\r\n            .map((n) => createSelectionChange(n.id, false));\r\n        const edgesToUnselect = edges\r\n            .filter((e) => e.selected)\r\n            .map((e) => createSelectionChange(e.id, false));\r\n        updateNodesAndEdgesSelections({\r\n            changedNodes: nodesToUnselect,\r\n            changedEdges: edgesToUnselect,\r\n            get,\r\n            set,\r\n        });\r\n    },\r\n    setNodeExtent: (nodeExtent) => {\r\n        const { nodeInternals } = get();\r\n        nodeInternals.forEach((node) => {\r\n            node.positionAbsolute = clampPosition(node.position, nodeExtent);\r\n        });\r\n        set({\r\n            nodeExtent,\r\n            nodeInternals: new Map(nodeInternals),\r\n        });\r\n    },\r\n    reset: () => set({ ...initialState }),\r\n}));\n\nconst ReactFlowProvider = ({ children }) => {\r\n    const storeRef = useRef(null);\r\n    if (!storeRef.current) {\r\n        storeRef.current = createRFStore();\r\n    }\r\n    return jsx(Provider$1, { value: storeRef.current, children: children });\r\n};\r\nReactFlowProvider.displayName = 'ReactFlowProvider';\n\nconst Wrapper = ({ children }) => {\r\n    let isWrapped = true;\r\n    try {\r\n        useStoreApi();\r\n    }\r\n    catch (e) {\r\n        isWrapped = false;\r\n    }\r\n    if (isWrapped) {\r\n        // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\r\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\r\n        return jsx(Fragment, { children: children });\r\n    }\r\n    return jsx(ReactFlowProvider, { children: children });\r\n};\r\nWrapper.displayName = 'ReactFlowWrapper';\n\nconst defaultNodeTypes = {\r\n    input: InputNode$1,\r\n    default: DefaultNode$1,\r\n    output: OutputNode$1,\r\n    group: GroupNode,\r\n};\r\nconst defaultEdgeTypes = {\r\n    default: BezierEdge,\r\n    straight: StraightEdge,\r\n    step: StepEdge,\r\n    smoothstep: SmoothStepEdge,\r\n    simplebezier: SimpleBezierEdge,\r\n};\r\nconst initNodeOrigin = [0, 0];\r\nconst initSnapGrid = [15, 15];\r\nconst initDefaultViewport = { x: 0, y: 0, zoom: 1 };\r\nconst wrapperStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n};\r\nconst ReactFlow = forwardRef(({ nodes, edges, defaultNodes, defaultEdges, className, nodeTypes = defaultNodeTypes, edgeTypes = defaultEdgeTypes, onNodeClick, onEdgeClick, onInit, onMove, onMoveStart, onMoveEnd, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onNodeDoubleClick, onNodeDragStart, onNodeDrag, onNodeDragStop, onNodesDelete, onEdgesDelete, onSelectionChange, onSelectionDragStart, onSelectionDrag, onSelectionDragStop, onSelectionContextMenu, connectionMode = ConnectionMode.Strict, connectionLineType = ConnectionLineType.Bezier, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, deleteKeyCode = 'Backspace', selectionKeyCode = 'Shift', multiSelectionKeyCode = 'Meta', zoomActivationKeyCode = 'Meta', snapToGrid = false, snapGrid = initSnapGrid, onlyRenderVisibleElements = false, selectNodesOnDrag = true, nodesDraggable, nodesConnectable, nodeOrigin = initNodeOrigin, elementsSelectable, defaultViewport = initDefaultViewport, minZoom = 0.5, maxZoom = 2, translateExtent = infiniteExtent, preventScrolling = true, nodeExtent, defaultMarkerColor = '#b1b1b7', zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, panOnDrag = true, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, children, onEdgeUpdate, onEdgeContextMenu, onEdgeDoubleClick, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeUpdateStart, onEdgeUpdateEnd, edgeUpdaterRadius = 10, onNodesChange, onEdgesChange, noDragClassName = 'nodrag', noWheelClassName = 'nowheel', noPanClassName = 'nopan', fitView = false, fitViewOptions, connectOnClick = true, attributionPosition, proOptions, defaultEdgeOptions, elevateEdgesOnSelect = false, disableKeyboardA11y = false, style, id = '1', ...rest }, ref) => {\r\n    const nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\r\n    const edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\r\n    return (jsx(\"div\", { ...rest, style: { ...style, ...wrapperStyle }, ref: ref, className: cc(['react-flow', className]), \"data-testid\": \"rf__wrapper\", children: jsxs(Wrapper, { children: [jsx(GraphView$1, { onInit: onInit, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onNodeClick: onNodeClick, onEdgeClick: onEdgeClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, onNodeDoubleClick: onNodeDoubleClick, nodeTypes: nodeTypesWrapped, edgeTypes: edgeTypesWrapped, connectionLineType: connectionLineType, connectionLineStyle: connectionLineStyle, connectionLineComponent: connectionLineComponent, connectionLineContainerStyle: connectionLineContainerStyle, selectionKeyCode: selectionKeyCode, deleteKeyCode: deleteKeyCode, multiSelectionKeyCode: multiSelectionKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, onlyRenderVisibleElements: onlyRenderVisibleElements, selectNodesOnDrag: selectNodesOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, preventScrolling: preventScrolling, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneScroll: onPaneScroll, onPaneContextMenu: onPaneContextMenu, onSelectionContextMenu: onSelectionContextMenu, onEdgeUpdate: onEdgeUpdate, onEdgeContextMenu: onEdgeContextMenu, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, elevateEdgesOnSelect: elevateEdgesOnSelect, rfId: id, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent }), jsx(StoreUpdater, { nodes: nodes, edges: edges, defaultNodes: defaultNodes, defaultEdges: defaultEdges, onConnect: onConnect, onConnectStart: onConnectStart, onConnectEnd: onConnectEnd, onClickConnectStart: onClickConnectStart, onClickConnectEnd: onClickConnectEnd, nodesDraggable: nodesDraggable, nodesConnectable: nodesConnectable, elementsSelectable: elementsSelectable, minZoom: minZoom, maxZoom: maxZoom, nodeExtent: nodeExtent, onNodesChange: onNodesChange, onEdgesChange: onEdgesChange, snapToGrid: snapToGrid, snapGrid: snapGrid, connectionMode: connectionMode, translateExtent: translateExtent, connectOnClick: connectOnClick, defaultEdgeOptions: defaultEdgeOptions, fitView: fitView, fitViewOptions: fitViewOptions, onNodesDelete: onNodesDelete, onEdgesDelete: onEdgesDelete, onNodeDragStart: onNodeDragStart, onNodeDrag: onNodeDrag, onNodeDragStop: onNodeDragStop, onSelectionDrag: onSelectionDrag, onSelectionDragStart: onSelectionDragStart, onSelectionDragStop: onSelectionDragStop, noPanClassName: noPanClassName, nodeOrigin: nodeOrigin, id: id }), onSelectionChange && jsx(SelectionListener$1, { onSelectionChange: onSelectionChange }), children, jsx(Attribution, { proOptions: proOptions, position: attributionPosition }), !disableKeyboardA11y && jsx(A11yDescriptions, { rfId: id })] }) }));\r\n});\r\nReactFlow.displayName = 'ReactFlow';\n\nfunction useUpdateNodeInternals() {\r\n    const store = useStoreApi();\r\n    return useCallback((id) => {\r\n        const { domNode, updateNodeDimensions } = store.getState();\r\n        const nodeElement = domNode?.querySelector(`.react-flow__node[data-id=\"${id}\"]`);\r\n        if (nodeElement) {\r\n            requestAnimationFrame(() => updateNodeDimensions([{ id, nodeElement, forceUpdate: true }]));\r\n        }\r\n    }, []);\r\n}\n\nconst nodesSelector = (state) => Array.from(state.nodeInternals.values());\r\nfunction useNodes() {\r\n    const nodes = useStore(nodesSelector);\r\n    return nodes;\r\n}\n\nconst edgesSelector = (state) => state.edges;\r\nfunction useEdges() {\r\n    const edges = useStore(edgesSelector);\r\n    return edges;\r\n}\n\nconst viewportSelector = (state) => ({\r\n    x: state.transform[0],\r\n    y: state.transform[1],\r\n    zoom: state.transform[2],\r\n});\r\nfunction useViewport() {\r\n    const viewport = useStore(viewportSelector, shallow);\r\n    return viewport;\r\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nfunction createUseItemsState(applyChanges) {\r\n    return (initialItems) => {\r\n        const [items, setItems] = useState(initialItems);\r\n        const onItemsChange = useCallback((changes) => setItems((items) => applyChanges(changes, items)), []);\r\n        return [items, setItems, onItemsChange];\r\n    };\r\n}\r\nconst useNodesState = createUseItemsState(applyNodeChanges);\r\nconst useEdgesState = createUseItemsState(applyEdgeChanges);\n\nfunction useOnViewportChange({ onStart, onChange, onEnd }) {\r\n    const store = useStoreApi();\r\n    useEffect(() => {\r\n        store.setState({ onViewportChangeStart: onStart });\r\n    }, [onStart]);\r\n    useEffect(() => {\r\n        store.setState({ onViewportChange: onChange });\r\n    }, [onChange]);\r\n    useEffect(() => {\r\n        store.setState({ onViewportChangeEnd: onEnd });\r\n    }, [onEnd]);\r\n}\n\nfunction useOnSelectionChange({ onChange }) {\r\n    const store = useStoreApi();\r\n    useEffect(() => {\r\n        store.setState({ onSelectionChange: onChange });\r\n    }, [onChange]);\r\n}\n\nconst selector = (s) => {\r\n    if (s.nodeInternals.size === 0) {\r\n        return false;\r\n    }\r\n    return Array.from(s.nodeInternals.values()).every((n) => n[internalsSymbol]?.handleBounds !== undefined);\r\n};\r\nfunction useNodesInitialized() {\r\n    const initialized = useStore(selector);\r\n    return initialized;\r\n}\n\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, internalsSymbol, isEdge, isNode, rectToBox, updateEdge, useEdges, useEdgesState, useKeyPress, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}